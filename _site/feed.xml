<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-05-03T22:32:20+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Joshua Kim</title><subtitle>Analytics Engineer | Data Analyst</subtitle><entry><title type="html">데이터 마트 모델링 후기 (First Activation Funnel 지표)</title><link href="http://localhost:4000/first-activation-data-mart-ko/" rel="alternate" type="text/html" title="데이터 마트 모델링 후기 (First Activation Funnel 지표)" /><published>2025-01-25T00:00:00+09:00</published><updated>2025-01-25T00:00:00+09:00</updated><id>http://localhost:4000/first-activation-data-mart-ko</id><content type="html" xml:base="http://localhost:4000/first-activation-data-mart-ko/"><![CDATA[<blockquote>
  <p>“신규 사용자 활성 전환율 지표를 효과적으로 제공하기 위해 데이터 마트를 직접 설계하고 구축한 경험을 정리했습니다. 비즈니스 요구사항 변화에 유연하게 대응할 수 있도록 데이터 모델을 설계했고, 실무에서 바로 활용 가능한 쿼리와 구조를 고민했습니다. 이 과정을 통해 데이터 모델링 이론을 실제 문제 해결에 적용하는 역량과, 요구사항을 깊이 있게 파악하는 중요성을 다시 한 번 체감할 수 있었습니다.”</p>
</blockquote>

<p><img src="/assets/2025-01-25-first-activation-data-mart/3.webp" alt="" /></p>

<hr />

<h1 id="목차">목차</h1>
<ol>
  <li><strong>스쿼드 조직이 발족됐어요!</strong>
    <ul>
      <li>1.1. 배경</li>
      <li>1.2. 스쿼드 조직의 핵심 지표</li>
      <li>1.3. 데이터쟁이가 할 일</li>
    </ul>
  </li>
  <li><strong>데이터쟁이, 머리를 굴리다.</strong>
    <ul>
      <li>2.1. 핵심 지표를 곱씹어봤어요.</li>
      <li>2.2. 데이터 마트를 만들자!</li>
    </ul>
  </li>
  <li><strong>데이터 마트, 미리 살펴보시죠!</strong>
    <ul>
      <li>3.1. <code class="language-plaintext highlighter-rouge">dim__users</code></li>
      <li>3.2. <code class="language-plaintext highlighter-rouge">fact__first_activation_events</code></li>
      <li>3.3. 레코드 사례로 살펴볼까요?</li>
      <li>3.4. 이런 특징을 지니고 있어요.</li>
    </ul>
  </li>
  <li><strong>이런 식으로 쿼리를 작성할 수 있어요.</strong>
    <ul>
      <li>4.1. 데이터 마트가 이런 사용성을 지니도록 도모했어요.</li>
      <li>4.2. 초급 쿼리</li>
      <li>4.3. 중급 쿼리</li>
      <li>4.4. 고급 쿼리</li>
    </ul>
  </li>
  <li><strong>이렇게 모델링했어요.</strong>
    <ul>
      <li>5.1. [STEP 1] <code class="language-plaintext highlighter-rouge">dim__users</code> 테이블 전체를 불러와요.</li>
      <li>5.2. [STEP 2] 신규 <code class="language-plaintext highlighter-rouge">first_visit</code> 데이터만 남겨요.</li>
      <li>5.3. [STEP 3] <code class="language-plaintext highlighter-rouge">fact__events</code> 테이블을 증분적으로 불러와요.</li>
      <li>5.4. [STEP 4] 신규 최초 Key Events 데이터만 남겨요.</li>
      <li>5.5. [STEP 5] 신규 <code class="language-plaintext highlighter-rouge">first_visit</code> 및 신규 최초 Key Events 데이터 합쳐서 삽입해요.</li>
      <li>5.6. 마지막으로 다시 살펴볼까요?</li>
    </ul>
  </li>
  <li><strong>모델링 후기를 정리해볼게요.</strong>
    <ul>
      <li>6.1. 요구사항을 잘 정리해야, 좋은 데이터 마트를 만들 수 있어요.</li>
      <li>6.2. 데이터 모델링은 이론 학습만으로 완성되지 않아요.</li>
    </ul>
  </li>
  <li><strong>감사의 인사를 드려요.</strong>
    <ul>
      <li>7.1. 토스증권의 “DW 설계 후기” 영상에서 영감을 얻었어요.</li>
      <li>7.2. 스쿼드 리더 분께 정말 감사 드려요.</li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="1-스쿼드-조직이-발족됐어요">1. 스쿼드 조직이 발족됐어요!</h1>

<h3 id="11-배경">1.1. 배경</h3>

<blockquote>
  <p>단순한 유입이 아니라, 신규 사용자를 제품에 Lock-in시키는 제품 개선과 마케팅 활동을 진행해보자!</p>
</blockquote>

<h3 id="12-스쿼드-조직의-핵심-지표">1.2. 스쿼드 조직의 핵심 지표</h3>

<blockquote>
  <p>“<strong>신규 방문 후 1일 이내 Key Event 1을 수행하고, 7일 이내에 Key Event 2를 수행하는 전환율</strong>”을 높여보자!</p>
</blockquote>

<p><img src="/assets/2025-01-25-first-activation-data-mart/1.webp" alt="" /></p>

<p><img src="/assets/2025-01-25-first-activation-data-mart/2.webp" alt="" /></p>

<h3 id="13-데이터쟁이가-할-일">1.3. 데이터쟁이가 할 일</h3>

<blockquote>
  <p>“핵심 지표를 잘 뜯어볼 수 있도록 데이터를 준비하고 대시보드로 제공해주세요.”</p>
</blockquote>

<h1 id="2-데이터쟁이-머리를-굴리다">2. 데이터쟁이, 머리를 굴리다.</h1>

<h3 id="21-핵심-지표를-곱씹어봤어요">2.1. 핵심 지표를 곱씹어봤어요.</h3>

<ul>
  <li>First Visit - Key Event 1 - Key Event 2 선후 관계가 명확함</li>
  <li>최대 전환기간 내에서만 전환 인정</li>
  <li>사용자 기준의 전환율 측정하기</li>
  <li>추후 스쿼드의 핵심 지표 변동 가능성: Key Event과 최대 전환기간</li>
</ul>

<h3 id="22-데이터-마트를-만들자">2.2. 데이터 마트를 만들자!</h3>

<ul>
  <li>Core Layer의 <code class="language-plaintext highlighter-rouge">fact__events</code>에 의존한 쿼리를 실행하면 쿼리가 지나치게 어려워지고, 비용도 많이 들 것 같아.</li>
  <li>핵심 지표 변동 가능성에 따라 쿼리의 정확성과 딜리버리를 통제하기 어려워질 것 같아.</li>
</ul>

<h1 id="3-데이터-마트-미리-살펴보시죠">3. 데이터 마트, 미리 살펴보시죠!</h1>

<h3 id="31-dim__users">3.1. <code class="language-plaintext highlighter-rouge">dim__users</code></h3>

<ul>
  <li>이미 Core Layer 상에서 Conformed Dimension으로 관리하고 있었어요.</li>
  <li>SCD Type 1에 해당해요. (과거 값을 보존하지 않고, 가장 최신 값만 유지해요.)</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>Column</strong></th>
      <th><strong>Description</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">user_id</code></td>
      <td>사용자 ID</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_date</code></td>
      <td>최초 방문일자</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_datetime</code></td>
      <td>최초 방문일시</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">country</code></td>
      <td>최근 접속 국가</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">device_os</code></td>
      <td>최근 접속 기기 OS</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">app_version</code></td>
      <td>최근 앱 다운로드 버전</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_campaign</code></td>
      <td>최초 방문시 UTM Campaign</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_medium</code></td>
      <td>최초 방문시 UTM Medium</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_source</code></td>
      <td>최초 방문시 UTM Source</td>
    </tr>
    <tr>
      <td>…</td>
      <td>…</td>
    </tr>
  </tbody>
</table>

<h3 id="32-fact__first_activation_events">3.2. <code class="language-plaintext highlighter-rouge">fact__first_activation_events</code></h3>

<ul>
  <li>이번 데이터 마트에 새롭게 만든 테이블이에요.</li>
  <li>각 사용자의 최초 이벤트들만 적재해요.</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>Column</strong></th>
      <th><strong>Description</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">date</code></td>
      <td>이벤트 최초 발생 일자</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">datetime</code></td>
      <td>이벤트 최초 발생 일시</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">user_id</code></td>
      <td>사용자 ID</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">event_name</code></td>
      <td>이벤트 이름</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_visit_date</code></td>
      <td>사용자의 최초 방문 일자</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_visit_datetime</code></td>
      <td>사용자의 최초 방문 일시</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">hours_from_first_visit</code></td>
      <td>최초 방문 후 이벤트 최초 발생까지 소요된 시간 수</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">days_from_first_visit</code></td>
      <td>최초 방문 후 이벤트 최초 발생까지 소요된 일 수</td>
    </tr>
  </tbody>
</table>

<h3 id="33-레코드-사례로-살펴볼까요">3.3. 레코드 사례로 살펴볼까요?</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">fact__events</code> 테이블이 다음과 같을 경우, <code class="language-plaintext highlighter-rouge">fact__first_activation_events</code> 테이블은 다음과 같이 구성될 거예요.</li>
</ul>

<p><strong><code class="language-plaintext highlighter-rouge">fact__events</code></strong></p>

<ul>
  <li>김진석의 이벤트 로그가 다음과 같이 존재할 경우,</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>date</strong></th>
      <th><strong>datetime</strong></th>
      <th><strong>user_id</strong></th>
      <th><strong>event_name</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>진석</td>
      <td><code class="language-plaintext highlighter-rouge">first_visit</code></td>
    </tr>
    <tr>
      <td>2025-01-01</td>
      <td>2025-01-01 01:01:00</td>
      <td>진석</td>
      <td><code class="language-plaintext highlighter-rouge">add_to_cart</code></td>
    </tr>
    <tr>
      <td>2025-01-02</td>
      <td>2025-01-02 01:00:00</td>
      <td>진석</td>
      <td><code class="language-plaintext highlighter-rouge">add_to_cart</code></td>
    </tr>
    <tr>
      <td>2025-01-02</td>
      <td>2025-01-02 01:01:00</td>
      <td>진석</td>
      <td><code class="language-plaintext highlighter-rouge">purchase</code></td>
    </tr>
  </tbody>
</table>

<p><strong><code class="language-plaintext highlighter-rouge">fact__first_activation_events</code></strong></p>

<ul>
  <li>최초 이벤트들만 남긴 후 필요한 정보를 칼럼으로 추가해요.</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>date</strong></th>
      <th><strong>datetime</strong></th>
      <th><strong>user_id</strong></th>
      <th><strong>event_name</strong></th>
      <th><strong>first_visit_date</strong></th>
      <th><strong>first_visit_datetime</strong></th>
      <th><strong>hours_from_first_visit</strong></th>
      <th><strong>days_from_first_visit</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>진석</td>
      <td><code class="language-plaintext highlighter-rouge">first_visit</code></td>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>2025-01-01</td>
      <td>2025-01-01 01:01:00</td>
      <td>진석</td>
      <td><code class="language-plaintext highlighter-rouge">add_to_cart</code></td>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>2025-01-02</td>
      <td>2025-01-02 01:01:00</td>
      <td>진석</td>
      <td><code class="language-plaintext highlighter-rouge">purchase</code></td>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>25</td>
      <td>2</td>
    </tr>
  </tbody>
</table>

<h3 id="34-이런-특징을-지니고-있어요">3.4. 이런 특징을 지니고 있어요.</h3>

<ul>
  <li>Transaction Fact Table이에요. (<code class="language-plaintext highlighter-rouge">user_id</code>가 살아 있는 테이블이라, 추후 <code class="language-plaintext highlighter-rouge">dim__users</code>을 통해 Dimension 필터링을 용이하게 사용할 수 있어요.)</li>
  <li>Grain이 <code class="language-plaintext highlighter-rouge">user_id</code> + <code class="language-plaintext highlighter-rouge">event_name</code> 조합이에요. (각 사용자의 최초 이벤트들만 저장되니까요.)</li>
  <li>전환기간 정보가 Pre-calculated Non-additive Fact로 담겨 있어요. (추후 Join이나 Window Function을 굳이 사용하지 않아도 돼요.)</li>
</ul>

<h1 id="4-이런-식으로-쿼리를-작성할-수-있어요">4. 이런 식으로 쿼리를 작성할 수 있어요.</h1>

<h3 id="41-데이터-마트가-이런-사용성을-지니도록-도모했어요">4.1. 데이터 마트가 이런 사용성을 지니도록 도모했어요.</h3>

<ul>
  <li>핵심 지표의 Key Event가 변경되면? → <code class="language-plaintext highlighter-rouge">event_name</code> 부분만 수정하면 돼요.</li>
  <li>핵심 지표의 최대 전환기간이 변경되면? → <code class="language-plaintext highlighter-rouge">hours_from_first_visit</code>, <code class="language-plaintext highlighter-rouge">days_from_first_visit</code> 부분만 수정하면 돼요.</li>
  <li>사용자 속성 필터링이 필요하면? → <code class="language-plaintext highlighter-rouge">dim__users</code> JOIN만 하면 돼요.</li>
</ul>

<h3 id="42-초급-쿼리">4.2. 초급 쿼리</h3>

<ul>
  <li>☝🏻 <code class="language-plaintext highlighter-rouge">key_event_1</code> 전환 사용자 수 추이를 알려주세요. (전환기간은 상관 없어요.)</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="nb">date</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
        <span class="n">fact__first_activation_events</span>
    <span class="k">WHERE</span> <span class="k">TRUE</span>
        <span class="k">AND</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="mi">1</span>
</code></pre></div></div>

<h3 id="43-중급-쿼리">4.3. 중급 쿼리</h3>

<ul>
  <li>☝🏻 <code class="language-plaintext highlighter-rouge">first_visit</code> → 1일 이내 <code class="language-plaintext highlighter-rouge">key_event_1</code> 전환율 추이를 알려주세요.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="n">first_visit_date</span> <span class="k">AS</span> <span class="n">cohort_date</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_visit</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_1</span>
    <span class="k">FROM</span>
        <span class="n">fact__first_activation_events</span>
    <span class="k">WHERE</span> <span class="k">TRUE</span>
        <span class="k">AND</span> <span class="p">(</span>
            <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">AND</span> <span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">)</span>
        <span class="p">)</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="mi">1</span>
</code></pre></div></div>

<ul>
  <li>☝🏻 (스쿼드의 핵심 지표) <code class="language-plaintext highlighter-rouge">first_visit</code> → 1일 이내 <code class="language-plaintext highlighter-rouge">key_event_1</code> → 7일 이내 <code class="language-plaintext highlighter-rouge">key_event_2</code> 전환율 추이를 알려주세요.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="n">first_visit_date</span> <span class="k">AS</span> <span class="n">cohort_date</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_visit</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_1</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_2'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_2</span>
    <span class="k">FROM</span>
        <span class="n">fact__first_activation_events</span>
    <span class="k">WHERE</span> <span class="k">TRUE</span>
        <span class="k">AND</span> <span class="p">(</span>
            <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">AND</span> <span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">)</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_2'</span> <span class="k">AND</span> <span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">7</span><span class="p">)</span>
        <span class="p">)</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="mi">1</span>
</code></pre></div></div>

<h3 id="44-고급-쿼리">4.4. 고급 쿼리</h3>

<ul>
  <li>☝🏻 미국 사용자의 <code class="language-plaintext highlighter-rouge">first_visit</code> → 1일 이내 <code class="language-plaintext highlighter-rouge">key_event_1</code> → 7일 이내 <code class="language-plaintext highlighter-rouge">key_event_2</code> 전환율 추이를 알려주세요.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="n">FACT</span><span class="p">.</span><span class="n">first_visit_date</span> <span class="k">AS</span> <span class="n">cohort_date</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_visit</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_1</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_2'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_2</span>
    <span class="k">FROM</span>
        <span class="n">fact__first_activation_events</span> <span class="n">FACT</span>
    <span class="k">LEFT</span> <span class="k">JOIN</span>
        <span class="n">dim__users</span> <span class="n">DIM</span>
        <span class="k">ON</span> <span class="n">FACT</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">DIM</span><span class="p">.</span><span class="n">user_id</span>
    <span class="k">WHERE</span> <span class="k">TRUE</span>
        <span class="k">AND</span> <span class="n">DIM</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="s1">'United States'</span>
        <span class="k">AND</span> <span class="p">(</span>
            <span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">AND</span> <span class="n">FACT</span><span class="p">.</span><span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">)</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_2'</span> <span class="k">AND</span> <span class="n">FACT</span><span class="p">.</span><span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">7</span><span class="p">)</span>
        <span class="p">)</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="mi">1</span>
</code></pre></div></div>

<h1 id="5-이렇게-모델링했어요">5. 이렇게 모델링했어요.</h1>

<p><img src="/assets/2025-01-25-first-activation-data-mart/3.webp" alt="" /></p>

<h3 id="51-step-1-dim__users-테이블-전체를-불러와요">5.1. [STEP 1] <code class="language-plaintext highlighter-rouge">dim__users</code> 테이블 전체를 불러와요.</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/4.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">WITH</span>
    <span class="n">CTE_first_visits_raw</span> <span class="k">AS</span> <span class="p">(</span>
        <span class="k">SELECT</span>
            <span class="n">user_id</span><span class="p">,</span>
            <span class="n">first_date</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
            <span class="n">first_datetime</span> <span class="k">AS</span> <span class="nb">datetime</span>
        <span class="k">FROM</span>
            <span class="p">{{</span> <span class="k">ref</span><span class="p">(</span><span class="s1">'dim__users'</span><span class="p">)</span> <span class="p">}}</span>
    <span class="p">),</span>	
</code></pre></div></div>

<h3 id="52-step-2-신규-first_visit-데이터만-남겨요">5.2. [STEP 2] 신규 <code class="language-plaintext highlighter-rouge">first_visit</code> 데이터만 남겨요.</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/5.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>

    <span class="n">CTE_first_visits</span> <span class="k">AS</span> <span class="p">(</span>
        <span class="k">SELECT</span>
            <span class="n">SRC</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span>
            <span class="n">SRC</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
            <span class="n">SRC</span><span class="p">.</span><span class="nb">datetime</span>
        <span class="k">FROM</span>
            <span class="n">CTE_first_visits_raw</span> <span class="n">SRC</span>
        <span class="k">LEFT</span> <span class="k">JOIN</span> 
            <span class="p">{{</span> <span class="n">this</span> <span class="p">}}</span> <span class="k">EXISTING</span>
            <span class="k">ON</span> <span class="n">SRC</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">user_id</span>
            <span class="k">AND</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span>
        <span class="k">WHERE</span> <span class="k">TRUE</span>
            <span class="k">AND</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">user_id</span> <span class="k">IS</span> <span class="k">NULL</span>
    <span class="p">),</span>

    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</code></pre></div></div>

<h3 id="53-step-3-fact__events-테이블을-증분적으로-불러와요">5.3. [STEP 3] <code class="language-plaintext highlighter-rouge">fact__events</code> 테이블을 증분적으로 불러와요.</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/6.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">CTE_events_raw</span> <span class="k">AS</span> <span class="p">(</span>
        <span class="k">SELECT</span>
            <span class="n">user_id</span><span class="p">,</span>
            <span class="n">event_name</span><span class="p">,</span>
            <span class="k">MIN</span><span class="p">(</span><span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
            <span class="k">MIN</span><span class="p">(</span><span class="nb">datetime</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">datetime</span>
        <span class="k">FROM</span>
            <span class="p">{{</span> <span class="k">ref</span><span class="p">(</span><span class="s1">'fact__events'</span><span class="p">)</span> <span class="p">}}</span>
        <span class="k">WHERE</span> <span class="k">TRUE</span>
            <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>
            <span class="k">AND</span> <span class="nb">datetime</span> <span class="o">&gt;</span> <span class="p">(</span><span class="k">SELECT</span> <span class="k">MAX</span><span class="p">(</span><span class="nb">datetime</span><span class="p">)</span> <span class="k">FROM</span> <span class="p">{{</span> <span class="n">this</span> <span class="p">}})</span>
            <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
            <span class="k">AND</span> <span class="n">event_name</span> <span class="k">IN</span> <span class="p">(</span>
                <span class="s1">'Key Event 1'</span><span class="p">,</span>
                <span class="s1">'Key Event 2'</span><span class="p">,</span>
                <span class="p">...</span>
            <span class="p">)</span>
        <span class="k">GROUP</span> <span class="k">BY</span>
            <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
    <span class="p">)</span>
</code></pre></div></div>

<h3 id="54-step-4-신규-최초-key-events-데이터만-남겨요">5.4. [STEP 4] 신규 최초 Key Events 데이터만 남겨요.</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/7.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>
    <span class="p">,</span>

    <span class="n">CTE_events</span> <span class="k">AS</span> <span class="p">(</span>
        <span class="k">SELECT</span>
            <span class="n">SRC</span><span class="p">.</span><span class="o">*</span>
        <span class="k">FROM</span>
            <span class="n">CTE_events_raw</span> <span class="n">SRC</span>
        <span class="k">LEFT</span> <span class="k">JOIN</span> 
            <span class="p">{{</span> <span class="n">this</span> <span class="p">}}</span> <span class="k">EXISTING</span>
            <span class="k">ON</span> <span class="n">SRC</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">user_id</span>
            <span class="k">AND</span> <span class="n">SRC</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">event_name</span>
        <span class="k">WHERE</span> <span class="k">TRUE</span>
            <span class="k">AND</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">user_id</span> <span class="k">IS</span> <span class="k">NULL</span>
            <span class="k">AND</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">event_name</span> <span class="k">IS</span> <span class="k">NULL</span>
    <span class="p">)</span>

    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</code></pre></div></div>

<h3 id="55-step-5-신규-first_visit-및-신규-최초-key-events-데이터-합쳐서-삽입해요">5.5. [STEP 5] 신규 <code class="language-plaintext highlighter-rouge">first_visit</code> 및 신규 최초 Key Events 데이터 합쳐서 삽입해요.</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/8.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="nb">date</span><span class="p">,</span>
        <span class="nb">datetime</span><span class="p">,</span>
        <span class="n">user_id</span><span class="p">,</span>
        <span class="s1">'first_visit'</span> <span class="k">AS</span> <span class="n">event_name</span><span class="p">,</span>
        <span class="nb">date</span> <span class="k">AS</span> <span class="n">first_visit_date</span><span class="p">,</span>
        <span class="nb">datetime</span> <span class="k">AS</span> <span class="n">first_visit_datetime</span><span class="p">,</span>
        <span class="k">NULL</span> <span class="k">AS</span> <span class="n">hours_from_first_visit</span><span class="p">,</span>
        <span class="k">NULL</span> <span class="k">AS</span> <span class="n">days_from_first_visit</span>
    <span class="k">FROM</span>
        <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>
        <span class="n">CTE_first_visits</span>
        <span class="p">{</span><span class="o">%</span> <span class="k">else</span> <span class="o">%</span><span class="p">}</span>
        <span class="n">CTE_first_visits_raw</span>
        <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>

    <span class="k">UNION</span> <span class="k">ALL</span>

    <span class="k">SELECT</span>
        <span class="n">FCT</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
        <span class="n">FCT</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span>
        <span class="n">FCT</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span>
        <span class="n">FCT</span><span class="p">.</span><span class="n">event_name</span><span class="p">,</span>
        <span class="n">DIM</span><span class="p">.</span><span class="nb">date</span> <span class="k">AS</span> <span class="n">first_visit_date</span><span class="p">,</span>
        <span class="n">DIM</span><span class="p">.</span><span class="nb">datetime</span> <span class="k">AS</span> <span class="n">first_visit_datetime</span><span class="p">,</span>
        <span class="n">TIMESTAMP_DIFF</span><span class="p">(</span>
            <span class="n">TIMESTAMP_TRUNC</span><span class="p">(</span><span class="n">FCT</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span> <span class="n">HOUR</span><span class="p">),</span>
            <span class="n">TIMESTAMP_TRUNC</span><span class="p">(</span><span class="n">DIM</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span> <span class="n">HOUR</span><span class="p">),</span>
            <span class="n">HOUR</span>
        <span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="k">AS</span> <span class="n">hours_from_first_visit</span><span class="p">,</span> <span class="c1">-- 1부터 시작</span>
        <span class="n">TIMESTAMP_DIFF</span><span class="p">(</span>
            <span class="n">TIMESTAMP_TRUNC</span><span class="p">(</span><span class="n">FCT</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span> <span class="k">DAY</span><span class="p">),</span>
            <span class="n">TIMESTAMP_TRUNC</span><span class="p">(</span><span class="n">DIM</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span> <span class="k">DAY</span><span class="p">),</span>
            <span class="k">DAY</span>
        <span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="k">AS</span> <span class="n">days_from_first_visit</span> <span class="c1">-- 1부터 시작</span>
    <span class="k">FROM</span>
        <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>
        <span class="n">CTE_events</span> <span class="n">FCT</span>
        <span class="p">{</span><span class="o">%</span> <span class="k">else</span> <span class="o">%</span><span class="p">}</span>
        <span class="n">CTE_events_raw</span> <span class="n">FCT</span> 
        <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
    <span class="k">INNER</span> <span class="k">JOIN</span>
        <span class="n">CTE_first_visits_raw</span> <span class="n">DIM</span>
        <span class="k">ON</span> <span class="n">FCT</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">DIM</span><span class="p">.</span><span class="n">user_id</span>
</code></pre></div></div>

<h3 id="56-마지막으로-다시-살펴볼까요">5.6. 마지막으로 다시 살펴볼까요?</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/3.webp" alt="" /></p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">models</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">fact__first_activation_events</span>
    <span class="na">description</span><span class="pi">:</span> <span class="s">사용자의 최초 이벤트 내역</span>
    <span class="na">meta</span><span class="pi">:</span>
      <span class="na">owner</span><span class="pi">:</span> <span class="s">김진석</span>
    <span class="na">config</span><span class="pi">:</span>
      <span class="na">materialized</span><span class="pi">:</span> <span class="s">incremental</span>
      <span class="na">incremental_strategy</span><span class="pi">:</span> <span class="s">insert_overwrite</span>
      <span class="na">on_schema_change</span><span class="pi">:</span> <span class="s">append_new_columns</span>
      <span class="na">partition_by</span><span class="pi">:</span>
        <span class="na">field</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">data_type</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">granularity</span><span class="pi">:</span> <span class="s">day</span>
      <span class="na">time_ingestion_partitioning</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">require_partition_filter</span><span class="pi">:</span> <span class="kc">false</span>
      <span class="na">copy_partitions</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">columns</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">...</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">...</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">...</span>
</code></pre></div></div>

<h1 id="6-모델링-후기를-정리해볼게요">6. 모델링 후기를 정리해볼게요.</h1>

<h3 id="61-요구사항을-잘-정리해야-좋은-데이터-마트를-만들-수-있어요">6.1. 요구사항을 잘 정리해야, 좋은 데이터 마트를 만들 수 있어요.</h3>

<ul>
  <li>좋은 데이터 마트 = 여러 번 지속적으로 써먹을 수 있는 데이터 마트</li>
  <li>스쿼드의 핵심 지표를 정확하게 이해하기 위해, 스쿼드 리더 분과 수 시간 동안 많은 이야기를 나눴어요.
    <ul>
      <li>전환율의 정의가 정확히 어떻게 되는가?</li>
      <li>핵심 지표가 추후 어떤 방향으로 변동될 수 있는가?</li>
    </ul>
  </li>
</ul>

<h3 id="62-데이터-모델링은-이론-학습만으로-완성되지-않아요">6.2. 데이터 모델링은 이론 학습만으로 완성되지 않아요.</h3>

<ul>
  <li>Kimball, Inmon 등 DWH에 대한 체계적인 이론이 있어요.</li>
  <li>하지만, 가장 중요한 건 “문제 해결에 도움이 되는가?”
    <ul>
      <li>조직의 데이터 활용 성향, 데이터 특성, 핵심 문제</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">fact__first_activation_events</code> 테이블은 이론에 기대어 만든 테이블이 아니에요.
    <ul>
      <li>조직이 필요해서 DWH 이론을 응용해서 만든 거예요.</li>
    </ul>
  </li>
</ul>

<h1 id="7-감사의-인사를-드려요">7. 감사의 인사를 드려요.</h1>

<h3 id="71-토스증권의-dw-설계-후기-영상에서-영감을-얻었어요">7.1. 토스증권의 “DW 설계 후기” 영상에서 영감을 얻었어요.</h3>

<blockquote>
  <p><a href="https://www.youtube.com/watch?v=MWDVBZycou4">토스ㅣSLASH 24 - 전천후 데이터 분석을 위한 DW 설계 및 운영하기</a></p>
</blockquote>

<ul>
  <li>사용자 활성화 정보를 적재하는 흐름을 파악하는 데 중요한 단서를 얻었어요.</li>
</ul>

<h3 id="72-스쿼드-리더-분께-정말-감사-드려요">7.2. 스쿼드 리더 분께 정말 감사 드려요.</h3>

<ul>
  <li>핵심 지표 데이터를 잘 제공해드리기 위한 저의 궁금증을 적극적으로 풀어주셨어요.
    <ul>
      <li>비즈니스 목표를 잘 조망할 수 있도록 여러모로 배경을 잘 알려주셨어요.</li>
      <li>핵심 지표를 함께 꼼꼼하게 정량화해주셨어요.</li>
    </ul>
  </li>
  <li>데이터쟁이가 조직의 목표에 잘 싱크업하는 눈을 기를 수 있도록 강도 높은 트레이닝을 해주셔서 진심으로 감사 드립니다.</li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (Korean)" /><category term="Article (Project)" /><category term="Level (2. Intermediate)" /><category term="Field (Analytics Engineering)" /><category term="Skills (SQL)" /><category term="Skills (dbt)" /><summary type="html"><![CDATA[“신규 사용자 활성 전환율 지표를 효과적으로 제공하기 위해 데이터 마트를 직접 설계하고 구축한 경험을 정리했습니다. 비즈니스 요구사항 변화에 유연하게 대응할 수 있도록 데이터 모델을 설계했고, 실무에서 바로 활용 가능한 쿼리와 구조를 고민했습니다. 이 과정을 통해 데이터 모델링 이론을 실제 문제 해결에 적용하는 역량과, 요구사항을 깊이 있게 파악하는 중요성을 다시 한 번 체감할 수 있었습니다.”]]></summary></entry><entry><title type="html">Data Mart Modeling Review (First Activation Funnel Metrics)</title><link href="http://localhost:4000/first-activation-data-mart-en/" rel="alternate" type="text/html" title="Data Mart Modeling Review (First Activation Funnel Metrics)" /><published>2025-01-25T00:00:00+09:00</published><updated>2025-01-25T00:00:00+09:00</updated><id>http://localhost:4000/first-activation-data-mart-en</id><content type="html" xml:base="http://localhost:4000/first-activation-data-mart-en/"><![CDATA[<blockquote>
  <p>“This post summarizes my experience designing and building a data mart to effectively provide new user activation conversion metrics. I designed the data model to flexibly respond to changing business requirements, and focused on queries and structures that are immediately applicable in practice. Through this process, I was able to apply data modeling theory to real-world problem solving and once again realized the importance of deeply understanding requirements.”</p>
</blockquote>

<p><img src="/assets/2025-01-25-first-activation-data-mart/3.webp" alt="" /></p>

<hr />

<h1 id="table-of-contents">Table of Contents</h1>
<ol>
  <li><strong>The Squad Organization Was Launched!</strong>
    <ul>
      <li>1.1. Background</li>
      <li>1.2. Core Metrics of the Squad</li>
      <li>1.3. What the Data Analyst Needs to Do</li>
    </ul>
  </li>
  <li><strong>What I Needed to Do</strong>
    <ul>
      <li>2.1. Reflecting on the Core Metrics</li>
      <li>2.2. Let’s Build a Data Mart!</li>
    </ul>
  </li>
  <li><strong>A Preview of the Data Mart</strong>
    <ul>
      <li>3.1. <code class="language-plaintext highlighter-rouge">dim__users</code></li>
      <li>3.2. <code class="language-plaintext highlighter-rouge">fact__first_activation_events</code></li>
      <li>3.3. Example Records</li>
      <li>3.4. Key Features</li>
    </ul>
  </li>
  <li><strong>Example Queries</strong>
    <ul>
      <li>4.1. Designed for Usability</li>
      <li>4.2. Beginner Query</li>
      <li>4.3. Intermediate Query</li>
      <li>4.4. Advanced Query</li>
    </ul>
  </li>
  <li><strong>How the Modeling Was Done</strong>
    <ul>
      <li>5.1. [STEP 1] Load the Entire <code class="language-plaintext highlighter-rouge">dim__users</code> Table</li>
      <li>5.2. [STEP 2] Keep Only New <code class="language-plaintext highlighter-rouge">first_visit</code> Data</li>
      <li>5.3. [STEP 3] Incrementally Load the <code class="language-plaintext highlighter-rouge">fact__events</code> Table</li>
      <li>5.4. [STEP 4] Keep Only New First Key Events</li>
      <li>5.5. [STEP 5] Combine and Insert New <code class="language-plaintext highlighter-rouge">first_visit</code> and First Key Events Data</li>
      <li>5.6. Final Review</li>
    </ul>
  </li>
  <li><strong>Modeling Review</strong>
    <ul>
      <li>6.1. Good Requirement Gathering Leads to Good Data Marts</li>
      <li>6.2. Data Modeling Is Not Complete with Theory Alone</li>
    </ul>
  </li>
  <li><strong>Acknowledgements</strong>
    <ul>
      <li>7.1. Inspired by Toss Securities’ “DW Design Review” Video</li>
      <li>7.2. Special Thanks to the Squad Leader</li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="1-the-squad-organization-was-launched">1. The Squad Organization Was Launched!</h1>

<h3 id="11-background">1.1. Background</h3>

<blockquote>
  <p>Let’s focus not just on user acquisition, but on product improvements and marketing activities that lock in new users!</p>
</blockquote>

<h3 id="12-core-metrics-of-the-squad">1.2. Core Metrics of the Squad</h3>

<blockquote>
  <p>“Let’s increase the <strong>conversion rate of users who perform Key Event 1 within 1 day after their first visit, and Key Event 2 within 7 days</strong>!”</p>
</blockquote>

<p><img src="/assets/2025-01-25-first-activation-data-mart/1.webp" alt="" /></p>

<p><img src="/assets/2025-01-25-first-activation-data-mart/2.webp" alt="" /></p>

<h3 id="13-what-the-data-analyst-needs-to-do">1.3. What the Data Analyst Needs to Do</h3>

<blockquote>
  <p>“Please prepare the data so that we can thoroughly analyze the core metrics and provide them via dashboard.”</p>
</blockquote>

<h1 id="2-what-i-needed-to-do">2. What I Needed to Do</h1>

<h3 id="21-reflecting-on-the-core-metrics">2.1. Reflecting on the Core Metrics</h3>

<ul>
  <li>The sequence of First Visit - Key Event 1 - Key Event 2 is clear.</li>
  <li>Only conversions within the maximum conversion period are recognized.</li>
  <li>Conversion rates are measured on a user basis.</li>
  <li>The squad’s core metrics may change in the future: Key Events and maximum conversion periods.</li>
</ul>

<h3 id="22-lets-build-a-data-mart">2.2. Let’s Build a Data Mart!</h3>

<ul>
  <li>Running queries directly on the Core Layer’s <code class="language-plaintext highlighter-rouge">fact__events</code> would be too complex and costly.</li>
  <li>With the possibility of changes in core metrics, it would be difficult to control query accuracy and delivery.</li>
</ul>

<h1 id="3-a-preview-of-the-data-mart">3. A Preview of the Data Mart</h1>

<h3 id="31-dim__users">3.1. <code class="language-plaintext highlighter-rouge">dim__users</code></h3>

<ul>
  <li>Already managed as a conformed dimension in the Core Layer.</li>
  <li>SCD Type 1 (only the latest value is kept, no historical values).</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>Column</strong></th>
      <th><strong>Description</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">user_id</code></td>
      <td>User ID</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_date</code></td>
      <td>First visit date</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_datetime</code></td>
      <td>First visit datetime</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">country</code></td>
      <td>Most recent country</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">device_os</code></td>
      <td>Most recent device OS</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">app_version</code></td>
      <td>Most recent app version</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_campaign</code></td>
      <td>UTM Campaign at first visit</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_medium</code></td>
      <td>UTM Medium at first visit</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_source</code></td>
      <td>UTM Source at first visit</td>
    </tr>
    <tr>
      <td>…</td>
      <td>…</td>
    </tr>
  </tbody>
</table>

<h3 id="32-fact__first_activation_events">3.2. <code class="language-plaintext highlighter-rouge">fact__first_activation_events</code></h3>

<ul>
  <li>This is a newly created table for this data mart.</li>
  <li>Only the first events for each user are stored.</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>Column</strong></th>
      <th><strong>Description</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">date</code></td>
      <td>Date of first event occurrence</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">datetime</code></td>
      <td>Datetime of first event occurrence</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">user_id</code></td>
      <td>User ID</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">event_name</code></td>
      <td>Event name</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_visit_date</code></td>
      <td>User’s first visit date</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">first_visit_datetime</code></td>
      <td>User’s first visit datetime</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">hours_from_first_visit</code></td>
      <td>Hours elapsed from first visit to first event</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">days_from_first_visit</code></td>
      <td>Days elapsed from first visit to first event</td>
    </tr>
  </tbody>
</table>

<h3 id="33-example-records">3.3. Example Records</h3>

<ul>
  <li>If the <code class="language-plaintext highlighter-rouge">fact__events</code> table looks like this for user Jinseok:</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>date</strong></th>
      <th><strong>datetime</strong></th>
      <th><strong>user_id</strong></th>
      <th><strong>event_name</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>Jinseok</td>
      <td><code class="language-plaintext highlighter-rouge">first_visit</code></td>
    </tr>
    <tr>
      <td>2025-01-01</td>
      <td>2025-01-01 01:01:00</td>
      <td>Jinseok</td>
      <td><code class="language-plaintext highlighter-rouge">add_to_cart</code></td>
    </tr>
    <tr>
      <td>2025-01-02</td>
      <td>2025-01-02 01:00:00</td>
      <td>Jinseok</td>
      <td><code class="language-plaintext highlighter-rouge">add_to_cart</code></td>
    </tr>
    <tr>
      <td>2025-01-02</td>
      <td>2025-01-02 01:01:00</td>
      <td>Jinseok</td>
      <td><code class="language-plaintext highlighter-rouge">purchase</code></td>
    </tr>
  </tbody>
</table>

<ul>
  <li>The <code class="language-plaintext highlighter-rouge">fact__first_activation_events</code> table would be constructed as follows, keeping only the first events and adding necessary columns:</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>date</strong></th>
      <th><strong>datetime</strong></th>
      <th><strong>user_id</strong></th>
      <th><strong>event_name</strong></th>
      <th><strong>first_visit_date</strong></th>
      <th><strong>first_visit_datetime</strong></th>
      <th><strong>hours_from_first_visit</strong></th>
      <th><strong>days_from_first_visit</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>Jinseok</td>
      <td><code class="language-plaintext highlighter-rouge">first_visit</code></td>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>2025-01-01</td>
      <td>2025-01-01 01:01:00</td>
      <td>Jinseok</td>
      <td><code class="language-plaintext highlighter-rouge">add_to_cart</code></td>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>2025-01-02</td>
      <td>2025-01-02 01:01:00</td>
      <td>Jinseok</td>
      <td><code class="language-plaintext highlighter-rouge">purchase</code></td>
      <td>2025-01-01</td>
      <td>2025-01-01 01:00:00</td>
      <td>25</td>
      <td>2</td>
    </tr>
  </tbody>
</table>

<h3 id="34-key-features">3.4. Key Features</h3>

<ul>
  <li>This is a transaction fact table (since <code class="language-plaintext highlighter-rouge">user_id</code> is present, you can easily filter dimensions via <code class="language-plaintext highlighter-rouge">dim__users</code>).</li>
  <li>The grain is the combination of <code class="language-plaintext highlighter-rouge">user_id</code> and <code class="language-plaintext highlighter-rouge">event_name</code> (only the first event for each user is stored).</li>
  <li>Conversion period information is stored as a pre-calculated non-additive fact (so you don’t need to use joins or window functions later).</li>
</ul>

<h1 id="4-example-queries">4. Example Queries</h1>

<h3 id="41-designed-for-usability">4.1. Designed for Usability</h3>

<ul>
  <li>If the core metric’s Key Event changes? → Just modify the <code class="language-plaintext highlighter-rouge">event_name</code> part.</li>
  <li>If the maximum conversion period changes? → Just modify the <code class="language-plaintext highlighter-rouge">hours_from_first_visit</code> or <code class="language-plaintext highlighter-rouge">days_from_first_visit</code> part.</li>
  <li>Need to filter by user attributes? → Just join with <code class="language-plaintext highlighter-rouge">dim__users</code>.</li>
</ul>

<h3 id="42-beginner-query">4.2. Beginner Query</h3>

<ul>
  <li>☝🏻 Show the trend of users who converted via <code class="language-plaintext highlighter-rouge">key_event_1</code> (regardless of conversion period).</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="nb">date</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
        <span class="n">fact__first_activation_events</span>
    <span class="k">WHERE</span> <span class="k">TRUE</span>
        <span class="k">AND</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="mi">1</span>
</code></pre></div></div>

<h3 id="43-intermediate-query">4.3. Intermediate Query</h3>

<ul>
  <li>☝🏻 Show the trend of conversion rates for users who performed <code class="language-plaintext highlighter-rouge">key_event_1</code> within 1 day of <code class="language-plaintext highlighter-rouge">first_visit</code>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="n">first_visit_date</span> <span class="k">AS</span> <span class="n">cohort_date</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_visit</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_1</span>
    <span class="k">FROM</span>
        <span class="n">fact__first_activation_events</span>
    <span class="k">WHERE</span> <span class="k">TRUE</span>
        <span class="k">AND</span> <span class="p">(</span>
            <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">AND</span> <span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">)</span>
        <span class="p">)</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="mi">1</span>
</code></pre></div></div>

<ul>
  <li>☝🏻 (Squad’s core metric) Show the trend of conversion rates for users who performed <code class="language-plaintext highlighter-rouge">key_event_1</code> within 1 day and <code class="language-plaintext highlighter-rouge">key_event_2</code> within 7 days of <code class="language-plaintext highlighter-rouge">first_visit</code>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="n">first_visit_date</span> <span class="k">AS</span> <span class="n">cohort_date</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_visit</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_1</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_2'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_2</span>
    <span class="k">FROM</span>
        <span class="n">fact__first_activation_events</span>
    <span class="k">WHERE</span> <span class="k">TRUE</span>
        <span class="k">AND</span> <span class="p">(</span>
            <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">AND</span> <span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">)</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_2'</span> <span class="k">AND</span> <span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">7</span><span class="p">)</span>
        <span class="p">)</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="mi">1</span>
</code></pre></div></div>

<h3 id="44-advanced-query">4.4. Advanced Query</h3>

<ul>
  <li>☝🏻 Show the trend of conversion rates for US users who performed <code class="language-plaintext highlighter-rouge">key_event_1</code> within 1 day and <code class="language-plaintext highlighter-rouge">key_event_2</code> within 7 days of <code class="language-plaintext highlighter-rouge">first_visit</code>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="n">FACT</span><span class="p">.</span><span class="n">first_visit_date</span> <span class="k">AS</span> <span class="n">cohort_date</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_visit</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_1</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_2'</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">key_event_2</span>
    <span class="k">FROM</span>
        <span class="n">fact__first_activation_events</span> <span class="n">FACT</span>
    <span class="k">LEFT</span> <span class="k">JOIN</span>
        <span class="n">dim__users</span> <span class="n">DIM</span>
        <span class="k">ON</span> <span class="n">FACT</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">DIM</span><span class="p">.</span><span class="n">user_id</span>
    <span class="k">WHERE</span> <span class="k">TRUE</span>
        <span class="k">AND</span> <span class="n">DIM</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="s1">'United States'</span>
        <span class="k">AND</span> <span class="p">(</span>
            <span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_1'</span> <span class="k">AND</span> <span class="n">FACT</span><span class="p">.</span><span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">)</span>
            <span class="k">OR</span> <span class="p">(</span><span class="n">FACT</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'key_event_2'</span> <span class="k">AND</span> <span class="n">FACT</span><span class="p">.</span><span class="n">days_from_first_visit</span> <span class="o">&lt;=</span> <span class="mi">7</span><span class="p">)</span>
        <span class="p">)</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="mi">1</span>
</code></pre></div></div>

<h1 id="5-how-the-modeling-was-done">5. How the Modeling Was Done</h1>

<p><img src="/assets/2025-01-25-first-activation-data-mart/3.webp" alt="" /></p>

<h3 id="51-step-1-load-the-entire-dim__users-table">5.1. [STEP 1] Load the Entire <code class="language-plaintext highlighter-rouge">dim__users</code> Table</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/4.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">WITH</span>
    <span class="n">CTE_first_visits_raw</span> <span class="k">AS</span> <span class="p">(</span>
        <span class="k">SELECT</span>
            <span class="n">user_id</span><span class="p">,</span>
            <span class="n">first_date</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
            <span class="n">first_datetime</span> <span class="k">AS</span> <span class="nb">datetime</span>
        <span class="k">FROM</span>
            <span class="p">{{</span> <span class="k">ref</span><span class="p">(</span><span class="s1">'dim__users'</span><span class="p">)</span> <span class="p">}}</span>
    <span class="p">),</span>	
</code></pre></div></div>

<h3 id="52-step-2-keep-only-new-first_visit-data">5.2. [STEP 2] Keep Only New <code class="language-plaintext highlighter-rouge">first_visit</code> Data</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/5.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>

    <span class="n">CTE_first_visits</span> <span class="k">AS</span> <span class="p">(</span>
        <span class="k">SELECT</span>
            <span class="n">SRC</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span>
            <span class="n">SRC</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
            <span class="n">SRC</span><span class="p">.</span><span class="nb">datetime</span>
        <span class="k">FROM</span>
            <span class="n">CTE_first_visits_raw</span> <span class="n">SRC</span>
        <span class="k">LEFT</span> <span class="k">JOIN</span> 
            <span class="p">{{</span> <span class="n">this</span> <span class="p">}}</span> <span class="k">EXISTING</span>
            <span class="k">ON</span> <span class="n">SRC</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">user_id</span>
            <span class="k">AND</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'first_visit'</span>
        <span class="k">WHERE</span> <span class="k">TRUE</span>
            <span class="k">AND</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">user_id</span> <span class="k">IS</span> <span class="k">NULL</span>
    <span class="p">),</span>

    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</code></pre></div></div>

<h3 id="53-step-3-incrementally-load-the-fact__events-table">5.3. [STEP 3] Incrementally Load the <code class="language-plaintext highlighter-rouge">fact__events</code> Table</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/6.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">CTE_events_raw</span> <span class="k">AS</span> <span class="p">(</span>
        <span class="k">SELECT</span>
            <span class="n">user_id</span><span class="p">,</span>
            <span class="n">event_name</span><span class="p">,</span>
            <span class="k">MIN</span><span class="p">(</span><span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
            <span class="k">MIN</span><span class="p">(</span><span class="nb">datetime</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">datetime</span>
        <span class="k">FROM</span>
            <span class="p">{{</span> <span class="k">ref</span><span class="p">(</span><span class="s1">'fact__events'</span><span class="p">)</span> <span class="p">}}</span>
        <span class="k">WHERE</span> <span class="k">TRUE</span>
            <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>
            <span class="k">AND</span> <span class="nb">datetime</span> <span class="o">&gt;</span> <span class="p">(</span><span class="k">SELECT</span> <span class="k">MAX</span><span class="p">(</span><span class="nb">datetime</span><span class="p">)</span> <span class="k">FROM</span> <span class="p">{{</span> <span class="n">this</span> <span class="p">}})</span>
            <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
            <span class="k">AND</span> <span class="n">event_name</span> <span class="k">IN</span> <span class="p">(</span>
                <span class="s1">'Key Event 1'</span><span class="p">,</span>
                <span class="s1">'Key Event 2'</span><span class="p">,</span>
                <span class="p">...</span>
            <span class="p">)</span>
        <span class="k">GROUP</span> <span class="k">BY</span>
            <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
    <span class="p">)</span>
</code></pre></div></div>

<h3 id="54-step-4-keep-only-new-first-key-events">5.4. [STEP 4] Keep Only New First Key Events</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/7.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>
    <span class="p">,</span>

    <span class="n">CTE_events</span> <span class="k">AS</span> <span class="p">(</span>
        <span class="k">SELECT</span>
            <span class="n">SRC</span><span class="p">.</span><span class="o">*</span>
        <span class="k">FROM</span>
            <span class="n">CTE_events_raw</span> <span class="n">SRC</span>
        <span class="k">LEFT</span> <span class="k">JOIN</span> 
            <span class="p">{{</span> <span class="n">this</span> <span class="p">}}</span> <span class="k">EXISTING</span>
            <span class="k">ON</span> <span class="n">SRC</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">user_id</span>
            <span class="k">AND</span> <span class="n">SRC</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">event_name</span>
        <span class="k">WHERE</span> <span class="k">TRUE</span>
            <span class="k">AND</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">user_id</span> <span class="k">IS</span> <span class="k">NULL</span>
            <span class="k">AND</span> <span class="k">EXISTING</span><span class="p">.</span><span class="n">event_name</span> <span class="k">IS</span> <span class="k">NULL</span>
    <span class="p">)</span>

    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</code></pre></div></div>

<h3 id="55-step-5-combine-and-insert-new-first_visit-and-first-key-events-data">5.5. [STEP 5] Combine and Insert New <code class="language-plaintext highlighter-rouge">first_visit</code> and First Key Events Data</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/8.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">SELECT</span>
        <span class="nb">date</span><span class="p">,</span>
        <span class="nb">datetime</span><span class="p">,</span>
        <span class="n">user_id</span><span class="p">,</span>
        <span class="s1">'first_visit'</span> <span class="k">AS</span> <span class="n">event_name</span><span class="p">,</span>
        <span class="nb">date</span> <span class="k">AS</span> <span class="n">first_visit_date</span><span class="p">,</span>
        <span class="nb">datetime</span> <span class="k">AS</span> <span class="n">first_visit_datetime</span><span class="p">,</span>
        <span class="k">NULL</span> <span class="k">AS</span> <span class="n">hours_from_first_visit</span><span class="p">,</span>
        <span class="k">NULL</span> <span class="k">AS</span> <span class="n">days_from_first_visit</span>
    <span class="k">FROM</span>
        <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>
        <span class="n">CTE_first_visits</span>
        <span class="p">{</span><span class="o">%</span> <span class="k">else</span> <span class="o">%</span><span class="p">}</span>
        <span class="n">CTE_first_visits_raw</span>
        <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>

    <span class="k">UNION</span> <span class="k">ALL</span>

    <span class="k">SELECT</span>
        <span class="n">FCT</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
        <span class="n">FCT</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span>
        <span class="n">FCT</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span>
        <span class="n">FCT</span><span class="p">.</span><span class="n">event_name</span><span class="p">,</span>
        <span class="n">DIM</span><span class="p">.</span><span class="nb">date</span> <span class="k">AS</span> <span class="n">first_visit_date</span><span class="p">,</span>
        <span class="n">DIM</span><span class="p">.</span><span class="nb">datetime</span> <span class="k">AS</span> <span class="n">first_visit_datetime</span><span class="p">,</span>
        <span class="n">TIMESTAMP_DIFF</span><span class="p">(</span>
            <span class="n">TIMESTAMP_TRUNC</span><span class="p">(</span><span class="n">FCT</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span> <span class="n">HOUR</span><span class="p">),</span>
            <span class="n">TIMESTAMP_TRUNC</span><span class="p">(</span><span class="n">DIM</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span> <span class="n">HOUR</span><span class="p">),</span>
            <span class="n">HOUR</span>
        <span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="k">AS</span> <span class="n">hours_from_first_visit</span><span class="p">,</span> <span class="c1">-- Starts from 1</span>
        <span class="n">TIMESTAMP_DIFF</span><span class="p">(</span>
            <span class="n">TIMESTAMP_TRUNC</span><span class="p">(</span><span class="n">FCT</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span> <span class="k">DAY</span><span class="p">),</span>
            <span class="n">TIMESTAMP_TRUNC</span><span class="p">(</span><span class="n">DIM</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span> <span class="k">DAY</span><span class="p">),</span>
            <span class="k">DAY</span>
        <span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="k">AS</span> <span class="n">days_from_first_visit</span> <span class="c1">-- Starts from 1</span>
    <span class="k">FROM</span>
        <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">is_incremental</span><span class="p">()</span> <span class="o">%</span><span class="p">}</span>
        <span class="n">CTE_events</span> <span class="n">FCT</span>
        <span class="p">{</span><span class="o">%</span> <span class="k">else</span> <span class="o">%</span><span class="p">}</span>
        <span class="n">CTE_events_raw</span> <span class="n">FCT</span> 
        <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
    <span class="k">INNER</span> <span class="k">JOIN</span>
        <span class="n">CTE_first_visits_raw</span> <span class="n">DIM</span>
        <span class="k">ON</span> <span class="n">FCT</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">DIM</span><span class="p">.</span><span class="n">user_id</span>
</code></pre></div></div>

<h3 id="56-final-review">5.6. Final Review</h3>

<p><img src="/assets/2025-01-25-first-activation-data-mart/3.webp" alt="" /></p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">models</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">fact__first_activation_events</span>
    <span class="na">description</span><span class="pi">:</span> <span class="s">User's first event history</span>
    <span class="na">meta</span><span class="pi">:</span>
      <span class="na">owner</span><span class="pi">:</span> <span class="s">Jinseok Kim</span>
    <span class="na">config</span><span class="pi">:</span>
      <span class="na">materialized</span><span class="pi">:</span> <span class="s">incremental</span>
      <span class="na">incremental_strategy</span><span class="pi">:</span> <span class="s">insert_overwrite</span>
      <span class="na">on_schema_change</span><span class="pi">:</span> <span class="s">append_new_columns</span>
      <span class="na">partition_by</span><span class="pi">:</span>
        <span class="na">field</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">data_type</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">granularity</span><span class="pi">:</span> <span class="s">day</span>
      <span class="na">time_ingestion_partitioning</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">require_partition_filter</span><span class="pi">:</span> <span class="kc">false</span>
      <span class="na">copy_partitions</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">columns</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">...</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">...</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">...</span>
</code></pre></div></div>

<h1 id="6-modeling-review">6. Modeling Review</h1>

<h3 id="61-good-requirement-gathering-leads-to-good-data-marts">6.1. Good Requirement Gathering Leads to Good Data Marts</h3>

<ul>
  <li>A good data mart = a data mart that can be used repeatedly and sustainably</li>
  <li>To accurately understand the squad’s core metrics, I spent hours discussing with the squad leader.
    <ul>
      <li>How exactly is the conversion rate defined?</li>
      <li>How might the core metrics change in the future?</li>
    </ul>
  </li>
</ul>

<h3 id="62-data-modeling-is-not-complete-with-theory-alone">6.2. Data Modeling Is Not Complete with Theory Alone</h3>

<ul>
  <li>There are systematic theories for DWH such as Kimball and Inmon.</li>
  <li>However, the most important thing is: “Does it help solve the problem?”
    <ul>
      <li>Organizational data usage tendencies, data characteristics, core problems</li>
    </ul>
  </li>
  <li>The <code class="language-plaintext highlighter-rouge">fact__first_activation_events</code> table was not created solely based on theory.
    <ul>
      <li>It was created by applying DWH theory to meet organizational needs.</li>
    </ul>
  </li>
</ul>

<h1 id="7-acknowledgements">7. Acknowledgements</h1>

<h3 id="71-inspired-by-toss-securities-dw-design-review-video">7.1. Inspired by Toss Securities’ “DW Design Review” Video</h3>

<blockquote>
  <p><a href="https://www.youtube.com/watch?v=MWDVBZycou4">Toss SLASH 24 - Designing and Operating a DW for All-Purpose Data Analysis</a></p>
</blockquote>

<ul>
  <li>This video provided important clues for understanding the flow of user activation data.</li>
</ul>

<h3 id="72-special-thanks-to-the-squad-leader">7.2. Special Thanks to the Squad Leader</h3>

<ul>
  <li>The squad leader actively helped resolve my questions to provide core metric data.
    <ul>
      <li>Provided background to help see the business goals clearly.</li>
      <li>Carefully quantified the core metrics together.</li>
    </ul>
  </li>
  <li>I am sincerely grateful for the intensive training that helped me align my perspective as a data analyst with the organization’s goals.</li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (English)" /><category term="Article (Project)" /><category term="Level (2. Intermediate)" /><category term="Field (Analytics Engineering)" /><category term="Skills (SQL)" /><category term="Skills (dbt)" /><summary type="html"><![CDATA[“This post summarizes my experience designing and building a data mart to effectively provide new user activation conversion metrics. I designed the data model to flexibly respond to changing business requirements, and focused on queries and structures that are immediately applicable in practice. Through this process, I was able to apply data modeling theory to real-world problem solving and once again realized the importance of deeply understanding requirements.”]]></summary></entry><entry><title type="html">Airflow 도입 후기</title><link href="http://localhost:4000/implementing-airflow-ko/" rel="alternate" type="text/html" title="Airflow 도입 후기" /><published>2024-12-28T00:00:00+09:00</published><updated>2024-12-28T00:00:00+09:00</updated><id>http://localhost:4000/implementing-airflow-ko</id><content type="html" xml:base="http://localhost:4000/implementing-airflow-ko/"><![CDATA[<blockquote>
  <p>“Airflow 도입을 통해 사내 데이터 알림 시스템을 효율적으로 관리하고자 기존 Python 기반 세션 방식에서 벗어나 DAG 기반 워크플로우를 구축했습니다. Docker Compose를 활용해 로컬 및 VM 환경에서 Airflow를 설정하고, Slack 알림을 포함한 다양한 데이터 파이프라인을 자동화했습니다. 이를 통해 유지보수 부담을 줄이고, 안정성을 높이며, 확장 가능한 데이터 처리 환경을 마련할 수 있었습니다.”</p>
</blockquote>

<hr />

<h1 id="목차">목차</h1>
<ol>
  <li>도입 배경</li>
  <li>도입 후기
    <ul>
      <li>2.1. 작업 계획</li>
      <li>2.2. 로컬 환경 세팅</li>
      <li>2.3. VM Instance 환경 세팅</li>
      <li>2.4. DAG 만들기</li>
    </ul>
  </li>
  <li>앞으로의 과제</li>
</ol>

<hr />

<h1 id="1-도입-배경">1. 도입 배경</h1>

<p>저는 아이오트러스트에서 데이터 엔지니어 포지션으로 근무하며, 아래와 같이 주로 <strong>애널리틱스 엔지니어링</strong> 업무에 집중하고 있어요.</p>

<pre><code class="language-plain">- (1) 데이터 웨어하우스 &amp; 데이터 마트 설계 및 개발
- (2) BI 대시보드
- (3) Ad-hoc 데이터 알림 봇 개발
- (4) 이벤트 택소노미 설계 + 정의서 관리
- (5) (Finance/HR/CX) 업무 자동화 환경 구축
</code></pre>

<p>그런데, 시간이 흐를수록 “<strong>(3) Ad-hoc 데이터 알림 봇 개발</strong>” 역할에 문제가 발생하기 시작했어요. 동료들이 적시에 중요한 핵심 지표를 슬랙으로 빠르게 확인할 수 있도록 지원하는 과정에서, 서서히 Python 파일이 많아졌고 관리 리소스도 제법 늘어나게 된 것이죠.</p>

<p><img src="/assets/2024-12-28-implementing-airflow/1.webp" alt="" /></p>

<p>구체적으로는, 아래와 같이 <code class="language-plaintext highlighter-rouge">tmux</code>를 통해 세션 레벨에서 각 Python 파일을 직접 실행하여 모든 슬랙 알림을 관리하고 있었어요. <code class="language-plaintext highlighter-rouge">tmux</code>는 단일 터미널에서 여러 세션을 독립적으로 관리할 수 있도록 해주는 오픈소스 터미널 자동화 도구예요. (<a href="https://en.wikipedia.org/wiki/Tmux">Wikipedia</a>)</p>

<p><img src="/assets/2024-12-28-implementing-airflow/2.webp" alt="" /></p>

<p>점차 Python 파일이 많아지고 복잡해지면서 구체적으로 다음과 같은 문제가 발생하기 시작했어요.</p>

<p><strong>(1) 유지보수 부담이 늘어났어요.</strong></p>

<p>Python 파일의 오류가 발생하면 실행이 즉시 중단되어 디버깅이 완료되기 전까지는 동료들이 알림을 받을 수 없었어요. 작업 재시도 기능이 없었기 때문이죠.</p>

<p>또한, 디버깅 과정에서 제법 많은 시간을 허비했어요. 의존성이 있는 각 파이프라인 단계를 main() 함수 하나로 관리하다 보니, 정확한 실패 원인을 찾는 데 상당한 시간이 소요되었던 것이죠. 그러다보니 중요한 일에 몰입하지 못하고 업무가 산만해지기 쉬웠죠.</p>

<p><strong>(2) 세션 기반 관리의 안정성이 부족했어요.</strong></p>

<p>서버 재부팅이나 네트워크 문제로 인해 작업이 중단될 여지가 높았고, 실제로 알 수 없는 이유로 세션이 모두 종료되어 복구 작업을 해야 했던 적도 있었어요.</p>

<p>또한, 각 세션이 동일한 환경을 공유하기 때문에 <a href="https://docs.python.org/3/library/venv.html">Python Venv</a>를 사용하더라도 의도치 않은 충돌이나 종속성 문제가 발생할 여지가 있었어요.</p>

<p><strong>이런 이유로 Airflow를 통한 워크플로우 관리 필요성이 점차 커지게 되었어요.</strong></p>

<ul>
  <li>컨테이너만 재시작하면 각 작업을 자동으로 복구할 수 있어요.</li>
  <li>각 작업별로 독립된 환경을 제공해요.</li>
  <li>지속적으로 작업을 확장할 수 있어요.</li>
  <li>웹서버 UI를 통해 관리를 용이하게 할 수 있어요.</li>
</ul>

<p>사실, “<strong>Ad-hoc 데이터 알림 봇 개발</strong>” 업무 초기에 이미 Airflow 도입을 적극적으로 검토했었습니다. 하지만 당시 워크플로우의 규모가 매우 작았기 때문에, <strong>YAGNI</strong> 원칙에 따라 굳이 도입할 필요가 없다고 판단했죠.</p>

<p><a href="https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it">YAGNI</a>는 “<strong>You Aren’t Gonna Need It</strong>”의 준말로, 필요하지 않은 기능이나 복잡성을 미리 추가하지 말라는 애자일 소프트웨어 개발의 핵심 원칙 중 하나입니다. 당시에는 현재 요구 사항을 충족하는 적절한 수준에서만 워크플로우 환경을 구축하는 것이 중요하다고 생각해, 세션 기반 관리 방식을 선택했어요.</p>

<p>그러나 워크플로우 규모가 점차 커지면서 세션 관리 방식에서 발생하는 리소스 낭비와 비효율성이 눈에 띄게 늘어났어요. 이에 따라, Airflow 도입이 필요하다고 판단하게 되었습니다.</p>

<hr />

<h1 id="2-도입-후기">2. 도입 후기</h1>

<h3 id="21-작업-계획">2.1. 작업 계획</h3>

<p><img src="/assets/2024-12-28-implementing-airflow/3.webp" alt="" /></p>

<p>먼저 위 그림과 같이 계획을 세웠어요.</p>

<p>(1) 기존 Python 파일들을 <strong>DAG 포맷</strong>에 맞게 코드를 수정합니다.</p>

<p>(2) <strong>로컬 환경</strong>에서 Airflow 프로젝트를 Docker Compose로 빌드하여, 알림이 슬랙 테스트 채널에 제대로 전송되는지 확인합니다.</p>

<p>(3) <strong>VM Instance 환경</strong>에서도 Airflow 프로젝트를 Docker Compose로 빌드하여, 최종적으로 알림 환경을 배포합니다.</p>

<h3 id="22-로컬-환경-세팅">2.2. 로컬 환경 세팅</h3>

<p>(0) 기본적으로 Docker가 설치되어 있어야 해요.</p>

<ul>
  <li>저는 Docker Desktop 앱을 설치하는 방향으로 준비했어요. 정확한 설치 방법은 <a href="https://www.docker.com/get-started/">이 문서</a>를 참고해주세요.</li>
</ul>

<p>(1) Python Venv를 생성했어요.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python <span class="nt">-m</span> venv venv
<span class="nb">source </span>venv/bin/activate
</code></pre></div></div>

<p>(2) <code class="language-plaintext highlighter-rouge">airflow</code> 이름의 디렉토리에서 아래 명령어를 통해 Airflow 이미지를 로드했어요. (<code class="language-plaintext highlighter-rouge">docker-compose.yaml</code> 파일이 생성될 거예요.)</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-LfO</span> <span class="s1">'https://airflow.apache.org/docs/apache-airflow/2.9.1/docker-compose.yaml'</span>
</code></pre></div></div>

<p>(3) <code class="language-plaintext highlighter-rouge">dags</code>, <code class="language-plaintext highlighter-rouge">logs</code>, <code class="language-plaintext highlighter-rouge">plugins</code> 하위 디렉토리를 생성하고, <strong>AIRFLOW_UID</strong> 환경 변수를 지닌 <code class="language-plaintext highlighter-rouge">.env</code> 파일을 생성했어요.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> ./dags ./logs ./plugins
<span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"AIRFLOW_UID=</span><span class="si">$(</span><span class="nb">id</span> <span class="nt">-u</span><span class="si">)</span><span class="s2">"</span> <span class="o">&gt;</span> .env
</code></pre></div></div>

<p>(4) 아래 내용을 지닌 <code class="language-plaintext highlighter-rouge">Dockerfile</code> 파일을 생성했어요.</p>

<div class="language-Dockerfile highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># First-time build can take upto 10 mins.</span>

<span class="k">FROM</span><span class="s"> apache/airflow:2.9.1</span>

<span class="k">ENV</span><span class="s"> AIRFLOW_HOME=/opt/airflow</span>

<span class="k">USER</span><span class="s"> root</span>
<span class="k">RUN </span>apt-get update <span class="nt">-qq</span> <span class="o">&amp;&amp;</span> apt-get <span class="nb">install </span>vim <span class="nt">-qqq</span>
<span class="c"># git gcc g++ -qqq</span>

<span class="k">COPY</span><span class="s"> requirements.txt .</span>
<span class="k">RUN </span>pip <span class="nb">install</span> <span class="nt">--no-cache-dir</span> <span class="nt">-r</span> requirements.txt

<span class="c"># Ref: https://airflow.apache.org/docs/docker-stack/recipes.html</span>

<span class="k">SHELL</span><span class="s"> ["/bin/bash", "-o", "pipefail", "-e", "-u", "-x", "-c"]</span>

<span class="k">ARG</span><span class="s"> CLOUD_SDK_VERSION=322.0.0</span>
<span class="k">ENV</span><span class="s"> GCLOUD_HOME=/home/google-cloud-sdk</span>

<span class="k">ENV</span><span class="s"> PATH="${GCLOUD_HOME}/bin/:${PATH}"</span>

<span class="k">RUN </span><span class="nv">DOWNLOAD_URL</span><span class="o">=</span><span class="s2">"https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-</span><span class="k">${</span><span class="nv">CLOUD_SDK_VERSION</span><span class="k">}</span><span class="s2">-linux-x86_64.tar.gz"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="nv">TMP_DIR</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span><span class="nb">mktemp</span> <span class="nt">-d</span><span class="si">)</span><span class="s2">"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> curl <span class="nt">-fL</span> <span class="s2">"</span><span class="k">${</span><span class="nv">DOWNLOAD_URL</span><span class="k">}</span><span class="s2">"</span> <span class="nt">--output</span> <span class="s2">"</span><span class="k">${</span><span class="nv">TMP_DIR</span><span class="k">}</span><span class="s2">/google-cloud-sdk.tar.gz"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="nb">mkdir</span> <span class="nt">-p</span> <span class="s2">"</span><span class="k">${</span><span class="nv">GCLOUD_HOME</span><span class="k">}</span><span class="s2">"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="nb">tar </span>xzf <span class="s2">"</span><span class="k">${</span><span class="nv">TMP_DIR</span><span class="k">}</span><span class="s2">/google-cloud-sdk.tar.gz"</span> <span class="nt">-C</span> <span class="s2">"</span><span class="k">${</span><span class="nv">GCLOUD_HOME</span><span class="k">}</span><span class="s2">"</span> <span class="nt">--strip-components</span><span class="o">=</span>1 <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="s2">"</span><span class="k">${</span><span class="nv">GCLOUD_HOME</span><span class="k">}</span><span class="s2">/install.sh"</span> <span class="se">\
</span>       <span class="nt">--bash-completion</span><span class="o">=</span><span class="nb">false</span> <span class="se">\
</span>       <span class="nt">--path-update</span><span class="o">=</span><span class="nb">false</span> <span class="se">\
</span>       <span class="nt">--usage-reporting</span><span class="o">=</span><span class="nb">false</span> <span class="se">\
</span>       <span class="nt">--quiet</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="nb">rm</span> <span class="nt">-rf</span> <span class="s2">"</span><span class="k">${</span><span class="nv">TMP_DIR</span><span class="k">}</span><span class="s2">"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> gcloud <span class="nt">--version</span>

<span class="k">WORKDIR</span><span class="s"> $AIRFLOW_HOME</span>

<span class="k">COPY</span><span class="s"> scripts scripts</span>
<span class="k">RUN </span><span class="nb">chmod</span> +x scripts

<span class="k">USER</span><span class="s"> $AIRFLOW_UID</span>
</code></pre></div></div>

<p>(5) 아래 내용을 지닌 <code class="language-plaintext highlighter-rouge">requirements.txt</code> 파일을 생성했어요.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apache-airflow-providers-google
pyarrow
</code></pre></div></div>

<p>(6) <code class="language-plaintext highlighter-rouge">docker-compose.yaml</code> 파일에서 다음 항목들을 추가/편집했어요.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">/keys</code>: 구글 클라우드 서비스 계정 json key 파일을 보관하는 용도</li>
  <li><code class="language-plaintext highlighter-rouge">.env</code>: Airflow Admin 로그인 정보와 슬랙 API 토큰을 보관하는 용도</li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">x-airflow-common</span><span class="pi">:</span>
  <span class="s">...</span>
  <span class="s">environment</span><span class="err">:</span>
    <span class="s">...</span>
    <span class="s">AIRFLOW__CORE__LOAD_EXAMPLES</span><span class="err">:</span> <span class="s1">'</span><span class="s">false'</span> <span class="c1"># 샘플 DAG가 생성되지 않도록 했어요.</span>
    <span class="s">...</span>
    <span class="s">GOOGLE_APPLICATION_CREDENTIALS</span><span class="err">:</span> <span class="s">/keys/airflow_credentials.json</span> <span class="c1"># 구글 클라우드 서비스 계정 json key 파일의 경로를 입력했어요.</span>
    <span class="na">AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT</span><span class="pi">:</span> <span class="s1">'</span><span class="s">google-cloud-platform://?extra__google_cloud_platform__key_path=/keys/airflow_credentials.json'</span> <span class="c1"># 여기도 마찬가지에요.</span>
    <span class="na">GCP_PROJECT_ID</span><span class="pi">:</span> <span class="s1">'</span><span class="s">gcp_project_id'</span> <span class="c1"># 구글 클라우드 프로젝트 ID를 입력했어요.</span>
    <span class="na">AIRFLOW_CONN_SLACK_DEFAULT</span><span class="pi">:</span> <span class="s1">'</span><span class="s">slack://:${SLACK_TOKEN}@'</span> <span class="c1"># 슬랙 API 토큰은 .env 파일에서 관리했어요.</span>
    <span class="s">...</span>
  <span class="na">volumes</span><span class="pi">:</span>
    <span class="s">...</span>
    <span class="s">- ./keys:/keys:ro</span> <span class="c1"># 구글 클라우드 서비스 계정 json key 파일이 담긴 /keys 디렉토리를 Docker 상에 매핑해줬어요.</span>
<span class="nn">...</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="s">...</span>
  <span class="s">airflow-init</span><span class="err">:</span>
    <span class="s">...</span>
    <span class="s">environment</span><span class="err">:</span>
      <span class="s">...</span>
      <span class="s">_AIRFLOW_WWW_USER_USERNAME</span><span class="err">:</span> <span class="s">${_AIRFLOW_WWW_USER_USERNAME}</span> <span class="c1"># Airflow Webserver 로그인 정보는 .env 파일에서 관리했어요.</span>
      <span class="na">_AIRFLOW_WWW_USER_PASSWORD</span><span class="pi">:</span> <span class="s">${_AIRFLOW_WWW_USER_PASSWORD}</span> <span class="c1"># Airflow Webserver 로그인 정보는 .env 파일에서 관리했어요.</span>
      <span class="s">...</span>
</code></pre></div></div>

<p>(7) Docker Compose를 빌드하고, Initialize Airflow 했어요.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose build
docker-compose up airflow-init
</code></pre></div></div>

<p>(8) 마지막으로 Docker Compose를 실행했어요.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose up <span class="nt">-d</span>
docker-compose ps
</code></pre></div></div>

<p>(9) 브라우저에서 Airflow Webserver에 접속하여 로그인했어요.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1) http://0.0.0.0:8080 로 접속해요.
2) docker-compose.yaml에서 설정했던 아래의 환경 변수로 로그인하면 돼요.
  - _AIRFLOW_WWW_USER_USERNAME
  - _AIRFLOW_WWW_USER_PASSWORD
</code></pre></div></div>

<p><img src="/assets/2024-12-28-implementing-airflow/4.webp" alt="" /></p>

<p>(10) <code class="language-plaintext highlighter-rouge">airflow</code> 디렉토리에 Initialize Git을 한 후, GitHub Remote Repo에 연동했어요. (물론, 연동하면 안되는 파일들은 <code class="language-plaintext highlighter-rouge">.gitignore</code>에 리스트업했어요.)</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git init
git remote add origin https://github.com/.../airflow.git
git branch <span class="nt">-m</span> main
git add <span class="nb">.</span>
git commit <span class="nt">-m</span> <span class="s2">"created airflow project"</span>
git push <span class="nt">-u</span> origin main
</code></pre></div></div>

<h3 id="23-vm-instance-환경-세팅">2.3. VM Instance 환경 세팅</h3>

<p>(1) 방화벽 규칙을 생성했어요. (VM Instance에서 운영 중인 Airflow Webserver에 사내 로컬에서도 접속할 수 있도록 해야 하거든요.)</p>

<p><img src="/assets/2024-12-28-implementing-airflow/5.webp" alt="" /></p>

<ul>
  <li><strong>방향</strong>: Ingress</li>
  <li><strong>대상 태그</strong>: airflow (원하는 이름으로 적으셔도 돼요.)</li>
  <li><strong>소스 필터 &gt; IP 범위</strong>: 사내 IP Address Range를 입력했어요.</li>
  <li><strong>프로토콜 및 포트</strong>: tcp-8080 (Webserver는 8080 포트를 통해 Host Machine과 소통하기 때문이에요. <code class="language-plaintext highlighter-rouge">docker-compose.yaml</code> 파일에서 포트를 수정할 수도 있어요.)</li>
</ul>

<p>(2) <code class="language-plaintext highlighter-rouge">airflow</code> 이름의 VM Instance를 만들었어요.</p>

<p><img src="/assets/2024-12-28-implementing-airflow/6.webp" alt="" /></p>

<ul>
  <li><strong>Machine</strong>: E2 시리즈 중 vCPU 2개 이상, 메모리 8GB 이상을 추천해요. (메모리 4GB를 선택하면 서버가 네트워크 트래픽을 견디지 못해 쉽게 먹통이 될 거예요.)</li>
  <li><strong>OS &amp; Storage</strong>: OS는 Debian, 스토리지 사이즈는 10GB를 선택했어요.</li>
  <li><strong>방화벽</strong>: HTTP &amp; HTTPS 트래픽을 “사용”으로 설정한 후, 방화벽 규칙에서 생성했던 태그인 <code class="language-plaintext highlighter-rouge">airflow</code>를 입력했어요.</li>
</ul>

<p>(3) 로컬 환경에서 세팅한 것과 마찬가지로 Docker를 설치하고, Python Venv를 생성했어요.</p>

<ul>
  <li>2.2. 로컬 환경 세팅의 (0), (1)을 참고해주세요.</li>
</ul>

<p>(4) <code class="language-plaintext highlighter-rouge">airflow</code> 디렉토리를 만들고 Remote Repo를 Clone한 후, <code class="language-plaintext highlighter-rouge">/keys</code>, <code class="language-plaintext highlighter-rouge">.env</code> 파일은 직접 작성해줬어요.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/.../airflow.git
</code></pre></div></div>

<p>(5) 로컬 환경에서 세팅한 것과 마찬가지로 Docker Compose를 빌드한 후 실행했어요.</p>

<ul>
  <li>2.2. 로컬 환경 세팅의 (7), (8)을 참고해주세요.</li>
</ul>

<p>(6) 로컬 환경에서 VM Instance Airflow Webserver에 접속하여 로그인했어요.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1) http://{VM Instance의 외부 IP 주소}:8080 로 접속해요.
2) docker-compose.yaml에서 설정했던 아래의 환경 변수로 로그인하면 돼요.
  - _AIRFLOW_WWW_USER_USERNAME
  - _AIRFLOW_WWW_USER_PASSWORD
</code></pre></div></div>

<h3 id="24-dag-만들기">2.4. DAG 만들기</h3>

<p>제가 작성한 DAG 중 가장 간단한 것은 “<strong>매일 빅쿼리 사용량 알림</strong>”입니다. 구글 클라우드를 관리하고 있는 저의 안심(?)을 도모하기 위한 셀프 알림 목적을 지니고 있는데요. <code class="language-plaintext highlighter-rouge">DAG.py</code> 코드를 단계를 나누어 서술해드릴게요.</p>

<p>(1) 필요한 라이브러리 및 오퍼레이터를 불러왔어요.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# 라이브러리 및 환경변수 불러오기
# ========================================================================
</span>
<span class="kn">from</span> <span class="n">airflow</span> <span class="kn">import</span> <span class="n">DAG</span>
<span class="kn">from</span> <span class="n">airflow.operators.python</span> <span class="kn">import</span> <span class="n">PythonOperator</span>
<span class="kn">from</span> <span class="n">airflow.providers.slack.operators.slack</span> <span class="kn">import</span> <span class="n">SlackAPIPostOperator</span>
<span class="kn">from</span> <span class="n">airflow.models</span> <span class="kn">import</span> <span class="n">Variable</span>

<span class="kn">from</span> <span class="n">google.cloud</span> <span class="kn">import</span> <span class="n">bigquery</span>

<span class="kn">from</span> <span class="n">pendulum</span> <span class="kn">import</span> <span class="n">timezone</span>
<span class="kn">from</span> <span class="n">datetime</span> <span class="kn">import</span> <span class="n">datetime</span><span class="p">,</span> <span class="n">timedelta</span>
</code></pre></div></div>

<ul>
  <li>BigQuery 관련 오퍼레이터를 사용하지 않고, <code class="language-plaintext highlighter-rouge">google.cloud.bigquery</code>와 <code class="language-plaintext highlighter-rouge">PythonOperator</code>를 사용했어요. Create, Insert, Update 작업이 아닌, Select 작업의 경우 응답 받아야 하는 데이터가 많으므로 Xcom을 활용하기에는 부적절하다고 판단했기 때문이에요.</li>
</ul>

<p>(2) 중요한 변수들과 클라이언트를 정의했어요.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# 클라이언트 및 중요한 변수 정의
# ========================================================================
</span>
<span class="n">bigquery_client</span> <span class="o">=</span> <span class="n">bigquery</span><span class="p">.</span><span class="nc">Client</span><span class="p">()</span>
<span class="n">kst</span> <span class="o">=</span> <span class="nf">timezone</span><span class="p">(</span><span class="sh">'</span><span class="s">Asia/Seoul</span><span class="sh">'</span><span class="p">)</span>

<span class="n">SLACK_CHANNEL_TEST</span> <span class="o">=</span> <span class="n">Variable</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">slack-channel-test</span><span class="sh">'</span><span class="p">)</span>
<span class="n">SLACK_CHANNEL</span> <span class="o">=</span> <span class="n">Variable</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span>
    <span class="sh">'</span><span class="s">slack-channel-prod</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">default_var</span><span class="o">=</span><span class="n">SLACK_CHANNEL_TEST</span><span class="p">,</span>
<span class="p">)</span>
</code></pre></div></div>

<ul>
  <li><strong>kst</strong>: Airflow의 시간대를 한국 기준으로 명시하기 위해 <code class="language-plaintext highlighter-rouge">pendulum.timezone</code>을 사용했어요. (Airflow는 기본적으로 UTC 기준의 시간대를 바라보고 있는데, 작업시 상당히 혼동스러울 수 있거든요.)</li>
  <li><strong>슬랙 채널</strong>: 본 DAG는 최종적으로 슬랙 채널에 알림을 전송하는 Task로 끝나요. 따라서, “<strong>테스트 목적으로 만든 슬랙 채널</strong>”에 기본적으로 DAG를 실행한 후 문제가 없다면 비로소 타겟 슬랙 채널에 배포하는 것이 알림을 받아보는 동료들에게 좋은 인상을 줄 수 있을 거예요. 다음과 같이, Airflow Webserver 상에서 Variable을 추가해서 관리했어요.</li>
</ul>

<p><img src="/assets/2024-12-28-implementing-airflow/7.webp" alt="" /></p>
<blockquote>
  <p><a href="https://airflow.apache.org/docs/apache-airflow/stable/howto/variable.html">Apache Airflow Docs</a></p>
</blockquote>

<p>(3) DAG의 기본 Arguments를 Dictionary로 정의해줬어요.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# DAG Default Arguments 정의
# ========================================================================
</span>
<span class="n">default_args</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">'</span><span class="s">owner</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">김진석의 이메일 주소</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">start_date</span><span class="sh">'</span><span class="p">:</span> <span class="nf">datetime</span><span class="p">(</span><span class="mi">2025</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">tzinfo</span><span class="o">=</span><span class="n">kst</span><span class="p">),</span>
    <span class="sh">'</span><span class="s">depends_on_past</span><span class="sh">'</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
    <span class="bp">...</span>
<span class="p">}</span>
</code></pre></div></div>

<p>(4) 쿼리문을 동적으로 실행할 수 있도록 함수화했어요.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# 쿼리문 정의
# ========================================================================
</span>
<span class="bp">...</span>

<span class="c1"># 총 사용량 (사용자별)
</span><span class="k">def</span> <span class="nf">query_usage_by_user</span><span class="p">(</span><span class="n">date</span><span class="p">):</span>
    <span class="k">return</span> <span class="sa">f</span><span class="sh">"""</span><span class="s">
        SELECT
            user_email AS user,
            SUM(total_bytes_billed) / POW(2, 30) AS gibibyte
        FROM
            `</span><span class="si">{</span><span class="n">project_id</span><span class="si">}</span><span class="s">.</span><span class="si">{</span><span class="n">region</span><span class="si">}</span><span class="s">.INFORMATION_SCHEMA.JOBS`
        WHERE
            DATE(TIMESTAMP(creation_time), </span><span class="sh">"</span><span class="s">Asia/Seoul</span><span class="sh">"</span><span class="s">) = </span><span class="sh">'</span><span class="si">{</span><span class="n">date</span><span class="si">}</span><span class="sh">'</span><span class="s">
            AND job_type = </span><span class="sh">'</span><span class="s">QUERY</span><span class="sh">'</span><span class="s">
        GROUP BY
            1
        ORDER BY
            2 DESC
    </span><span class="sh">"""</span>

<span class="bp">...</span>
</code></pre></div></div>

<p>(5) Task들을 실행할 주요 함수들을 작성했어요.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# 함수 정의
# ========================================================================
</span>
<span class="c1"># BigQuery 데이터 추출
</span><span class="k">def</span> <span class="nf">fetch_bigquery_data</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>

    <span class="c1"># 어제 날짜 구하기
</span>    <span class="n">today_kst</span> <span class="o">=</span> <span class="n">kwargs</span><span class="p">[</span><span class="sh">'</span><span class="s">execution_date</span><span class="sh">'</span><span class="p">].</span><span class="nf">in_timezone</span><span class="p">(</span><span class="n">kst</span><span class="p">)</span>
    <span class="n">yesterday_kst</span> <span class="o">=</span> <span class="n">today_kst</span><span class="p">.</span><span class="nf">subtract</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">1</span><span class="p">).</span><span class="nf">to_date_string</span><span class="p">()</span>

    <span class="bp">...</span>

    <span class="c1"># 어제 총 사용량 (사용자별)
</span>    <span class="n">usage_by_user_df</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="nf">query_usage_by_user</span><span class="p">(</span><span class="n">yesterday_kst</span><span class="p">)).</span><span class="nf">to_dataframe</span><span class="p">()</span>
    <span class="n">usage_by_user_dict</span> <span class="o">=</span> <span class="n">usage_by_user_df</span><span class="p">.</span><span class="nf">set_index</span><span class="p">(</span><span class="sh">'</span><span class="s">user</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">gibibyte</span><span class="sh">'</span><span class="p">].</span><span class="nf">to_dict</span><span class="p">()</span>

    <span class="c1"># XComm으로 데이터 전달
</span>    <span class="bp">...</span>
    <span class="n">kwargs</span><span class="p">[</span><span class="sh">'</span><span class="s">ti</span><span class="sh">'</span><span class="p">].</span><span class="nf">xcom_push</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="sh">'</span><span class="s">usage_by_user_dict</span><span class="sh">'</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="n">usage_by_user_dict</span><span class="p">)</span>
    <span class="bp">...</span>

<span class="c1"># Slack 메시지 작성
</span><span class="k">def</span> <span class="nf">write_slack_message</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>

    <span class="c1"># BigQuery 결과 읽어오기
</span>    <span class="bp">...</span>
    <span class="n">usage_by_user_dict</span> <span class="o">=</span> <span class="n">kwargs</span><span class="p">[</span><span class="sh">'</span><span class="s">ti</span><span class="sh">'</span><span class="p">].</span><span class="nf">xcom_pull</span><span class="p">(</span><span class="n">task_ids</span><span class="o">=</span><span class="sh">'</span><span class="s">fetch_bigquery_data</span><span class="sh">'</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="sh">'</span><span class="s">usage_by_user_dict</span><span class="sh">'</span><span class="p">)</span>

    <span class="c1"># 메시지 만들기
</span>    <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">:bigquery: *전일 BigQuery 사용량 요약* (한국시각 기준)</span><span class="se">\n</span><span class="sh">"</span>
    <span class="bp">...</span>
    <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">*:busts_in_silhouette: 사용자별*</span><span class="se">\n</span><span class="sh">"</span>
    <span class="bp">...</span>
    <span class="k">for</span> <span class="n">user</span><span class="p">,</span> <span class="n">usage</span> <span class="ow">in</span> <span class="n">usage_by_user_dict</span><span class="p">.</span><span class="nf">items</span><span class="p">():</span>
        <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">   - *</span><span class="si">{</span><span class="n">user</span><span class="si">}</span><span class="s">*: `</span><span class="si">{</span><span class="nf">float</span><span class="p">(</span><span class="n">usage</span><span class="p">)</span><span class="si">:</span><span class="p">,.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">`GiB</span><span class="se">\n</span><span class="sh">"</span>
    <span class="bp">...</span>

    <span class="k">return</span> <span class="n">message</span>
</code></pre></div></div>

<p>(6) 마지막으로 DAG를 정의했어요.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# DAG 정의
# ========================================================================
</span>
<span class="k">with</span> <span class="nc">DAG</span><span class="p">(</span>
    <span class="sh">'</span><span class="s">DAG.py 파일 이름과 동일하게 작성</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">default_args</span> <span class="o">=</span> <span class="n">default_args</span><span class="p">,</span>
    <span class="n">description</span> <span class="o">=</span> <span class="sh">'</span><span class="s">BigQuery 사용량 알림</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">schedule_interval</span> <span class="o">=</span> <span class="sh">'</span><span class="s">5 0 * * *</span><span class="sh">'</span><span class="p">,</span> <span class="c1"># 매일 00:05 AM KST
</span>    <span class="n">catchup</span> <span class="o">=</span> <span class="bp">False</span><span class="p">,</span>
<span class="p">)</span> <span class="k">as</span> <span class="n">dag</span><span class="p">:</span>
    
    <span class="c1"># BigQuery 데이터 추출
</span>    <span class="n">task_fetch_bigquery_data</span> <span class="o">=</span> <span class="nc">PythonOperator</span><span class="p">(</span>
        <span class="n">task_id</span> <span class="o">=</span> <span class="sh">'</span><span class="s">fetch_bigquery_data</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">python_callable</span> <span class="o">=</span> <span class="n">fetch_bigquery_data</span><span class="p">,</span>
    <span class="p">)</span>

    <span class="c1"># Slack 메시지 작성
</span>    <span class="n">task_write_slack_message</span> <span class="o">=</span> <span class="nc">PythonOperator</span><span class="p">(</span>
        <span class="n">task_id</span> <span class="o">=</span> <span class="sh">'</span><span class="s">write_slack_message</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">python_callable</span> <span class="o">=</span> <span class="n">write_slack_message</span><span class="p">,</span>
    <span class="p">)</span>

    <span class="c1"># Slack 메시지 전송
</span>    <span class="n">task_send_slack_message</span> <span class="o">=</span> <span class="nc">SlackAPIPostOperator</span><span class="p">(</span>
        <span class="n">task_id</span> <span class="o">=</span> <span class="sh">'</span><span class="s">send_slack_message</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">text</span> <span class="o">=</span> <span class="sh">''</span><span class="p">,</span>
        <span class="n">slack_conn_id</span> <span class="o">=</span> <span class="sh">'</span><span class="s">slack_default</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">channel</span> <span class="o">=</span> <span class="n">SLACK_CHANNEL</span><span class="p">,</span>
    <span class="p">)</span>

    <span class="c1"># Task 간의 실행 순서 정의
</span>    <span class="n">task_fetch_bigquery_data</span> <span class="o">&gt;&gt;</span> <span class="n">task_write_slack_message</span> <span class="o">&gt;&gt;</span> <span class="n">task_send_slack_message</span>
</code></pre></div></div>

<ul>
  <li>이 DAG는 다음과 같은 흐름으로 각 Task들을 실행해요.</li>
</ul>

<p><img src="/assets/2024-12-28-implementing-airflow/8.webp" alt="" /></p>

<ul>
  <li>다음과 같은 슬랙 메시지가 전송되었어요.</li>
</ul>

<p><img src="/assets/2024-12-28-implementing-airflow/9.webp" alt="" /></p>

<hr />

<h1 id="3-앞으로의-과제">3. 앞으로의 과제</h1>

<p>사실, Linux나 Docker 환경에 익숙하지 않은 사람들에게 Airflow는 러닝 커브가 상당히 가파른 편이에요. 여러 가지 Orchestration 관리 도구 중 Airflow가 가장 자유도가 높은 만큼 어렵기 때문인데요. 하지만 Python에 상당히 익숙한 데이터 분석가, 애널리틱스 엔지니어, 그리고 백엔드 개발자라면 서로 커뮤니케이션을 하는 데 상당히 도움이 될 거예요.</p>

<p>사내에 본격적으로 Airflow를 도입한 후, 다음과 같은 “<strong>응용 버전</strong>”의 고민들이 추가로 생겼어요. 꼭 풀어가고 싶은 것들입니다.</p>

<ul>
  <li>외부 데이터 수집을 위한 파이프라인을 설계한 후, 정제된 데이터를 이해관계자 동료들에게 이메일이나 슬랙 DM으로 전송하기</li>
  <li>dbt의 각 테이블 의존성이나 최신화 주기 차이에 따라 배치 실행을 분리한 후 Airflow DAG로 관리하기</li>
  <li>이 외에도 여러 가지 고민들</li>
</ul>

<p>Airflow를 통해 유지보수 부담을 줄이고, 워크플로우의 안정성을 제고함으로써 개인적인 업무 효율화를 극대화할 수 있을 것으로 기대하고 있어요. 늘어난 가용 시간만큼 더욱 중요한 일에 몰입하여 동료들이 데이터를 더욱 잘 활용할 수 있는 환경을 만들 수 있기를 바라요. 개인적인 학습 뿐만 아니라, 기업의 성장과 고객의 만족을 위한 방향일테니까요.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (Korean)" /><category term="Article (Project)" /><category term="Level (1. Beginner)" /><category term="Field (Data Engineering)" /><category term="Skills (Airflow)" /><summary type="html"><![CDATA[“Airflow 도입을 통해 사내 데이터 알림 시스템을 효율적으로 관리하고자 기존 Python 기반 세션 방식에서 벗어나 DAG 기반 워크플로우를 구축했습니다. Docker Compose를 활용해 로컬 및 VM 환경에서 Airflow를 설정하고, Slack 알림을 포함한 다양한 데이터 파이프라인을 자동화했습니다. 이를 통해 유지보수 부담을 줄이고, 안정성을 높이며, 확장 가능한 데이터 처리 환경을 마련할 수 있었습니다.”]]></summary></entry><entry><title type="html">Review of Implementing Airflow</title><link href="http://localhost:4000/implementing-airflow-en/" rel="alternate" type="text/html" title="Review of Implementing Airflow" /><published>2024-12-28T00:00:00+09:00</published><updated>2024-12-28T00:00:00+09:00</updated><id>http://localhost:4000/implementing-airflow-en</id><content type="html" xml:base="http://localhost:4000/implementing-airflow-en/"><![CDATA[<blockquote>
  <p>“By adopting Airflow, we transitioned from a traditional Python-based session approach to a DAG-based workflow to efficiently manage our internal data notification system. Using Docker Compose, we set up Airflow in both local and VM environments and automated various data pipelines, including Slack notifications. This implementation reduced maintenance overhead, improved stability, and established a scalable data processing environment.”</p>
</blockquote>

<hr />

<h1 id="table-of-contents">Table of Contents</h1>
<ol>
  <li>Background of Adoption</li>
  <li>Review of Implementation
    <ul>
      <li>2.1. Project Plan</li>
      <li>2.2. Local Environment Setup</li>
      <li>2.3. VM Instance Environment Setup</li>
      <li>2.4. Creating a DAG</li>
    </ul>
  </li>
  <li>Future Challenges</li>
</ol>

<hr />

<h1 id="1-background-of-adoption">1. Background of Adoption</h1>

<p>As a Data Engineer at IoTrust, I mainly focus on <strong>Analytics Engineering</strong> tasks such as:</p>

<pre><code class="language-plain">- (1) Designing and developing the data warehouse &amp; data mart
- (2) BI dashboards
- (3) Ad-hoc data notification bot development
- (4) Event taxonomy design and documentation management
- (5) Automation of (Finance/HR/CX) tasks
</code></pre>

<p>However, over time, problems began to arise with my role in “<strong>(3) Ad-hoc data notification bot development</strong>”. As I worked to enable colleagues to quickly check key metrics on Slack in real-time, the number of Python files gradually increased, and managing them became more resource-intensive.</p>

<p><img src="/assets/2024-12-28-implementing-airflow/1.webp" alt="" /></p>

<p>Specifically, I was managing all Slack notifications by running individual Python files directly in separate sessions using <code class="language-plaintext highlighter-rouge">tmux</code>. <code class="language-plaintext highlighter-rouge">tmux</code> is an open-source terminal multiplexer that allows managing multiple sessions independently within a single terminal. (<a href="https://en.wikipedia.org/wiki/Tmux">Wikipedia</a>)</p>

<p><img src="/assets/2024-12-28-implementing-airflow/2.webp" alt="" /></p>

<p>As the number of Python files grew and the complexity increased, the following issues emerged:</p>

<p><strong>(1) Increased Maintenance Burden</strong></p>

<p>When a Python script encountered an error, execution stopped immediately, and colleagues would not receive notifications until debugging was complete. There was no retry mechanism in place.</p>

<p>Additionally, debugging took a significant amount of time. Since dependent pipeline steps were all managed within a single main() function, identifying the exact failure point was difficult, leading to considerable time wasted. As a result, it became harder to stay focused on more important tasks.</p>

<p><strong>(2) Lack of Stability in Session-Based Management</strong></p>

<p>Server reboots or network issues could disrupt tasks, and there were instances where sessions were unexpectedly terminated, requiring recovery efforts.</p>

<p>Moreover, since all sessions shared the same environment, dependency conflicts could occur even when using <a href="https://docs.python.org/3/library/venv.html">Python Venv</a>.</p>

<p><strong>Due to these reasons, the need for Airflow as a workflow management tool grew stronger.</strong></p>

<ul>
  <li>Tasks can be automatically recovered simply by restarting containers.</li>
  <li>Each task operates in an isolated environment.</li>
  <li>The system is scalable for future workflow expansions.</li>
  <li>The web UI makes task monitoring and management easier.</li>
</ul>

<p>Initially, I had considered introducing Airflow when starting “<strong>Ad-hoc data notification bot development</strong>”. However, since the workflow was small at the time, I followed the <strong>YAGNI</strong> principle and decided against premature adoption.</p>

<p><a href="https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it">YAGNI</a> stands for “<strong>You Aren’t Gonna Need It</strong>,” an Agile software development principle that advises against adding unnecessary complexity. At that time, I believed in setting up a workflow that only met current needs, so I opted for a session-based approach.</p>

<p>However, as the workflow scaled, inefficiencies and resource waste in session management became more evident. This led me to finally decide on adopting Airflow.</p>

<hr />

<h1 id="2-review-of-implementation">2. Review of Implementation</h1>

<h3 id="21-project-plan">2.1. Project Plan</h3>

<p><img src="/assets/2024-12-28-implementing-airflow/3.webp" alt="" /></p>

<p>First, I established a plan as shown above.</p>

<p>(1) Modify existing Python scripts to fit the <strong>DAG format</strong>.</p>

<p>(2) Build the Airflow project in a <strong>local environment</strong> using Docker Compose and verify that notifications are correctly sent to a Slack test channel.</p>

<p>(3) Deploy the Airflow project on a <strong>VM instance</strong> using Docker Compose to finalize the notification system.</p>

<h3 id="22-local-environment-setup">2.2. Local Environment Setup</h3>

<p>(0) Docker must be installed.</p>

<ul>
  <li>I installed the Docker Desktop app. You can refer to <a href="https://www.docker.com/get-started/">this guide</a> for installation instructions.</li>
</ul>

<p>(1) Created a Python virtual environment.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python <span class="nt">-m</span> venv venv
<span class="nb">source </span>venv/bin/activate
</code></pre></div></div>

<p>(2) Loaded the Airflow image by running the following command in a directory named <code class="language-plaintext highlighter-rouge">airflow</code> (this will generate a <code class="language-plaintext highlighter-rouge">docker-compose.yaml</code> file).</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-LfO</span> <span class="s1">'https://airflow.apache.org/docs/apache-airflow/2.9.1/docker-compose.yaml'</span>
</code></pre></div></div>

<p>(3) Created <code class="language-plaintext highlighter-rouge">dags</code>, <code class="language-plaintext highlighter-rouge">logs</code>, <code class="language-plaintext highlighter-rouge">plugins</code> directories and an <code class="language-plaintext highlighter-rouge">.env</code> file with the <strong>AIRFLOW_UID</strong> environment variable.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> ./dags ./logs ./plugins
<span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"AIRFLOW_UID=</span><span class="si">$(</span><span class="nb">id</span> <span class="nt">-u</span><span class="si">)</span><span class="s2">"</span> <span class="o">&gt;</span> .env
</code></pre></div></div>

<p>(4) Created a <code class="language-plaintext highlighter-rouge">Dockerfile</code> with the following content.</p>

<div class="language-Dockerfile highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># First-time build can take upto 10 mins.</span>

<span class="k">FROM</span><span class="s"> apache/airflow:2.9.1</span>

<span class="k">ENV</span><span class="s"> AIRFLOW_HOME=/opt/airflow</span>

<span class="k">USER</span><span class="s"> root</span>
<span class="k">RUN </span>apt-get update <span class="nt">-qq</span> <span class="o">&amp;&amp;</span> apt-get <span class="nb">install </span>vim <span class="nt">-qqq</span>
<span class="c"># git gcc g++ -qqq</span>

<span class="k">COPY</span><span class="s"> requirements.txt .</span>
<span class="k">RUN </span>pip <span class="nb">install</span> <span class="nt">--no-cache-dir</span> <span class="nt">-r</span> requirements.txt

<span class="c"># Ref: https://airflow.apache.org/docs/docker-stack/recipes.html</span>

<span class="k">SHELL</span><span class="s"> ["/bin/bash", "-o", "pipefail", "-e", "-u", "-x", "-c"]</span>

<span class="k">ARG</span><span class="s"> CLOUD_SDK_VERSION=322.0.0</span>
<span class="k">ENV</span><span class="s"> GCLOUD_HOME=/home/google-cloud-sdk</span>

<span class="k">ENV</span><span class="s"> PATH="${GCLOUD_HOME}/bin/:${PATH}"</span>

<span class="k">RUN </span><span class="nv">DOWNLOAD_URL</span><span class="o">=</span><span class="s2">"https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-</span><span class="k">${</span><span class="nv">CLOUD_SDK_VERSION</span><span class="k">}</span><span class="s2">-linux-x86_64.tar.gz"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="nv">TMP_DIR</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span><span class="nb">mktemp</span> <span class="nt">-d</span><span class="si">)</span><span class="s2">"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> curl <span class="nt">-fL</span> <span class="s2">"</span><span class="k">${</span><span class="nv">DOWNLOAD_URL</span><span class="k">}</span><span class="s2">"</span> <span class="nt">--output</span> <span class="s2">"</span><span class="k">${</span><span class="nv">TMP_DIR</span><span class="k">}</span><span class="s2">/google-cloud-sdk.tar.gz"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="nb">mkdir</span> <span class="nt">-p</span> <span class="s2">"</span><span class="k">${</span><span class="nv">GCLOUD_HOME</span><span class="k">}</span><span class="s2">"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="nb">tar </span>xzf <span class="s2">"</span><span class="k">${</span><span class="nv">TMP_DIR</span><span class="k">}</span><span class="s2">/google-cloud-sdk.tar.gz"</span> <span class="nt">-C</span> <span class="s2">"</span><span class="k">${</span><span class="nv">GCLOUD_HOME</span><span class="k">}</span><span class="s2">"</span> <span class="nt">--strip-components</span><span class="o">=</span>1 <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="s2">"</span><span class="k">${</span><span class="nv">GCLOUD_HOME</span><span class="k">}</span><span class="s2">/install.sh"</span> <span class="se">\
</span>       <span class="nt">--bash-completion</span><span class="o">=</span><span class="nb">false</span> <span class="se">\
</span>       <span class="nt">--path-update</span><span class="o">=</span><span class="nb">false</span> <span class="se">\
</span>       <span class="nt">--usage-reporting</span><span class="o">=</span><span class="nb">false</span> <span class="se">\
</span>       <span class="nt">--quiet</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> <span class="nb">rm</span> <span class="nt">-rf</span> <span class="s2">"</span><span class="k">${</span><span class="nv">TMP_DIR</span><span class="k">}</span><span class="s2">"</span> <span class="se">\
</span>    <span class="o">&amp;&amp;</span> gcloud <span class="nt">--version</span>

<span class="k">WORKDIR</span><span class="s"> $AIRFLOW_HOME</span>

<span class="k">COPY</span><span class="s"> scripts scripts</span>
<span class="k">RUN </span><span class="nb">chmod</span> +x scripts

<span class="k">USER</span><span class="s"> $AIRFLOW_UID</span>
</code></pre></div></div>

<p>(5) Created a <code class="language-plaintext highlighter-rouge">requirements.txt</code> file.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apache-airflow-providers-google
pyarrow
</code></pre></div></div>

<p>(6) Edited <code class="language-plaintext highlighter-rouge">docker-compose.yaml</code> to include environment variables for Google Cloud and Slack authentication.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">/keys</code>: Used to store the Google Cloud service account JSON key file.</li>
  <li><code class="language-plaintext highlighter-rouge">.env</code>: Stores Airflow Admin login credentials and Slack API token.</li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">x-airflow-common</span><span class="pi">:</span>
  <span class="s">...</span>
  <span class="s">environment</span><span class="err">:</span>
    <span class="s">...</span>
    <span class="s">AIRFLOW__CORE__LOAD_EXAMPLES</span><span class="err">:</span> <span class="s1">'</span><span class="s">false'</span> <span class="c1"># Prevents sample DAGs from being created.</span>
    <span class="s">...</span>
    <span class="s">GOOGLE_APPLICATION_CREDENTIALS</span><span class="err">:</span> <span class="s">/keys/airflow_credentials.json</span> <span class="c1"># Path to Google Cloud service account JSON key file.</span>
    <span class="na">AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT</span><span class="pi">:</span> <span class="s1">'</span><span class="s">google-cloud-platform://?extra__google_cloud_platform__key_path=/keys/airflow_credentials.json'</span> <span class="c1"># Same as above.</span>
    <span class="na">GCP_PROJECT_ID</span><span class="pi">:</span> <span class="s1">'</span><span class="s">gcp_project_id'</span> <span class="c1"># Google Cloud project ID.</span>
    <span class="na">AIRFLOW_CONN_SLACK_DEFAULT</span><span class="pi">:</span> <span class="s1">'</span><span class="s">slack://:${SLACK_TOKEN}@'</span> <span class="c1"># Slack API token managed in the .env file.</span>
    <span class="s">...</span>
  <span class="na">volumes</span><span class="pi">:</span>
    <span class="s">...</span>
    <span class="s">- ./keys:/keys:ro</span> <span class="c1"># Maps the `/keys` directory containing the Google Cloud service account JSON key file to Docker.</span>
<span class="nn">...</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="s">...</span>
  <span class="s">airflow-init</span><span class="err">:</span>
    <span class="s">...</span>
    <span class="s">environment</span><span class="err">:</span>
      <span class="s">...</span>
      <span class="s">_AIRFLOW_WWW_USER_USERNAME</span><span class="err">:</span> <span class="s">${_AIRFLOW_WWW_USER_USERNAME}</span> <span class="c1"># Airflow Webserver login credentials stored in .env.</span>
      <span class="na">_AIRFLOW_WWW_USER_PASSWORD</span><span class="pi">:</span> <span class="s">${_AIRFLOW_WWW_USER_PASSWORD}</span> <span class="c1"># Airflow Webserver login credentials stored in .env.</span>
      <span class="s">...</span>
</code></pre></div></div>

<p>(7) Building Docker Compose and Initializing Airflow</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose build
docker-compose up airflow-init
</code></pre></div></div>

<p>(8) Running Docker Compose</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose up <span class="nt">-d</span>
docker-compose ps
</code></pre></div></div>

<p>(9) Accessing the Airflow Webserver</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1) Open http://0.0.0.0:8080 in a browser.
2) Log in using the credentials set in the `docker-compose.yaml` file:
  - _AIRFLOW_WWW_USER_USERNAME
  - _AIRFLOW_WWW_USER_PASSWORD
</code></pre></div></div>

<p><img src="/assets/2024-12-28-implementing-airflow/4.webp" alt="" /></p>

<p>(10) Initializing Git and Linking to GitHub</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git init
git remote add origin https://github.com/.../airflow.git
git branch <span class="nt">-m</span> main
git add <span class="nb">.</span>
git commit <span class="nt">-m</span> <span class="s2">"created airflow project"</span>
git push <span class="nt">-u</span> origin main
</code></pre></div></div>

<h3 id="23-vm-instance-environment-setup">2.3. VM Instance Environment Setup</h3>

<p>(1) Creating Firewall Rules (To allow internal access to the Airflow Webserver running on the VM Instance, I configured firewall rules.)</p>

<p><img src="/assets/2024-12-28-implementing-airflow/5.webp" alt="" /></p>

<ul>
  <li><strong>Direction</strong>: Ingress</li>
  <li><strong>Target Tags</strong>: airflow (You can name this as needed.)</li>
  <li><strong>Source Filter &gt; IP Range</strong>: Internal company IP address range.</li>
  <li><strong>Protocol and Port</strong>: tcp-8080 (The webserver communicates with the host machine via port 8080, which can be modified in <code class="language-plaintext highlighter-rouge">docker-compose.yaml</code>.)</li>
</ul>

<p>(2) Creating the <code class="language-plaintext highlighter-rouge">airflow</code> VM Instance</p>

<p><img src="/assets/2024-12-28-implementing-airflow/6.webp" alt="" /></p>

<ul>
  <li><strong>Machine Type</strong>: E2 series with at least 2 vCPUs and 8GB of memory (If using 4GB, the server may struggle with network traffic.)</li>
  <li><strong>OS &amp; Storage</strong>: Debian OS, 10GB storage.</li>
  <li><strong>Firewall</strong>: Enabled HTTP &amp; HTTPS traffic, and assigned the <code class="language-plaintext highlighter-rouge">airflow</code> tag created in the firewall settings.</li>
</ul>

<p>(3) Installing Docker and Python Virtual Environment (Following the same setup as in the local environment)</p>

<ul>
  <li>Refer to steps (0) and (1) from Section 2.2 for installing Docker and setting up a Python virtual environment.</li>
</ul>

<p>(4) Cloning the Repository and Configuring Environment Files (Created the <code class="language-plaintext highlighter-rouge">airflow</code> directory and cloned the remote repository. Then, manually added <code class="language-plaintext highlighter-rouge">/keys</code> and <code class="language-plaintext highlighter-rouge">.env</code> files.)</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/.../airflow.git
</code></pre></div></div>

<p>(5) Building and Running Airflow on the VM (Following the same procedure as the local environment)</p>

<ul>
  <li>Refer to steps (7) and (8) from Section 2.2 to build and execute Docker Compose.</li>
</ul>

<p>(6) Accessing the Airflow Webserver on the VM</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1) Open http://{VM Instance External IP}:8080 in a browser.
2) Log in using the credentials set in the docker-compose.yaml file:
  - _AIRFLOW_WWW_USER_USERNAME
  - _AIRFLOW_WWW_USER_PASSWORD
</code></pre></div></div>

<h3 id="24-creating-a-dag">2.4. Creating a DAG</h3>

<p>The simplest DAG I created is <strong>the Daily BigQuery Usage Notification</strong>. This is primarily a self-notification system to help me manage Google Cloud resources efficiently. Below, I will break down the <code class="language-plaintext highlighter-rouge">DAG.py</code> code step by step.</p>

<p>(1) Importing Required Libraries and Operators</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# Importing Required Libraries and Environment Variables
# ========================================================================
</span>
<span class="kn">from</span> <span class="n">airflow</span> <span class="kn">import</span> <span class="n">DAG</span>
<span class="kn">from</span> <span class="n">airflow.operators.python</span> <span class="kn">import</span> <span class="n">PythonOperator</span>
<span class="kn">from</span> <span class="n">airflow.providers.slack.operators.slack</span> <span class="kn">import</span> <span class="n">SlackAPIPostOperator</span>
<span class="kn">from</span> <span class="n">airflow.models</span> <span class="kn">import</span> <span class="n">Variable</span>

<span class="kn">from</span> <span class="n">google.cloud</span> <span class="kn">import</span> <span class="n">bigquery</span>

<span class="kn">from</span> <span class="n">pendulum</span> <span class="kn">import</span> <span class="n">timezone</span>
<span class="kn">from</span> <span class="n">datetime</span> <span class="kn">import</span> <span class="n">datetime</span><span class="p">,</span> <span class="n">timedelta</span>
</code></pre></div></div>

<ul>
  <li>Instead of using BigQuery-specific Airflow operators, I opted for <code class="language-plaintext highlighter-rouge">google.cloud.bigquery</code> and <code class="language-plaintext highlighter-rouge">PythonOperator</code>. Since this DAG primarily involves SELECT queries that return large datasets, using XCom to pass data between tasks would be inefficient.</li>
</ul>

<p>(2) Defining Key Variables and Clients</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# Defining Clients and Key Variables
# ========================================================================
</span>
<span class="n">bigquery_client</span> <span class="o">=</span> <span class="n">bigquery</span><span class="p">.</span><span class="nc">Client</span><span class="p">()</span>
<span class="n">kst</span> <span class="o">=</span> <span class="nf">timezone</span><span class="p">(</span><span class="sh">'</span><span class="s">Asia/Seoul</span><span class="sh">'</span><span class="p">)</span>

<span class="n">SLACK_CHANNEL_TEST</span> <span class="o">=</span> <span class="n">Variable</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">slack-channel-test</span><span class="sh">'</span><span class="p">)</span>
<span class="n">SLACK_CHANNEL</span> <span class="o">=</span> <span class="n">Variable</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span>
    <span class="sh">'</span><span class="s">slack-channel-prod</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">default_var</span><span class="o">=</span><span class="n">SLACK_CHANNEL_TEST</span><span class="p">,</span>
<span class="p">)</span>
</code></pre></div></div>

<ul>
  <li><strong>kst</strong>: Since Airflow uses UTC as its default timezone, I explicitly set it to Korean Standard Time using <code class="language-plaintext highlighter-rouge">pendulum.timezone</code>.</li>
  <li><strong>Slack Channel</strong>: The final step in this DAG sends a notification to a Slack channel. To prevent unnecessary alerts, I first test the DAG using <strong>a dedicated Slack test channel</strong> before deploying it to the production channel.</li>
</ul>

<p><img src="/assets/2024-12-28-implementing-airflow/7.webp" alt="" /></p>
<blockquote>
  <p><a href="https://airflow.apache.org/docs/apache-airflow/stable/howto/variable.html">Apache Airflow Docs</a></p>
</blockquote>

<p>(3) Defining DAG Default Arguments</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# Defining DAG Default Arguments
# ========================================================================
</span>
<span class="n">default_args</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">'</span><span class="s">owner</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Joshua Kim</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">start_date</span><span class="sh">'</span><span class="p">:</span> <span class="nf">datetime</span><span class="p">(</span><span class="mi">2025</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">tzinfo</span><span class="o">=</span><span class="n">kst</span><span class="p">),</span>
    <span class="sh">'</span><span class="s">depends_on_past</span><span class="sh">'</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
    <span class="bp">...</span>
<span class="p">}</span>
</code></pre></div></div>

<p>(4) Writing Dynamic Query Functions</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# Query Definitions
# ========================================================================
</span>
<span class="bp">...</span>

<span class="c1"># Query Usage (by user)
</span><span class="k">def</span> <span class="nf">query_usage_by_user</span><span class="p">(</span><span class="n">date</span><span class="p">):</span>
    <span class="k">return</span> <span class="sa">f</span><span class="sh">"""</span><span class="s">
        SELECT
            user_email AS user,
            SUM(total_bytes_billed) / POW(2, 30) AS gibibyte
        FROM
            `</span><span class="si">{</span><span class="n">project_id</span><span class="si">}</span><span class="s">.</span><span class="si">{</span><span class="n">region</span><span class="si">}</span><span class="s">.INFORMATION_SCHEMA.JOBS`
        WHERE
            DATE(TIMESTAMP(creation_time), </span><span class="sh">"</span><span class="s">Asia/Seoul</span><span class="sh">"</span><span class="s">) = </span><span class="sh">'</span><span class="si">{</span><span class="n">date</span><span class="si">}</span><span class="sh">'</span><span class="s">
            AND job_type = </span><span class="sh">'</span><span class="s">QUERY</span><span class="sh">'</span><span class="s">
        GROUP BY
            1
        ORDER BY
            2 DESC
    </span><span class="sh">"""</span>

<span class="bp">...</span>
</code></pre></div></div>

<p>(5) Writing Core Functions for Task Execution</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# Function Definitions
# ========================================================================
</span>
<span class="c1"># Fetch BigQuery Data
</span><span class="k">def</span> <span class="nf">fetch_bigquery_data</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>

    <span class="c1"># Yesterday
</span>    <span class="n">today_kst</span> <span class="o">=</span> <span class="n">kwargs</span><span class="p">[</span><span class="sh">'</span><span class="s">execution_date</span><span class="sh">'</span><span class="p">].</span><span class="nf">in_timezone</span><span class="p">(</span><span class="n">kst</span><span class="p">)</span>
    <span class="n">yesterday_kst</span> <span class="o">=</span> <span class="n">today_kst</span><span class="p">.</span><span class="nf">subtract</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">1</span><span class="p">).</span><span class="nf">to_date_string</span><span class="p">()</span>

    <span class="bp">...</span>

    <span class="c1"># Query Usage by user Yesterday
</span>    <span class="n">usage_by_user_df</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="nf">query_usage_by_user</span><span class="p">(</span><span class="n">yesterday_kst</span><span class="p">)).</span><span class="nf">to_dataframe</span><span class="p">()</span>
    <span class="n">usage_by_user_dict</span> <span class="o">=</span> <span class="n">usage_by_user_df</span><span class="p">.</span><span class="nf">set_index</span><span class="p">(</span><span class="sh">'</span><span class="s">user</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">gibibyte</span><span class="sh">'</span><span class="p">].</span><span class="nf">to_dict</span><span class="p">()</span>

    <span class="c1"># Push Data to XCom
</span>    <span class="bp">...</span>
    <span class="n">kwargs</span><span class="p">[</span><span class="sh">'</span><span class="s">ti</span><span class="sh">'</span><span class="p">].</span><span class="nf">xcom_push</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="sh">'</span><span class="s">usage_by_user_dict</span><span class="sh">'</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="n">usage_by_user_dict</span><span class="p">)</span>
    <span class="bp">...</span>

<span class="c1"># Write a Slack Message
</span><span class="k">def</span> <span class="nf">write_slack_message</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>

    <span class="c1"># Read BigQuery Data
</span>    <span class="bp">...</span>
    <span class="n">usage_by_user_dict</span> <span class="o">=</span> <span class="n">kwargs</span><span class="p">[</span><span class="sh">'</span><span class="s">ti</span><span class="sh">'</span><span class="p">].</span><span class="nf">xcom_pull</span><span class="p">(</span><span class="n">task_ids</span><span class="o">=</span><span class="sh">'</span><span class="s">fetch_bigquery_data</span><span class="sh">'</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="sh">'</span><span class="s">usage_by_user_dict</span><span class="sh">'</span><span class="p">)</span>

    <span class="c1"># Create a Message
</span>    <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">:bigquery: *Daily BigQuery Usage Summary* (Korean Timezone)</span><span class="se">\n</span><span class="sh">"</span>
    <span class="bp">...</span>
    <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">*:busts_in_silhouette: By User*</span><span class="se">\n</span><span class="sh">"</span>
    <span class="bp">...</span>
    <span class="k">for</span> <span class="n">user</span><span class="p">,</span> <span class="n">usage</span> <span class="ow">in</span> <span class="n">usage_by_user_dict</span><span class="p">.</span><span class="nf">items</span><span class="p">():</span>
        <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">   - *</span><span class="si">{</span><span class="n">user</span><span class="si">}</span><span class="s">*: `</span><span class="si">{</span><span class="nf">float</span><span class="p">(</span><span class="n">usage</span><span class="p">)</span><span class="si">:</span><span class="p">,.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">`GiB</span><span class="se">\n</span><span class="sh">"</span>
    <span class="bp">...</span>

    <span class="k">return</span> <span class="n">message</span>
</code></pre></div></div>

<p>(6) Defining the DAG</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ========================================================================
# DAG Definition
# ========================================================================
</span>
<span class="k">with</span> <span class="nc">DAG</span><span class="p">(</span>
    <span class="sh">'</span><span class="s">bigquery_usage_alert</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">default_args</span><span class="o">=</span><span class="n">default_args</span><span class="p">,</span>
    <span class="n">description</span><span class="o">=</span><span class="sh">'</span><span class="s">BigQuery Usage Notification</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">schedule_interval</span><span class="o">=</span><span class="sh">'</span><span class="s">5 0 * * *</span><span class="sh">'</span><span class="p">,</span> <span class="c1"># Runs daily at 12:05 AM KST
</span>    <span class="n">catchup</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
<span class="p">)</span> <span class="k">as</span> <span class="n">dag</span><span class="p">:</span>
    
    <span class="c1"># Fetch BigQuery Data
</span>    <span class="n">task_fetch_bigquery_data</span> <span class="o">=</span> <span class="nc">PythonOperator</span><span class="p">(</span>
        <span class="n">task_id</span><span class="o">=</span><span class="sh">'</span><span class="s">fetch_bigquery_data</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">python_callable</span><span class="o">=</span><span class="n">fetch_bigquery_data</span><span class="p">,</span>
    <span class="p">)</span>
    
    <span class="c1"># Write a Slack Message
</span>    <span class="n">task_write_slack_message</span> <span class="o">=</span> <span class="nc">PythonOperator</span><span class="p">(</span>
        <span class="n">task_id</span><span class="o">=</span><span class="sh">'</span><span class="s">write_slack_message</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">python_callable</span><span class="o">=</span><span class="n">write_slack_message</span><span class="p">,</span>
    <span class="p">)</span>
    
    <span class="c1"># Send a Slack Message
</span>    <span class="n">task_send_slack_message</span> <span class="o">=</span> <span class="nc">SlackAPIPostOperator</span><span class="p">(</span>
        <span class="n">task_id</span><span class="o">=</span><span class="sh">'</span><span class="s">send_slack_message</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">text</span><span class="o">=</span><span class="sh">''</span><span class="p">,</span>
        <span class="n">slack_conn_id</span><span class="o">=</span><span class="sh">'</span><span class="s">slack_default</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">channel</span><span class="o">=</span><span class="n">SLACK_CHANNEL</span><span class="p">,</span>
    <span class="p">)</span>
    
    <span class="c1"># Data Lineage
</span>    <span class="n">task_fetch_bigquery_data</span> <span class="o">&gt;&gt;</span> <span class="n">task_write_slack_message</span> <span class="o">&gt;&gt;</span> <span class="n">task_send_slack_message</span>
</code></pre></div></div>

<ul>
  <li>This DAG follows a straightforward workflow:</li>
</ul>

<p><img src="/assets/2024-12-28-implementing-airflow/8.webp" alt="" /></p>

<ul>
  <li>And the Slack notification looks like this:</li>
</ul>

<p><img src="/assets/2024-12-28-implementing-airflow/9.webp" alt="" /></p>

<hr />

<h1 id="3-future-challenges">3. Future Challenges</h1>

<p>Airflow presents a steep learning curve, especially for those unfamiliar with Linux or Docker environments. However, its flexibility makes it an excellent orchestration tool for data analysts, analytics engineers, and backend developers.</p>

<p>Following the successful implementation of Airflow in our company, I am now considering <strong>additional enhancements</strong>:</p>

<ul>
  <li>Designing external data collection pipelines and sending refined data to stakeholders via email or Slack.</li>
  <li>Managing dbt table dependencies by setting up separate batch executions using Airflow DAGs.</li>
  <li>Exploring other optimization opportunities.</li>
</ul>

<p>By reducing maintenance overhead and improving workflow stability through Airflow, I aim to maximize my work efficiency and focus more on high-impact tasks that enable my colleagues to better utilize data. Ultimately, this aligns with both my learning goals and my company’s growth objectives.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (English)" /><category term="Article (Project)" /><category term="Level (1. Beginner)" /><category term="Field (Data Engineering)" /><category term="Skills (Airflow)" /><summary type="html"><![CDATA[“By adopting Airflow, we transitioned from a traditional Python-based session approach to a DAG-based workflow to efficiently manage our internal data notification system. Using Docker Compose, we set up Airflow in both local and VM environments and automated various data pipelines, including Slack notifications. This implementation reduced maintenance overhead, improved stability, and established a scalable data processing environment.”]]></summary></entry><entry><title type="html">GA4 기반 데이터 웨어하우스 구축 후기</title><link href="http://localhost:4000/implementing-data-warehouse-ga4-ko/" rel="alternate" type="text/html" title="GA4 기반 데이터 웨어하우스 구축 후기" /><published>2024-11-03T00:00:00+09:00</published><updated>2024-11-03T00:00:00+09:00</updated><id>http://localhost:4000/implementing-data-warehouse-ga4-ko</id><content type="html" xml:base="http://localhost:4000/implementing-data-warehouse-ga4-ko/"><![CDATA[<blockquote>
  <p>“이 글은 Google Analytics 4(GA4) 데이터를 효율적으로 활용하기 위해 데이터 웨어하우스를 구축한 과정과 결과를 공유하는 후기입니다. 기존에는 GA4 Export Table에 직접 쿼리를 실행하는 방식이었지만, 스키마 복잡성, 느린 쿼리 실행 시간, 높은 비용 문제를 해결하기 위해 데이터 마트를 구성하고, dbt를 활용한 Incremental Strategy를 적용하여 성능을 최적화했습니다. 그 결과, 쿼리 속도가 획기적으로 향상되고 비용이 절감되었으며, 조직 내 데이터 접근성이 높아져 보다 효율적인 데이터 활용이 가능해졌습니다.”</p>
</blockquote>

<hr />

<h1 id="목차">목차</h1>
<ol>
  <li>들어가는 글</li>
  <li>문제 상황 진단
    <ul>
      <li>2.1. 소스 테이블의 까다로운 스키마</li>
      <li>2.2. 느린 쿼리 실행 시간과 높은 쿼리 비용</li>
    </ul>
  </li>
  <li>해결 방법: 데이터 웨어하우스 구축
    <ul>
      <li>3.1. 각 데이터 마트 테이블의 간결한 스키마</li>
      <li>3.2. 빠른 쿼리 실행 시간과 낮은 쿼리 비용</li>
    </ul>
  </li>
  <li>데이터 웨어하우스 구축 방법
    <ul>
      <li>4.1. 데이터 웨어하우스 Data Lineage 미리보기</li>
      <li>4.2. <code class="language-plaintext highlighter-rouge">core_fct_events</code> 테이블 모델 만들기</li>
      <li>4.3. 각 event-specific 테이블 모델 만들기</li>
      <li>4.4. <code class="language-plaintext highlighter-rouge">core_dim_users</code> 테이블 모델 만들기</li>
      <li>4.5. Incremental Strategy 전략을 위한 Where Statement와 Variables 관리</li>
    </ul>
  </li>
  <li>결과
    <ul>
      <li>5.1. 쿼리 속도 향상 및 비용 감소</li>
      <li>5.2. 조직의 데이터 접근성 향상</li>
    </ul>
  </li>
  <li>나가는 글</li>
</ol>

<hr />

<h1 id="1-들어가는-글">1. 들어가는 글</h1>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/1.webp" alt="" /></p>
<blockquote>
  <p>아이오트러스트 데이터 파이프라인 간략화</p>
</blockquote>

<p>저희 회사는 B2C 프로덕트 디센트 지갑과 B2B2C 프로덕트 위핀 지갑을 운영하고 있습니다. 이 중, 디센트 지갑의 경우 기본적으로 모두 Google Analytics 4를 거쳐 BigQuery에 데이터를 적재하고 있는데요!</p>

<p>많은 스타트업들이 BigQuery에 적재된 Google Analytics 4 Export Table에 직접 쿼리를 실행하는 방식으로 데이터를 활용하고 계실 것입니다. 그러나 이러한 “소스 테이블에 의존된” 쿼리 실행 방식은 시간이 흐를수록 쿼리 비용과 시간에 큰 장애를 낳기 쉽습니다.</p>

<p>따라서 저는 이를 극복하기 위해 “정말 흔치 않은” GA4 기반 데이터 웨어하우스 구조를 도입했고, 이번 글에서는 이에 대한 후기를 전달해드리고자 합니다.</p>

<hr />

<h1 id="2-문제-상황-진단">2. 문제 상황 진단</h1>

<h3 id="21-소스-테이블의-까다로운-스키마">2.1. 소스 테이블의 까다로운 스키마</h3>

<p>BigQuery에 스트리밍되는 Google Analytics 4 Export Table은 구조적 확장에 따른 유연성을 갖추고자 각 이벤트 파라미터나 구매 제품 정보가 RECORD 타입으로 이루어져 있습니다. Columnar Database 구조를 통해 스토리지 비용을 줄이기 위한 구글의 채택 방식인 것이죠.</p>

<p>가령, <code class="language-plaintext highlighter-rouge">event_params</code> 의 경우 마치 JSON 형식 처럼 Key, Value가 분리된 형태로 적재되어 있어서 이를 다뤄보지 않은 사람에게는 쿼리 작성 난이도가 꽤 높은 편입니다.</p>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/2.webp" alt="" /></p>
<blockquote>
  <p>GA4 소스 테이블 스키마 (공개 샘플 테이블)</p>
</blockquote>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/3.webp" alt="" /></p>
<blockquote>
  <p>GA4 소스 테이블 미리보기 (공개 샘플 테이블)</p>
</blockquote>

<p>따라서 단순히 특정 페이지의 방문 수만 추출하려고 하더라도, 아래와 같이 복잡한 쿼리 작성이 필요합니다. 처음 접하는 사람에게는 분명 학습의 어려움이 느껴질 것입니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">event_date</span><span class="p">,</span>
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">ga_session_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">sessions_cnt</span><span class="p">,</span>
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
<span class="k">FROM</span>
    <span class="nv">`events_*`</span>
<span class="k">WHERE</span>
    <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="s1">'20240101'</span> <span class="k">AND</span> <span class="s1">'20241231'</span>
    <span class="k">AND</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'page_view'</span>
    <span class="k">AND</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">)</span> <span class="k">LIKE</span> <span class="s1">'%store.dcentwallet.com/pages/dcent-biometric-crypto-wallet%'</span>
<span class="k">GROUP</span> <span class="k">BY</span>
    <span class="mi">1</span>
<span class="k">ORDER</span> <span class="k">BY</span>
    <span class="mi">1</span>
<span class="p">;</span>
</code></pre></div></div>

<p>따라서 누구나 간결화된 테이블 스키마를 통해 쉽게 쿼리를 작성할 수 있는 환경이 요구되는 것입니다.</p>

<h3 id="22-느린-쿼리-실행-시간과-높은-쿼리-비용">2.2. 느린 쿼리 실행 시간과 높은 쿼리 비용</h3>

<p>소스 테이블을 향해 직접 쿼리를 실행하면 시간이 흐를수록 쿼리 실행 시간이 느릴 뿐만 아니라, 쿼리 비용 부담도 가파르게 증가하게 됩니다.</p>

<p>특히, 쿼리를 작성하지는 않지만 대시보드를 소비하는 동료의 입장에서, 대시보드 업데이트 과정이 오래 걸리면 데이터 활용도에 큰 영향을 미치게 됩니다. 조금 극단적이기는 하지만 아래와 같은 명언도 있죠.</p>

<blockquote>
  <p>“대시보드 업데이트 시간이 5초를 넘어가는 순간, 마케터와 디자이너는 바로 이탈해버리기 마련이다. 따라서 쿼리 최적화는 데이터 활용도에 매우 중요한 영향을 끼친다.”</p>
</blockquote>

<hr />

<h1 id="3-해결-방법-데이터-웨어하우스-구축">3. 해결 방법: 데이터 웨어하우스 구축</h1>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/4.webp" alt="" /></p>
<blockquote>
  <p><a href="https://ardas-it.com/benefits-of-enterprise-data-warehouse">Benefits of Enterprise Data Warehouse</a></p>
</blockquote>

<p>데이터 웨어하우스를 구축하면 위에서 언급해드린 문제를 드라마틱하게 극복할 수 있습니다.</p>

<h3 id="31-각-데이터-마트-테이블의-간결한-스키마">3.1. 각 데이터 마트 테이블의 간결한 스키마</h3>

<p>동료들이 쉽게 쿼리를 실행할 수 있도록, 각 데이터 마트와 테이블 구조를 간결화할 수 있습니다. 이를 통해 데이터 분석가나 애널리틱스 엔지니어에 대한 의존도를 줄이고, 즉각적으로 업무에 활용할 수 있는 데이터 조회 환경을 구축할 수 있게 됩니다.</p>

<h3 id="32-빠른-쿼리-실행-시간과-낮은-쿼리-비용">3.2. 빠른 쿼리 실행 시간과 낮은 쿼리 비용</h3>

<p>데이터 마트의 테이블들은 목적에 맞는 Columns와 반드시 필요한 Rows로만 구성되어 있기 때문에 소스 테이블에 비해 사이즈가 훨씬 경감되기 마련입니다. 이 덕분에 데이터 마트를 향해 쿼리를 실행함으로써 쿼리 실행 시간과 쿼리 비용이 급격하게 줄어들 수 있습니다.</p>

<hr />

<h1 id="4-데이터-웨어하우스-구축-방법">4. 데이터 웨어하우스 구축 방법</h1>

<h3 id="41-데이터-웨어하우스-data-lineage-미리보기">4.1. 데이터 웨어하우스 Data Lineage 미리보기</h3>

<p>디센트 앱 데이터 웨어하우스 Core Layer의 Data Lineage는 다음과 같이 구성되어 있습니다. 즉, 소스 테이블에 해당하는 <code class="language-plaintext highlighter-rouge">ga4.events</code> 및 <code class="language-plaintext highlighter-rouge">ga4.events_intraday</code>로부터 각 테이블들이 Star Schema 형태로 생성됩니다.</p>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/5.webp" alt="" /></p>
<blockquote>
  <p>디센트 앱 데이터 웨어하우스 Data Lineage의 일부</p>
</blockquote>

<h3 id="42core_fct_events-테이블-모델-만들기">4.2.<code class="language-plaintext highlighter-rouge">core_fct_events</code> 테이블 모델 만들기</h3>

<p>우선, 모든 이벤트들이 적재된 기본 Fact 테이블을 만들었습니다. 각 이벤트들이 지닌 이벤트 파라미터는 제각기 다르므로 이는 제외한 상태에서 최대한 많은 정보를 담아냈어요.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="k">DISTINCT</span>

    <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
    <span class="nb">DATETIME</span><span class="p">(</span><span class="n">TIMESTAMP_MICROS</span><span class="p">(</span><span class="n">event_timestamp</span><span class="p">),</span> <span class="s1">'Asia/Seoul'</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">datetime</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">user_pseudo_id</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">user_pseudo_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_id'</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>

    <span class="n">event_name</span><span class="p">,</span>
    
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">device</span><span class="p">.</span><span class="n">web_info</span><span class="p">.</span><span class="n">hostname</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">hostname</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location_full</span><span class="p">,</span>        
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span>  <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_title'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_title</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span>
        <span class="k">LOWER</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">user_properties</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'xxx'</span><span class="p">)),</span>
        <span class="k">LOWER</span><span class="p">(</span><span class="k">CAST</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">double_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">user_properties</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'xxx'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">STRING</span><span class="p">)),</span>
        <span class="k">LOWER</span><span class="p">(</span><span class="k">CAST</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">float_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">user_properties</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'xxx'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">STRING</span><span class="p">)),</span>
        <span class="k">LOWER</span><span class="p">(</span><span class="k">CAST</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">user_properties</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'xxx'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">STRING</span><span class="p">)),</span>
        <span class="s1">'UNK'</span>
    <span class="p">)</span> <span class="k">AS</span> <span class="n">xxx</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">platform</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">platform</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">device</span><span class="p">.</span><span class="n">operating_system</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">device_os</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">device</span><span class="p">.</span><span class="n">category</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">device_category</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">app_info</span><span class="p">.</span><span class="k">version</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">app_version</span><span class="p">,</span>

    <span class="k">CASE</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">continent</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">continent</span> <span class="o">=</span> <span class="s1">''</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">continent</span> <span class="o">=</span> <span class="s1">'(not set)'</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">ELSE</span> <span class="n">geo</span><span class="p">.</span><span class="n">continent</span>
    <span class="k">END</span> <span class="k">AS</span> <span class="n">continent</span><span class="p">,</span>
    <span class="k">CASE</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="s1">''</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="s1">'(not set)'</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">ELSE</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span>
    <span class="k">END</span> <span class="k">AS</span> <span class="n">country</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">traffic_source</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_utm_campaign</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">traffic_source</span><span class="p">.</span><span class="n">medium</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_utm_medium</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">traffic_source</span><span class="p">.</span><span class="k">source</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_utm_source</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'campaign_id'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_campaign_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'campaign'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_campaign</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'medium'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_medium</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'source'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_source</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'term'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_term</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'content'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_content</span><span class="p">,</span>
    <span class="p">...</span>
<span class="k">FROM</span>
    
<span class="k">WHERE</span>
    <span class="n">event_date</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_name</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="p">...</span>
</code></pre></div></div>

<p>(1) GA4 Export Table에는 모종의 이유로 완전히 동일한 이벤트가 연달아 2번 수집되는 경우가 많습니다. 특히, 앱의 개발 소스 코드의 구조에 따라 이런 경우가 빈번하게 발생하는데요. 이는 Aggregation 과정시 데이터 왜곡이 발생하기 쉬으므로 연산 비용이 발생하더라도 DISTINCT 를 통해 중복을 반드시 제거하도록 했습니다.</p>

<p>(2) 각 이벤트 파라미터나 사용자 속성의 경우 UNNEST를 통해 Select Subquery를 사용함으로써 모델 쿼리문을 간결화하도록 노력했습니다.</p>

<p>(3) Null Handling을 위해 다음과 같은 규칙을 정했습니다. 이는 Aggregation 과정에서 Null의 존재로 인한 데이터 왜곡 현상을 원천적으로 차단하기 위한 조치였어요.</p>

<ul>
  <li>String: “UNK” (unknown)</li>
  <li>Number: -1</li>
  <li>Date: “1900–01–01”</li>
</ul>

<p>(4) <code class="language-plaintext highlighter-rouge">event_date</code>, <code class="language-plaintext highlighter-rouge">event_timestamp</code>, <code class="language-plaintext highlighter-rouge">event_name</code> 값이 존재하지 않는 Rows의 경우 애초에 모델에 적재하지 않도록 했습니다. 세 가지 값 중 하나라도 알 수 없다면 데이터로서 아무런 가치를 창출할 수 없다고 판단했기 때문이에요.</p>

<p>(5) <code class="language-plaintext highlighter-rouge">page_location</code>의 경우, 페이지 URL 내의 쿼리 요소가 제각기 다를 경우 이를 전처리하는 과정이 쿼리 작성자에게 시간 소모가 많습니다. 따라서 <code class="language-plaintext highlighter-rouge">clean_url</code>이라는 dbt 매크로 함수를 직접 정의하여 깨끗하고 규칙적으로 출력될 수 있도록 적용했어요.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">clean_url</code> 매크로 사례</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="o">%</span> <span class="n">macro</span> <span class="n">clean_url</span><span class="p">(</span><span class="k">column_name</span><span class="p">)</span> <span class="o">%</span><span class="p">}</span>

    <span class="k">REPLACE</span><span class="p">(</span>
        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
            <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
                <span class="k">LOWER</span><span class="p">({{</span> <span class="k">column_name</span> <span class="p">}}),</span>
                <span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span>
                <span class="s1">''</span>
            <span class="p">),</span>
            <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span>
            <span class="s1">''</span>
        <span class="p">),</span>
        <span class="s1">'https://'</span><span class="p">,</span>
        <span class="s1">''</span>
    <span class="p">)</span>

<span class="p">{</span><span class="o">%</span> <span class="n">endmacro</span> <span class="o">%</span><span class="p">}</span>
</code></pre></div></div>

<h3 id="43-각-event-specific-테이블-모델-만들기">4.3. 각 event-specific 테이블 모델 만들기</h3>

<p>전술해드렸듯이, 각 이벤트마다 완전히 다른 이벤트 파라미터 구조를 지니고 있습니다. 이벤트 파라미터 정보는 각 이벤트 별로 독립적으로 적용되도록 구축하는 것이 필요했는데요. 가령, 조직의 이벤트 택소노미가 변경되어 신규 파라미터를 수집하게 되었다면, 이를 데이터 웨어하우스 전체에 적용하게 되면 쿼리 비용이 급격하게 증가할 수밖에 없을 것입니다. 따라서 이를 event-specific하게 관리함으로써, 반드시 필요한 이벤트 전용 테이블에만 영향을 끼치도록 했습니다. 소스 테이블의 변동으로 인한 영향을 최소화하기 위한 설계인 것이죠.</p>

<p>가령, 아래 모델 쿼리문은 <code class="language-plaintext highlighter-rouge">click_tab</code>이라는 이벤트와 <code class="language-plaintext highlighter-rouge">to_tab_name</code> 파라미터 정보만을 담은 <code class="language-plaintext highlighter-rouge">core_fct_evt_click_tab</code>입니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="k">DISTINCT</span>

    <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
    <span class="nb">DATETIME</span><span class="p">(</span><span class="n">TIMESTAMP_MICROS</span><span class="p">(</span><span class="n">event_timestamp</span><span class="p">),</span> <span class="s1">'Asia/Seoul'</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">datetime</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">user_pseudo_id</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">user_pseudo_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_id'</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">device</span><span class="p">.</span><span class="n">web_info</span><span class="p">.</span><span class="n">hostname</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">hostname</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location_full</span><span class="p">,</span>        
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="p">{{</span> <span class="n">clean_url</span><span class="p">(</span><span class="s1">'value.string_value'</span><span class="p">)</span> <span class="p">}}</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_title'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_title</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="p">{{</span> <span class="n">clean_url</span><span class="p">(</span><span class="s1">'value.string_value'</span><span class="p">)</span> <span class="p">}}</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'to_tab_name'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">to_tab_name</span><span class="p">,</span>
    <span class="p">...</span>
<span class="k">FROM</span>
    <span class="p">{{</span> <span class="k">source</span><span class="p">(</span><span class="s1">'ga4'</span><span class="p">,</span> <span class="s1">'events'</span><span class="p">)</span> <span class="p">}}</span>
<span class="k">WHERE</span>
    <span class="n">event_date</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'click_tab'</span>
    <span class="p">...</span>
</code></pre></div></div>

<p>(1) Geo, Demographic, Tech 등의 상세한 칼럼들은 굳이 수집하지 않았습니다. 이는 <code class="language-plaintext highlighter-rouge">core_fct_events</code> 테이블과 <code class="language-plaintext highlighter-rouge">core_dim_users</code> 테이블을 통해 JOIN하도록 관리하는 것이 Star Schema 관점에서 더욱 바람직한 구조이기 때문입니다.</p>

<p>(2) 각 event-specific한 모델 쿼리문 수십 개를 이런 방식으로 생성해두었습니다.</p>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/6.webp" alt="" /></p>
<blockquote>
  <p>디센트 앱 데이터 웨어하우스 Data Lineage의 일부</p>
</blockquote>

<p>한편, <code class="language-plaintext highlighter-rouge">core_fct_events</code> 모델과 각 event-specific 모델들의 Configuration은 다음과 같이 구성했습니다.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s">xxx</span>

<span class="na">models</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">core_fct_events</span>
    <span class="na">description</span><span class="pi">:</span> <span class="s">전체 이벤트 테이블</span>
    <span class="na">meta</span><span class="pi">:</span>
      <span class="na">owner</span><span class="pi">:</span> <span class="s">js.kim@iotrust.kr</span>
    <span class="na">config</span><span class="pi">:</span>
      <span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">core"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">fact"</span><span class="pi">]</span>
      <span class="na">materialized</span><span class="pi">:</span> <span class="s">incremental</span>
      <span class="na">incremental_strategy</span><span class="pi">:</span> <span class="s">insert_overwrite</span>
      <span class="na">on_schema_change</span><span class="pi">:</span> <span class="s">append_new_columns</span>
      <span class="na">partition_by</span><span class="pi">:</span>
        <span class="na">field</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">data_type</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">granularity</span><span class="pi">:</span> <span class="s">day</span>
      <span class="na">time_ingestion_partitioning</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">require_partition_filter</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">copy_partitions</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">columns</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">이벤트 발생 일자 (NOT NULL)</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">datetime</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">이벤트 발생 일시 (NOT NULL)</span>
      <span class="s">...</span>

</code></pre></div></div>

<p>(1) <code class="language-plaintext highlighter-rouge">date</code> 칼럼을 파티션 기준으로 정했습니다.</p>

<p>(2) 테이블을 향해 쿼리를 실행할 때 <code class="language-plaintext highlighter-rouge">date</code> 파티션 필터를 적용하도록 강제했습니다. (<strong>require_partition_filter</strong>) 이는 향후 전체 테이블을 읽어오는 등 쿼리 실행 비용을 줄이기 위한 의도적인 장치였어요.</p>

<p>(3) Materialization Strategy는 Incremental (Insert Overwrite) 방식을 적용했습니다.</p>

<ul>
  <li>디센트 앱 데이터 웨어하우스는 현재 매 1시간 마다 업데이트 되도록 구축했는데요. 매번 Incremental Update가 발생할 때 각 <code class="language-plaintext highlighter-rouge">date</code>별 소스 테이블의 업데이트 유무를 확인하여 업데이트가 된 <code class="language-plaintext highlighter-rouge">date</code> 테이블 데이터를 배치에 적용합니다.</li>
  <li>BigQuery의 <code class="language-plaintext highlighter-rouge">date</code> 파티션 환경에서 Insert Overwrite 방식을 사용하면, 해당 <code class="language-plaintext highlighter-rouge">date</code> 테이블의 데이터를 모두 삭제한 후 다시 전체 데이터를 삽입하는 방식으로 업데이트가 이뤄집니다. 이 덕분에, dbt의 각 모델 쿼리문에 Incremental 전략에 대한 까다로운 조건을 작성하지 않더라도 안정적인 업데이트 전략이 이뤄집니다. (BigQuery와 dbt의 궁합이 잘 맞는 이유 중 하나)</li>
</ul>

<h3 id="44-core_dim_users-테이블-모델-만들기">4.4. <code class="language-plaintext highlighter-rouge">core_dim_users</code> 테이블 모델 만들기</h3>

<p><code class="language-plaintext highlighter-rouge">core_dim_users</code>는 사용자 Dimension Table로서, Star Schema에서 각 Fact Tables가 공유하는 <code class="language-plaintext highlighter-rouge">user_pseudo_id</code>의 사용자 속성을 담고 있는 테이블입니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">user_pseudo_id</span><span class="p">,</span>
        <span class="n">event_timestamp</span><span class="p">,</span>
        <span class="n">user_first_touch_timestamp</span><span class="p">,</span>
        <span class="p">...</span>
        <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>
        <span class="p">...</span>
    <span class="k">FROM</span>
        <span class="p">{{</span> <span class="k">source</span><span class="p">(</span><span class="s1">'ga4'</span><span class="p">,</span> <span class="s1">'events'</span><span class="p">)</span> <span class="p">}}</span>
    <span class="k">WHERE</span>
        <span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
        <span class="p">...</span>
<span class="p">),</span>

<span class="n">CTE_latest</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">user_pseudo_id</span><span class="p">,</span>
        <span class="n">event_timestamp</span><span class="p">,</span>
        <span class="n">COALESCE</span><span class="p">(</span><span class="nb">DATE</span><span class="p">(</span><span class="n">TIMESTAMP_MICROS</span><span class="p">(</span><span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">user_first_touch_timestamp</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span><span class="p">),</span> <span class="s1">'Asia/Seoul'</span><span class="p">),</span> <span class="nb">DATE</span><span class="p">(</span><span class="s1">'1900-01-01 00:00:00'</span><span class="p">,</span> <span class="s1">'Asia/Seoul'</span><span class="p">))</span> <span class="k">AS</span> <span class="n">user_first_touch_date</span><span class="p">,</span>
        <span class="n">COALESCE</span><span class="p">(</span><span class="nb">DATETIME</span><span class="p">(</span><span class="n">TIMESTAMP_MICROS</span><span class="p">(</span><span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">user_first_touch_timestamp</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span><span class="p">),</span> <span class="s1">'Asia/Seoul'</span><span class="p">),</span> <span class="nb">DATETIME</span><span class="p">(</span><span class="s1">'1900-01-01 00:00:00'</span><span class="p">,</span> <span class="s1">'Asia/Seoul'</span><span class="p">))</span> <span class="k">AS</span> <span class="n">user_first_touch_datetime</span><span class="p">,</span>
        
        <span class="k">CASE</span>
            <span class="k">WHEN</span> <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">country</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
            <span class="k">WHEN</span> <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">country</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span> <span class="o">=</span> <span class="s1">''</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
            <span class="k">WHEN</span> <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">country</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span> <span class="o">=</span> <span class="s1">'(not set)'</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
            <span class="k">ELSE</span> <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">country</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span>
        <span class="k">END</span> <span class="k">AS</span> <span class="n">country</span><span class="p">,</span>

        <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span> <span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span> <span class="k">DESC</span><span class="p">)</span> <span class="k">AS</span> <span class="n">row_num</span>
    <span class="k">FROM</span>
        <span class="n">CTE_raw</span>
    <span class="k">WINDOW</span> <span class="n">w</span> 
        <span class="k">AS</span> <span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span> <span class="k">ROWS</span> <span class="k">BETWEEN</span> <span class="n">UNBOUNDED</span> <span class="k">PRECEDING</span> <span class="k">AND</span> <span class="n">UNBOUNDED</span> <span class="k">FOLLOWING</span><span class="p">)</span>    
<span class="p">)</span>

<span class="k">SELECT</span>
    <span class="o">*</span> <span class="k">EXCEPT</span> <span class="p">(</span><span class="n">event_timestamp</span><span class="p">,</span> <span class="n">row_num</span><span class="p">)</span>
<span class="k">FROM</span>
    <span class="n">CTE_latest</span>
<span class="k">WHERE</span>
    <span class="n">row_num</span> <span class="o">=</span> <span class="mi">1</span>
</code></pre></div></div>

<p>(1) 쿼리의 흐름은 크게 다음과 같아요.</p>

<ul>
  <li>먼저 소스 테이블에서 전체 사용자 정보를 읽어온 후, 가장 최근 정보들만 기존 테이블에 Insert Overwrite합니다.</li>
</ul>

<p>(2) SCD(Slowly Changing Dimension) Type 1 방식을 사용하기로 했습니다. 즉, 사용자의 특정 정보에 변동이 생길 때 이를 업데이트 하지만, 예전 정보를 히스토리로 남기지는 않는 방식이에요. 물론, SCD Type 3와 같이 사용자 정보 히스토리 보관 방식도 고민해봤지만, 다음 두 가지 측면에서 적용하지 않기로 했어요.</p>

<ul>
  <li>사용자 Dimension의 히스토리까지 확인해야 할 정도로 조직의 데이터 리터러시가 충분히 갖춰지지 않았다고 느꼈어요.</li>
  <li>게다가 SCD Type 3 방식은 쿼리 비용이 상당히 많이 발생하는 편이므로, 조직의 필요성이 자연스럽게 대두되는 시점에 도입해보기로 판단했어요.</li>
</ul>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/7.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.bps-corp.com/post/so-what-are-slowly-changing-dimensions-scd">What are Slowly Changing Dimensions (SCD)?</a></p>
</blockquote>

<p>한편, <code class="language-plaintext highlighter-rouge">core_dim_users</code> 모델의 Configuration은 다음과 같이 구성했습니다.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="m">1</span>

<span class="na">models</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">core_dim_users</span>
    <span class="na">description</span><span class="pi">:</span> <span class="s">사용자 Dimension 테이블</span>
    <span class="na">meta</span><span class="pi">:</span>
      <span class="na">owner</span><span class="pi">:</span> <span class="s">js.kim@iotrust.kr</span>
    <span class="na">config</span><span class="pi">:</span>
      <span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">core"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">dim"</span><span class="pi">]</span>
      <span class="na">materialized</span><span class="pi">:</span> <span class="s">incremental</span>
      <span class="na">incremental_strategy</span><span class="pi">:</span> <span class="s">merge</span>
      <span class="na">unique_key</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">user_pseudo_id"</span><span class="pi">]</span>
      <span class="na">cluster_by</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">user_pseudo_id"</span><span class="pi">]</span>
      <span class="na">on_schema_change</span><span class="pi">:</span> <span class="s">append_new_columns</span>
    <span class="na">columns</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">user_pseudo_id</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">사용자 식별자 (PK)</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">user_first_touch_date</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">사용자가 처음 앱을 열었거나 사이트를 방문한 일자 (NULL=1900-01-01)</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">user_first_touch_datetime</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">사용자가 처음 앱을 열었거나 사이트를 방문한 일시 (NULL=1900-01-01 00:00:00)</span>
      <span class="s">...</span>
</code></pre></div></div>

<p>(1) <code class="language-plaintext highlighter-rouge">user_pseudo_id</code> 별로 Clustering함으로써(<strong>cluster_by</strong>), 향후 JOIN 과정에서 빠르게 Dimension을 읽어올 수 있도록 했습니다.</p>

<p>(2) Materialization Strategy는 Incremental (Merge) 방식을 적용했습니다.</p>

<ul>
  <li>Incremental 방식을 사용하되, <code class="language-plaintext highlighter-rouge">user_pseudo_id</code>를 Unique Key로 하여 사용자 정보 칼럼들에 변동이 생길 경우 이를 Merge하도록 했어요. 즉, 가장 최근 사용자 정보로만 이루어진 SCD Type 1 방식의 테이블이 완성돼요.</li>
</ul>

<h3 id="45-incremental-strategy-전략을-위한-where-statement와-variables-관리">4.5. Incremental Strategy 전략을 위한 Where Statement와 Variables 관리</h3>

<p><code class="language-plaintext highlighter-rouge">dbt run</code>을 실행하는 과정에서 한 가지 난점이 있었습니다. Google Analytics 4 Export Tables는 기본적으로 스트리밍으로 Near real-time으로 적재되지만, 일부 칼럼들의 경우 실시간으로 수집되지 않거나, 혹은 값 변동이 발생하거든요. 각 date 파티션 테이블이 최종적으로 완성될 때까지는 안정적으로 3일 정도 소요되는 것을 확인했습니다.</p>

<p>이로 인해, dbt를 통해 데이터 웨어하우스 업데이트 주기인 1시간을 유지하여 데이터 최신성을 유지하기란 쉽지 않았죠. 애초에 소스 테이블에서 불규칙적인 변동이 발생하니까요. 이런 상황에서 최선의 방법은 “변동이 발생한” date 파티션 테이블들을 추려낸 후, 이를 바탕으로 dbt가 처리해야 할 테이블 리스트를 Variables로 먹여주는 방법이었습니다. 즉, 다음과 같습니다.</p>

<p>(1) 각 모델의 Where Statement</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">...</span>
<span class="k">FROM</span>
    <span class="p">{{</span> <span class="k">source</span><span class="p">(</span><span class="s1">'ga4'</span><span class="p">,</span> <span class="s1">'events_intraday'</span><span class="p">)</span> <span class="p">}}</span>
<span class="k">WHERE</span>
    <span class="n">event_date</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_name</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="c1">-- (1) 변수 반영 (Start Date &amp; End Date): 해당 일자 파티션 테이블만 읽어옴</span>
    <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">var</span><span class="p">(</span><span class="s1">'start_date'</span><span class="p">,</span> <span class="k">None</span><span class="p">)</span> <span class="k">is</span> <span class="k">not</span> <span class="k">none</span> <span class="k">and</span> <span class="n">var</span><span class="p">(</span><span class="s1">'end_date'</span><span class="p">,</span> <span class="k">None</span><span class="p">)</span> <span class="k">is</span> <span class="k">not</span> <span class="k">none</span> <span class="o">%</span><span class="p">}</span>
    <span class="k">AND</span> <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="s1">''</span> <span class="k">AND</span> <span class="s1">''</span>
    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
    <span class="c1">-- (2) 변수 반영 (table_suffixes): 최근 Orchestration 실행 시점 이후 업데이트된 테이블만 읽어옴</span>
    <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">var</span><span class="p">(</span><span class="nv">"table_suffixes"</span><span class="p">,</span> <span class="k">None</span><span class="p">)</span> <span class="k">is</span> <span class="k">not</span> <span class="k">none</span> <span class="o">%</span><span class="p">}</span>
    <span class="k">AND</span> <span class="n">_table_suffix</span> <span class="k">IN</span> <span class="p">(</span><span class="s1">'{{ var("table_suffixes") }}'</span><span class="p">)</span>
    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</code></pre></div></div>

<p>(2) <code class="language-plaintext highlighter-rouge">dbt_project.yml</code> 파일의 Variables</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">...</span>
<span class="c1"># Variables</span>
<span class="na">vars</span><span class="pi">:</span>
  <span class="na">start_date</span><span class="pi">:</span> <span class="c1"># D'CENT App GA4 Export Table Start Date (Default: None)</span>
  <span class="na">end_date</span><span class="pi">:</span> <span class="c1"># D'CENT App GA4 Export Table End Date (Default: None)</span>
  <span class="na">table_suffixes</span><span class="pi">:</span> <span class="c1"># D'CENT App GA4 Export Table Suffixes (Default: None)</span>
<span class="nn">...</span>
</code></pre></div></div>

<hr />

<h1 id="5-결과">5. 결과</h1>

<h3 id="51-쿼리-속도-향상-및-비용-감소">5.1. 쿼리 속도 향상 및 비용 감소</h3>

<p>Redash 등을 통한 쿼리 실행 시간이 크게 감소했습니다. 기존에는 쿼리 실행이 15초 이상 소요되었지만, 데이터 웨어하우스 적용 후 고작 5초 내에 완료됩니다.</p>

<h3 id="52-조직의-데이터-접근성-향상6">5.2. 조직의 데이터 접근성 향상6</h3>

<p>dbt Docs를 호스팅하여 아래와 같이 각 테이블 명세서를 누구나 쉽게 확인할 수 있습니다. 즉, 사내 구성원들이 쉽고 일관적인 상황에서 쉽게 쿼리를 작성해볼 수 있습니다. 조직의 데이터 접근성이 향상된 것입니다.</p>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/8.webp" alt="" /></p>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">mart_snp_dau</code> 테이블 명세서 사례 (일별 사용자 수, 신규 사용자 수, 기존 사용자 수, 총 세션 수, 총 세션 시간)</p>
</blockquote>

<hr />

<h1 id="6-나가는-글">6. 나가는 글</h1>

<p>데이터 웨어하우스와 각 데이터 마트를 구축하는 일은 고되기도 하지만, 상당히 보람 있는 일이기도 합니다. 앞단에서 조금이라도 헝클어지면 조직에서 활용하는 데이터 수치에 심각한 오류가 생기므로 기본적으로 부담이 큰 과업이기도 합니다. 특히, 저는 아이오트러스트에서 데이터를 홀로 책임지고 있기 때문에, 스스로의 실수나 오류가 생기면 이를 피드백할 수 있는 분이 없어요. 그래서 셀프 작업 후 셀프 피드백 시간을 가지며, 복수 개의 자아를 두면서 일을 하기도 해요.🙄</p>

<p>하지만 데이터 웨어하우스를 통해 뒷단에서 동료들이 데이터를 쉽고 편하게 확인하는 모습을 보면 상당히 뿌듯하고, 그만큼 데이터에 대한 오너십이 커집니다. 그에 따라 조직의 데이터 기반 의사결정이 제대로 이루어져가는 모습에 더욱 애착이 많아지기도 하구요.</p>

<p>앞으로는 프로덕트 내부 데이터가 아니라, 프로덕트 외부 데이터를 활용하는 환경에 집중해보려고 합니다. 이를 통해 프로덕트의 내/외부 데이터를 함께 활용할 수 있는 환경이 이루어지길 바라봅니다.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (Korean)" /><category term="Article (Project)" /><category term="Level (2. Intermediate)" /><category term="Field (Analytics Engineering)" /><category term="Skills (SQL)" /><category term="Skills (dbt)" /><summary type="html"><![CDATA[“이 글은 Google Analytics 4(GA4) 데이터를 효율적으로 활용하기 위해 데이터 웨어하우스를 구축한 과정과 결과를 공유하는 후기입니다. 기존에는 GA4 Export Table에 직접 쿼리를 실행하는 방식이었지만, 스키마 복잡성, 느린 쿼리 실행 시간, 높은 비용 문제를 해결하기 위해 데이터 마트를 구성하고, dbt를 활용한 Incremental Strategy를 적용하여 성능을 최적화했습니다. 그 결과, 쿼리 속도가 획기적으로 향상되고 비용이 절감되었으며, 조직 내 데이터 접근성이 높아져 보다 효율적인 데이터 활용이 가능해졌습니다.”]]></summary></entry><entry><title type="html">GA4-based Data Warehouse Implementation Review</title><link href="http://localhost:4000/implementing-data-warehouse-ga4-en/" rel="alternate" type="text/html" title="GA4-based Data Warehouse Implementation Review" /><published>2024-11-03T00:00:00+09:00</published><updated>2024-11-03T00:00:00+09:00</updated><id>http://localhost:4000/implementing-data-warehouse-ga4-en</id><content type="html" xml:base="http://localhost:4000/implementing-data-warehouse-ga4-en/"><![CDATA[<blockquote>
  <p>“This article shares the process and outcomes of building a data warehouse to efficiently utilize Google Analytics 4 (GA4) data. Previously, queries were executed directly on the GA4 Export Table, but issues such as schema complexity, slow query execution times, and high costs necessitated a transition to a data mart. By implementing an Incremental Strategy using dbt, we optimized performance, resulting in significantly improved query speeds, reduced costs, and enhanced data accessibility within the organization, enabling more efficient data utilization.”</p>
</blockquote>

<hr />

<h1 id="table-of-contents">Table of Contents</h1>
<ol>
  <li>Introduction</li>
  <li>Diagnosing the Problem
    <ul>
      <li>2.1. Complex Schema of the Source Table</li>
      <li>2.2. Slow Query Execution Time and High Query Costs</li>
    </ul>
  </li>
  <li>Solution: Building a Data Warehouse
    <ul>
      <li>3.1. Simplified Schema for Each Data Mart Table</li>
      <li>3.2. Faster Query Execution and Reduced Costs</li>
    </ul>
  </li>
  <li>Implementation of the Data Warehouse
    <ul>
      <li>4.1. Data Lineage Preview of the Data Warehouse</li>
      <li>4.2. Creating the <code class="language-plaintext highlighter-rouge">core_fct_events</code> Table Model</li>
      <li>4.3. Creating Event-Specific Table Models</li>
      <li>4.4. Creating the <code class="language-plaintext highlighter-rouge">core_dim_users</code> Table Model</li>
      <li>4.5. Managing Where Statements and Variables for Incremental Strategy</li>
    </ul>
  </li>
  <li>Results
    <ul>
      <li>5.1. Improved Query Speed and Reduced Costs</li>
      <li>5.2. Enhanced Organizational Data Accessibility</li>
    </ul>
  </li>
  <li>Conclusion</li>
</ol>

<hr />

<h1 id="1-introduction">1. Introduction</h1>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/1.webp" alt="" /></p>
<blockquote>
  <p>Simplified IoTrust Data Pipeline</p>
</blockquote>

<p>Our company operates the B2C product D’Cent Wallet and the B2B2C product Wepen Wallet. Among them, the D’Cent Wallet primarily loads data into BigQuery via Google Analytics 4!</p>

<p>Many startups directly execute queries on the Google Analytics 4 Export Table stored in BigQuery. However, this “source table-dependent” query execution approach can lead to significant issues over time, including increased query costs and execution times.</p>

<p>To overcome this, I implemented a “rarely seen” GA4-based data warehouse structure. This article shares my experience with this approach.</p>

<hr />

<h1 id="2-diagnosing-the-problem">2. Diagnosing the Problem</h1>

<h3 id="21-complex-schema-of-the-source-table">2.1. Complex Schema of the Source Table</h3>

<p>The Google Analytics 4 Export Table streamed to BigQuery is designed with flexible structural expansion in mind. As a result, event parameters and purchase product information are stored in RECORD types. This design choice by Google leverages a columnar database structure to reduce storage costs.</p>

<p>For example, <code class="language-plaintext highlighter-rouge">event_params</code> is stored in a key-value format similar to JSON, making it challenging for those unfamiliar with this structure to write queries.</p>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/2.webp" alt="" /></p>
<blockquote>
  <p>GA4 Source Table Schema (Public Sample Table)</p>
</blockquote>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/3.webp" alt="" /></p>
<blockquote>
  <p>GA4 Source Table Preview (Public Sample Table)</p>
</blockquote>

<p>Even extracting a simple page visit count requires writing a complex query, as shown below. This poses a steep learning curve for new users.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">event_date</span><span class="p">,</span>
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">ga_session_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">sessions_cnt</span><span class="p">,</span>
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
<span class="k">FROM</span>
    <span class="nv">`events_*`</span>
<span class="k">WHERE</span>
    <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="s1">'20240101'</span> <span class="k">AND</span> <span class="s1">'20241231'</span>
    <span class="k">AND</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'page_view'</span>
    <span class="k">AND</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">)</span> <span class="k">LIKE</span> <span class="s1">'%store.dcentwallet.com/pages/dcent-biometric-crypto-wallet%'</span>
<span class="k">GROUP</span> <span class="k">BY</span>
    <span class="mi">1</span>
<span class="k">ORDER</span> <span class="k">BY</span>
    <span class="mi">1</span>
<span class="p">;</span>
</code></pre></div></div>

<p>A simplified table schema is needed to allow users to write queries more easily.</p>

<h3 id="22-slow-query-execution-time-and-high-query-costs">2.2. Slow Query Execution Time and High Query Costs</h3>

<p>Executing queries directly on the source table becomes increasingly inefficient over time, leading to slow execution times and rapidly rising query costs.</p>

<p>For non-technical colleagues who only consume dashboards, long update times significantly hinder data usability. A somewhat extreme quote captures this challenge well:</p>

<blockquote>
  <p>“If a dashboard update takes longer than 5 seconds, marketers and designers will immediately disengage. Optimizing queries is critical to maintaining data usability.”</p>
</blockquote>

<hr />

<h1 id="3-solution-building-a-data-warehouse">3. Solution: Building a Data Warehouse</h1>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/4.webp" alt="" /></p>
<blockquote>
  <p><a href="https://ardas-it.com/benefits-of-enterprise-data-warehouse">Benefits of Enterprise Data Warehouse</a></p>
</blockquote>

<p>Implementing a data warehouse dramatically resolves the aforementioned issues.</p>

<h3 id="31-simplified-schema-for-each-data-mart-table">3.1. Simplified Schema for Each Data Mart Table</h3>

<p>By simplifying the structure of each data mart and its tables, colleagues can execute queries with ease. This reduces dependence on data analysts and analytics engineers, creating a self-service environment for data queries.</p>

<h3 id="32-faster-query-execution-and-reduced-costs">3.2. Faster Query Execution and Reduced Costs</h3>

<p>Data mart tables are structured with only the necessary columns and rows, making them significantly smaller than source tables. Running queries on data marts results in drastically improved execution times and lower costs.</p>

<hr />

<h1 id="4-implementation-of-the-data-warehouse">4. Implementation of the Data Warehouse</h1>

<h3 id="41-data-lineage-preview-of-the-data-warehouse">4.1. Data Lineage Preview of the Data Warehouse</h3>

<p>The core layer of the D’Cent App data warehouse is structured as follows, forming a star schema from the source tables <code class="language-plaintext highlighter-rouge">ga4.events</code> and <code class="language-plaintext highlighter-rouge">ga4.events_intraday</code>.</p>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/5.webp" alt="" /></p>
<blockquote>
  <p>Partial View of D’Cent App Data Warehouse Data Lineage</p>
</blockquote>

<h3 id="42-creating-the-core_fct_events-table-model">4.2. Creating the <code class="language-plaintext highlighter-rouge">core_fct_events</code> Table Model</h3>

<p>The foundational fact table, containing all recorded events, was created while excluding unique event parameters. The goal was to include as much information as possible.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="k">DISTINCT</span>

    <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
    <span class="nb">DATETIME</span><span class="p">(</span><span class="n">TIMESTAMP_MICROS</span><span class="p">(</span><span class="n">event_timestamp</span><span class="p">),</span> <span class="s1">'Asia/Seoul'</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">datetime</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">user_pseudo_id</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">user_pseudo_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_id'</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>

    <span class="n">event_name</span><span class="p">,</span>
    
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">device</span><span class="p">.</span><span class="n">web_info</span><span class="p">.</span><span class="n">hostname</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">hostname</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location_full</span><span class="p">,</span>        
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span>  <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_title'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_title</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span>
        <span class="k">LOWER</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">user_properties</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'xxx'</span><span class="p">)),</span>
        <span class="k">LOWER</span><span class="p">(</span><span class="k">CAST</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">double_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">user_properties</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'xxx'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">STRING</span><span class="p">)),</span>
        <span class="k">LOWER</span><span class="p">(</span><span class="k">CAST</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">float_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">user_properties</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'xxx'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">STRING</span><span class="p">)),</span>
        <span class="k">LOWER</span><span class="p">(</span><span class="k">CAST</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">user_properties</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'xxx'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">STRING</span><span class="p">)),</span>
        <span class="s1">'UNK'</span>
    <span class="p">)</span> <span class="k">AS</span> <span class="n">xxx</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">platform</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">platform</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">device</span><span class="p">.</span><span class="n">operating_system</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">device_os</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">device</span><span class="p">.</span><span class="n">category</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">device_category</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">app_info</span><span class="p">.</span><span class="k">version</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">app_version</span><span class="p">,</span>

    <span class="k">CASE</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">continent</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">continent</span> <span class="o">=</span> <span class="s1">''</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">continent</span> <span class="o">=</span> <span class="s1">'(not set)'</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">ELSE</span> <span class="n">geo</span><span class="p">.</span><span class="n">continent</span>
    <span class="k">END</span> <span class="k">AS</span> <span class="n">continent</span><span class="p">,</span>
    <span class="k">CASE</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="s1">''</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">WHEN</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="s1">'(not set)'</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
        <span class="k">ELSE</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span>
    <span class="k">END</span> <span class="k">AS</span> <span class="n">country</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">traffic_source</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_utm_campaign</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">traffic_source</span><span class="p">.</span><span class="n">medium</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_utm_medium</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">traffic_source</span><span class="p">.</span><span class="k">source</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">first_utm_source</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'campaign_id'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_campaign_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'campaign'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_campaign</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'medium'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_medium</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'source'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_source</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'term'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_term</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'content'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">event_utm_content</span><span class="p">,</span>
    <span class="p">...</span>
<span class="k">FROM</span>
    
<span class="k">WHERE</span>
    <span class="n">event_date</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_name</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="p">...</span>
</code></pre></div></div>

<p>(1) In the GA4 Export Table, identical events are often collected twice in succession for unknown reasons. This issue occurs frequently, particularly depending on the structure of the app’s development source code. Since this can lead to data distortion during the aggregation process, we ensured that duplicates are always removed using DISTINCT, even at the cost of additional computation.</p>

<p>(2) To simplify model queries, we used Select Subqueries with UNNEST for event parameters and user properties.</p>

<p>(3) We established the following null-handling rules to prevent data distortion during the aggregation process:</p>

<ul>
  <li>String: “UNK” (unknown)</li>
  <li>Number: -1</li>
  <li>Date: “1900-01-01”</li>
</ul>

<p>(4) Rows without <code class="language-plaintext highlighter-rouge">event_date</code>, <code class="language-plaintext highlighter-rouge">event_timestamp</code>, or <code class="language-plaintext highlighter-rouge">event_name</code> values were excluded from the model. If any of these three values are unknown, they provide no meaningful value as data.</p>

<p>(5) Handling the <code class="language-plaintext highlighter-rouge">page_location</code> field is time-consuming for query writers due to varying query elements in page URLs. To address this, we defined a custom dbt macro function named <code class="language-plaintext highlighter-rouge">clean_url</code> to ensure a clean and standardized output.</p>

<ul>
  <li>Example of the <code class="language-plaintext highlighter-rouge">clean_url</code> macro:</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="o">%</span> <span class="n">macro</span> <span class="n">clean_url</span><span class="p">(</span><span class="k">column_name</span><span class="p">)</span> <span class="o">%</span><span class="p">}</span>

    <span class="k">REPLACE</span><span class="p">(</span>
        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
            <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
                <span class="k">LOWER</span><span class="p">({{</span> <span class="k">column_name</span> <span class="p">}}),</span>
                <span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span>
                <span class="s1">''</span>
            <span class="p">),</span>
            <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span>
            <span class="s1">''</span>
        <span class="p">),</span>
        <span class="s1">'https://'</span><span class="p">,</span>
        <span class="s1">''</span>
    <span class="p">)</span>

<span class="p">{</span><span class="o">%</span> <span class="n">endmacro</span> <span class="o">%</span><span class="p">}</span>
</code></pre></div></div>

<h3 id="43-creating-event-specific-table-models">4.3. Creating Event-Specific Table Models</h3>

<p>As previously mentioned, each event has a completely different parameter structure. We needed to build independent event parameter information for each event. If the organization’s event taxonomy changes and new parameters are collected, applying these changes to the entire data warehouse would significantly increase query costs. By managing event-specific models, we ensured that only the necessary event-specific tables are affected, minimizing the impact of changes in the source table.</p>

<p>For example, the following model query defines <code class="language-plaintext highlighter-rouge">core_fct_evt_click_tab</code>, which includes only the <code class="language-plaintext highlighter-rouge">click_tab</code> event and the <code class="language-plaintext highlighter-rouge">to_tab_name</code> parameter.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="k">DISTINCT</span>

    <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
    <span class="nb">DATETIME</span><span class="p">(</span><span class="n">TIMESTAMP_MICROS</span><span class="p">(</span><span class="n">event_timestamp</span><span class="p">),</span> <span class="s1">'Asia/Seoul'</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">datetime</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">user_pseudo_id</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">user_pseudo_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_id'</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_id</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">(</span><span class="n">device</span><span class="p">.</span><span class="n">web_info</span><span class="p">.</span><span class="n">hostname</span><span class="p">,</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">hostname</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location_full</span><span class="p">,</span>        
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="p">{{</span> <span class="n">clean_url</span><span class="p">(</span><span class="s1">'value.string_value'</span><span class="p">)</span> <span class="p">}}</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'page_title'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_title</span><span class="p">,</span>

    <span class="n">COALESCE</span><span class="p">((</span><span class="k">SELECT</span> <span class="p">{{</span> <span class="n">clean_url</span><span class="p">(</span><span class="s1">'value.string_value'</span><span class="p">)</span> <span class="p">}}</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'to_tab_name'</span><span class="p">),</span> <span class="s1">'UNK'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">to_tab_name</span><span class="p">,</span>
    <span class="p">...</span>
<span class="k">FROM</span>
    <span class="p">{{</span> <span class="k">source</span><span class="p">(</span><span class="s1">'ga4'</span><span class="p">,</span> <span class="s1">'events'</span><span class="p">)</span> <span class="p">}}</span>
<span class="k">WHERE</span>
    <span class="n">event_date</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'click_tab'</span>
    <span class="p">...</span>
</code></pre></div></div>

<p>(1) We did not collect detailed columns such as Geo, Demographic, and Tech data. From a Star Schema perspective, managing these through <code class="language-plaintext highlighter-rouge">core_fct_events</code> and <code class="language-plaintext highlighter-rouge">core_dim_users</code> tables via JOIN operations is a more optimal approach.</p>

<p>(2) We created dozens of event-specific model queries in this manner.</p>

<p><img src="site.baseurl/assets/2024-11-03-implementing-data-warehouse-ga4/6.webp" alt="Data Lineage" /></p>
<blockquote>
  <p>A section of the D’CENT App Data Warehouse Data Lineage</p>
</blockquote>

<p>Meanwhile, the configuration for <code class="language-plaintext highlighter-rouge">core_fct_events</code> and each event-specific model is structured as follows:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s">xxx</span>

<span class="na">models</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">core_fct_events</span>
    <span class="na">description</span><span class="pi">:</span> <span class="s">Main event table</span>
    <span class="na">meta</span><span class="pi">:</span>
      <span class="na">owner</span><span class="pi">:</span> <span class="s">Joshua Kim</span>
    <span class="na">config</span><span class="pi">:</span>
      <span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">core"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">fact"</span><span class="pi">]</span>
      <span class="na">materialized</span><span class="pi">:</span> <span class="s">incremental</span>
      <span class="na">incremental_strategy</span><span class="pi">:</span> <span class="s">insert_overwrite</span>
      <span class="na">on_schema_change</span><span class="pi">:</span> <span class="s">append_new_columns</span>
      <span class="na">partition_by</span><span class="pi">:</span>
        <span class="na">field</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">data_type</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">granularity</span><span class="pi">:</span> <span class="s">day</span>
      <span class="na">time_ingestion_partitioning</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">require_partition_filter</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">copy_partitions</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">columns</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">date</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">Event occurrence date (NOT NULL)</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">datetime</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">Event occurrence timestamp (NOT NULL)</span>
      <span class="s">...</span>

</code></pre></div></div>

<p>(1) The <code class="language-plaintext highlighter-rouge">date</code> column was set as the partitioning key.</p>

<p>(2) Queries were required to include a partition filter on <code class="language-plaintext highlighter-rouge">date</code> (<strong>require_partition_filter</strong>) to prevent full table scans and reduce query execution costs.</p>

<p>(3) The materialization strategy was set to Incremental (Insert Overwrite).</p>

<ul>
  <li>The D’CENT App data warehouse updates every hour. Each incremental update checks whether the source table for each <code class="language-plaintext highlighter-rouge">date</code> partition has been updated and applies only the updated partitions.</li>
  <li>In BigQuery’s <code class="language-plaintext highlighter-rouge">date</code> partition environment, using Insert Overwrite removes all data for a specific <code class="language-plaintext highlighter-rouge">date</code> partition before reinserting the updated data. This allows for a stable update strategy without complex incremental logic in dbt models.</li>
</ul>

<h3 id="44-creating-the-core_dim_users-table-model">4.4. Creating the <code class="language-plaintext highlighter-rouge">core_dim_users</code> Table Model</h3>

<p>The <code class="language-plaintext highlighter-rouge">core_dim_users</code> table serves as a user dimension table, containing user attributes associated with <code class="language-plaintext highlighter-rouge">user_pseudo_id</code>, which is shared among fact tables in the Star Schema.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">user_pseudo_id</span><span class="p">,</span>
        <span class="n">event_timestamp</span><span class="p">,</span>
        <span class="n">user_first_touch_timestamp</span><span class="p">,</span>
        <span class="p">...</span>
        <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>
        <span class="p">...</span>
    <span class="k">FROM</span>
        <span class="p">{{</span> <span class="k">source</span><span class="p">(</span><span class="s1">'ga4'</span><span class="p">,</span> <span class="s1">'events'</span><span class="p">)</span> <span class="p">}}</span>
    <span class="k">WHERE</span>
        <span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
        <span class="p">...</span>
<span class="p">),</span>

<span class="n">CTE_latest</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">user_pseudo_id</span><span class="p">,</span>
        <span class="n">event_timestamp</span><span class="p">,</span>
        <span class="n">COALESCE</span><span class="p">(</span><span class="nb">DATE</span><span class="p">(</span><span class="n">TIMESTAMP_MICROS</span><span class="p">(</span><span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">user_first_touch_timestamp</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span><span class="p">),</span> <span class="s1">'Asia/Seoul'</span><span class="p">),</span> <span class="nb">DATE</span><span class="p">(</span><span class="s1">'1900-01-01 00:00:00'</span><span class="p">,</span> <span class="s1">'Asia/Seoul'</span><span class="p">))</span> <span class="k">AS</span> <span class="n">user_first_touch_date</span><span class="p">,</span>
        <span class="n">COALESCE</span><span class="p">(</span><span class="nb">DATETIME</span><span class="p">(</span><span class="n">TIMESTAMP_MICROS</span><span class="p">(</span><span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">user_first_touch_timestamp</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span><span class="p">),</span> <span class="s1">'Asia/Seoul'</span><span class="p">),</span> <span class="nb">DATETIME</span><span class="p">(</span><span class="s1">'1900-01-01 00:00:00'</span><span class="p">,</span> <span class="s1">'Asia/Seoul'</span><span class="p">))</span> <span class="k">AS</span> <span class="n">user_first_touch_datetime</span><span class="p">,</span>
        
        <span class="k">CASE</span>
            <span class="k">WHEN</span> <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">country</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
            <span class="k">WHEN</span> <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">country</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span> <span class="o">=</span> <span class="s1">''</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
            <span class="k">WHEN</span> <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">country</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span> <span class="o">=</span> <span class="s1">'(not set)'</span> <span class="k">THEN</span> <span class="s1">'UNK'</span>
            <span class="k">ELSE</span> <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">country</span> <span class="k">IGNORE</span> <span class="n">NULLS</span><span class="p">)</span> <span class="n">OVER</span> <span class="n">w</span>
        <span class="k">END</span> <span class="k">AS</span> <span class="n">country</span><span class="p">,</span>

        <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span> <span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span> <span class="k">DESC</span><span class="p">)</span> <span class="k">AS</span> <span class="n">row_num</span>
    <span class="k">FROM</span>
        <span class="n">CTE_raw</span>
    <span class="k">WINDOW</span> <span class="n">w</span> 
        <span class="k">AS</span> <span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span> <span class="k">ROWS</span> <span class="k">BETWEEN</span> <span class="n">UNBOUNDED</span> <span class="k">PRECEDING</span> <span class="k">AND</span> <span class="n">UNBOUNDED</span> <span class="k">FOLLOWING</span><span class="p">)</span>    
<span class="p">)</span>

<span class="k">SELECT</span>
    <span class="o">*</span> <span class="k">EXCEPT</span> <span class="p">(</span><span class="n">event_timestamp</span><span class="p">,</span> <span class="n">row_num</span><span class="p">)</span>
<span class="k">FROM</span>
    <span class="n">CTE_latest</span>
<span class="k">WHERE</span>
    <span class="n">row_num</span> <span class="o">=</span> <span class="mi">1</span>
</code></pre></div></div>

<p>(1) The main query flow follows these steps:</p>

<ul>
  <li>First, the source table retrieves all user information.</li>
  <li>Then, the most recent information is inserted into the existing table using Insert Overwrite.</li>
</ul>

<p>(2) We implemented Slowly Changing Dimension (SCD) Type 1, updating user attributes without maintaining historical records. While we considered SCD Type 3 for tracking historical changes, we decided against it due to:</p>

<ul>
  <li>The organization’s insufficient data literacy to justify tracking user history.</li>
  <li>The high query costs associated with SCD Type 3.</li>
</ul>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/7.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.bps-corp.com/post/so-what-are-slowly-changing-dimensions-scd">What are Slowly Changing Dimensions (SCD)?</a></p>
</blockquote>

<p>Meanwhile, the configuration of the <code class="language-plaintext highlighter-rouge">core_dim_users</code> model is structured as follows:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="m">1</span>

<span class="na">models</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">core_dim_users</span>
    <span class="na">description</span><span class="pi">:</span> <span class="s">User Dimension 테이블</span>
    <span class="na">meta</span><span class="pi">:</span>
      <span class="na">owner</span><span class="pi">:</span> <span class="s">Joshua Kim</span>
    <span class="na">config</span><span class="pi">:</span>
      <span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">core"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">dim"</span><span class="pi">]</span>
      <span class="na">materialized</span><span class="pi">:</span> <span class="s">incremental</span>
      <span class="na">incremental_strategy</span><span class="pi">:</span> <span class="s">merge</span>
      <span class="na">unique_key</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">user_pseudo_id"</span><span class="pi">]</span>
      <span class="na">cluster_by</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">user_pseudo_id"</span><span class="pi">]</span>
      <span class="na">on_schema_change</span><span class="pi">:</span> <span class="s">append_new_columns</span>
    <span class="na">columns</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">user_pseudo_id</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">User Identifier (PK)</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">user_first_touch_date</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">The date when the user first opened the app or visited the website. (NULL=1900-01-01)</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">user_first_touch_datetime</span>
        <span class="na">description</span><span class="pi">:</span> <span class="s">The timestamp when the user first opened the app or visited the website. (NULL=1900-01-01 00:00:00)</span>
      <span class="s">...</span>
</code></pre></div></div>

<p>(1) By clustering based on <code class="language-plaintext highlighter-rouge">user_pseudo_id</code> (<strong>cluster_by</strong>), we enable faster retrieval of dimension data during JOIN operations in the future.</p>

<p>(2) The materialization strategy is set to Incremental (Merge).</p>

<ul>
  <li>The Incremental approach is applied, with <code class="language-plaintext highlighter-rouge">user_pseudo_id</code> as the unique key, ensuring that any changes in user information columns are merged accordingly. This results in a table structured as an SCD Type 1 model, where only the most recent user information is retained.</li>
</ul>

<h3 id="45-managing-where-statements-and-variables-for-the-incremental-strategy">4.5. Managing Where Statements and Variables for the Incremental Strategy</h3>

<p>One challenge encountered during the <code class="language-plaintext highlighter-rouge">dbt run</code> execution process was that Google Analytics 4 Export Tables are ingested in near real-time through streaming. However, certain columns are not collected in real-time, or their values may fluctuate. We observed that it takes approximately three days for each date-partitioned table to be fully completed.</p>

<p>Due to this, maintaining a one-hour update cycle for the data warehouse via dbt to ensure data freshness was challenging. Since the source table experiences irregular updates, the best approach was to identify date-partitioned tables where changes occurred and use them as variables for dbt processing. This approach can be summarized as follows:</p>

<p>(1) Where Statement for Each Model</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">...</span>
<span class="k">FROM</span>
    <span class="p">{{</span> <span class="k">source</span><span class="p">(</span><span class="s1">'ga4'</span><span class="p">,</span> <span class="s1">'events_intraday'</span><span class="p">)</span> <span class="p">}}</span>
<span class="k">WHERE</span>
    <span class="n">event_date</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="k">AND</span> <span class="n">event_name</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
    <span class="c1">-- (1) Applying Variables (Start Date &amp; End Date): Reads only the relevant date-partitioned tables</span>
    <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">var</span><span class="p">(</span><span class="s1">'start_date'</span><span class="p">,</span> <span class="k">None</span><span class="p">)</span> <span class="k">is</span> <span class="k">not</span> <span class="k">none</span> <span class="k">and</span> <span class="n">var</span><span class="p">(</span><span class="s1">'end_date'</span><span class="p">,</span> <span class="k">None</span><span class="p">)</span> <span class="k">is</span> <span class="k">not</span> <span class="k">none</span> <span class="o">%</span><span class="p">}</span>
    <span class="k">AND</span> <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="s1">''</span> <span class="k">AND</span> <span class="s1">''</span>
    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
    <span class="c1">-- (2) Applying Variables (table_suffixes): Reads only tables updated since the last orchestration run</span>
    <span class="p">{</span><span class="o">%</span> <span class="n">if</span> <span class="n">var</span><span class="p">(</span><span class="nv">"table_suffixes"</span><span class="p">,</span> <span class="k">None</span><span class="p">)</span> <span class="k">is</span> <span class="k">not</span> <span class="k">none</span> <span class="o">%</span><span class="p">}</span>
    <span class="k">AND</span> <span class="n">_table_suffix</span> <span class="k">IN</span> <span class="p">(</span><span class="s1">'{{ var("table_suffixes") }}'</span><span class="p">)</span>
    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</code></pre></div></div>

<p>(2) Variables in the <code class="language-plaintext highlighter-rouge">dbt_project.yml</code> File</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">...</span>
<span class="c1"># Variables</span>
<span class="na">vars</span><span class="pi">:</span>
  <span class="na">start_date</span><span class="pi">:</span> <span class="c1"># D'CENT App GA4 Export Table Start Date (Default: None)</span>
  <span class="na">end_date</span><span class="pi">:</span> <span class="c1"># D'CENT App GA4 Export Table End Date (Default: None)</span>
  <span class="na">table_suffixes</span><span class="pi">:</span> <span class="c1"># D'CENT App GA4 Export Table Suffixes (Default: None)</span>
<span class="nn">...</span>
</code></pre></div></div>

<hr />

<h1 id="5-results">5. Results</h1>

<h3 id="51-improved-query-performance-and-cost-reduction">5.1. Improved Query Performance and Cost Reduction</h3>

<p>Query execution times in Redash and other BI tools have significantly decreased. Previously, queries took over 15 seconds to execute, but after integrating the data warehouse, execution now completes within just 5 seconds.</p>

<h3 id="52-enhanced-data-accessibility-for-the-organization">5.2. Enhanced Data Accessibility for the Organization</h3>

<p>By hosting dbt Docs, anyone can easily access table specifications, as shown below. This enables internal team members to write queries in a more structured and consistent manner, improving overall data accessibility within the organization.</p>

<p><img src="/assets/2024-11-03-implementing-data-warehouse-ga4/8.webp" alt="" /></p>
<blockquote>
  <p>Example of <code class="language-plaintext highlighter-rouge">mart_snp_dau</code> table documentation (Daily Active Users, New Users, Returning Users, Total Sessions, Total Session Duration)</p>
</blockquote>

<hr />

<h1 id="6-conclusion">6. Conclusion</h1>

<p>Building a data warehouse and its associated data marts is a challenging yet highly rewarding task. Even minor issues at the early stages can lead to significant errors in the data used across the organization, making this a highly responsible role. Since I am solely responsible for data management at IoTrust, there is no one to provide feedback on my mistakes. As a result, I adopt a self-review process, essentially working with multiple versions of myself.🙄</p>

<p>However, seeing my colleagues access and utilize data easily through the data warehouse is incredibly fulfilling. It strengthens my sense of ownership over data, and I become even more invested in ensuring that the organization’s data-driven decision-making is executed properly.</p>

<p>Moving forward, I plan to focus not just on internal product data but also on leveraging external product data. My goal is to create an environment where both internal and external data can be utilized together to drive better insights.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (English)" /><category term="Article (Project)" /><category term="Level (2. Intermediate)" /><category term="Field (Analytics Engineering)" /><category term="Skills (SQL)" /><category term="Skills (dbt)" /><summary type="html"><![CDATA[“This article shares the process and outcomes of building a data warehouse to efficiently utilize Google Analytics 4 (GA4) data. Previously, queries were executed directly on the GA4 Export Table, but issues such as schema complexity, slow query execution times, and high costs necessitated a transition to a data mart. By implementing an Incremental Strategy using dbt, we optimized performance, resulting in significantly improved query speeds, reduced costs, and enhanced data accessibility within the organization, enabling more efficient data utilization.”]]></summary></entry><entry><title type="html">dbt Docs 사내 공유 방법 (사이트 호스팅 후기)</title><link href="http://localhost:4000/dbt-docs-site-hosting-ko/" rel="alternate" type="text/html" title="dbt Docs 사내 공유 방법 (사이트 호스팅 후기)" /><published>2024-09-21T00:00:00+09:00</published><updated>2024-09-21T00:00:00+09:00</updated><id>http://localhost:4000/dbt-docs-site-hosting-ko</id><content type="html" xml:base="http://localhost:4000/dbt-docs-site-hosting-ko/"><![CDATA[<blockquote>
  <p>“사내에서 dbt Docs를 활용하여 데이터 웨어하우스 문서화를 자동화하고 이를 통해 사내 데이터 접근성과 효율성을 높이기 위한 작업을 수행했습니다. 특히, dbt의 자동 문서화 기능을 활용해 테이블 간 의존성 및 명세서를 최신화함으로써 데이터 활용의 정확성과 속도를 개선했습니다. 이를 위해 VM 인스턴스에서 dbt Docs를 호스팅하고 사내 IP 범위 내 구성원들이 접근할 수 있도록 방화벽 설정을 추가하는 등의 기술적 문제를 해결하며 성공적으로 시스템을 구축했습니다.”</p>
</blockquote>

<hr />

<h1 id="목차">목차</h1>
<ol>
  <li>dbt Docs란 무엇인가?</li>
  <li>배경</li>
  <li>목표</li>
  <li>진행 과정</li>
  <li>결론</li>
</ol>

<hr />

<h1 id="1-dbt-docs란-무엇인가">1. dbt Docs란 무엇인가?</h1>

<p><a href="https://www.getdbt.com/">dbt</a>는 ELT 파이프라인의 Transformation 단계에 특화된 자동화 프레임워크로, Data Analyst와 Analytics Engineer 분들을 중심으로 널리 사용됩니다.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/1.webp" alt="" />
<img src="/assets/2024-09-21-dbt-docs-site-hosting/2.webp" alt="" /></p>

<p>dbt는 테이블 간의 의존 관계를 바탕으로 Data Lineage를 분석하고, 그 결과를 DAG (Directed Acyclic Graph) 형태로 컴파일하여 전체 Transformation 과정을 자동으로 실행해줍니다. 이를 통해 데이터 웨어하우스의 Orchestration 관리를 보다 효율적으로 진행할 수 있는데요. dbt의 가장 큰 장점 중 하나는 “자동 문서화” 기능입니다.</p>

<p>(1) <strong>Lineage Graph</strong>: 테이블 간의 의존성을 시각적으로 보여주어, 유지보수 작업시 영향을 받는 테이블들을 한 눈에 파악할 수 있도록 도와줍니다.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/3.webp" alt="" /></p>

<p>(2) <strong>명세서 확인</strong>: 각 테이블과 컬럼의 Description 등 세부적인 명세서를 쉽게 확인할 수 있습니다.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/4.gif" alt="" />
<img src="/assets/2024-09-21-dbt-docs-site-hosting/5.gif" alt="" /></p>

<p>dbt Docs는 데이터팀의 주요 Pain Point를 해결하는 데 큰 도움이 됩니다. 많은 기업이 데이터 활용도를 높이기 위해 데이터 웨어하우스를 도입하지만, 수많은 데이터 마트와 테이블 구조로 인해 혼란스러워 사내 구성원들의 접근성이 떨어지는 아이러니한 상황에 쉽게 직면하곤 합니다. 특히 프로덕트의 급성장에 따라 조직의 데이터 의존도가 높아지면, 데이터 웨어하우스의 빌딩 속도에 집중하느라 품질, 정합성, 접근성, 명세서 작성 관리를 유지하기가 어려워지기도 쉽습니다.</p>

<p>dbt는 데이터 웨어하우스 전체의 명세를 자동으로 문서화해 이러한 문제를 해결하며, 데이터의 품질과 활용성을 높이는 중요한 역할을 하는 것입니다.</p>

<hr />

<h1 id="2-배경">2. 배경</h1>

<p>저는 사내에서 쿼리 작성 역량을 갖춘 구성원 분들이 테이블과 Lineage 문서를 확인하여 Redash 대시보드를 직접 만들 수 있는 환경을 제공하고자 했습니다. 즉, 데이터 웨어하우스 문서화가 필요했던 것이죠. 구글 시트나 노션 페이지 등을 활용하는 것도 고려해봤지만, 애널리틱스 엔지니어링 작업과 문서화 작업이 분리되면 다음과 같은 문제가 발생할 수 있다는 노파심이 들었습니다.</p>

<ul>
  <li>데이터 마트 생성과 문서화 사이의 Latency로 인해 커뮤니케이션 속도가 저하될 수 있다.</li>
  <li>개별적인 문서화 작업 중 휴먼 에러가 발생하여 부정확한 쿼리 결과를 낳을 수 있다.</li>
</ul>

<p>따라서 저는 문서화 환경이 애널리틱스 엔지니어링 본연의 작업과 분리되어 이중으로 진행되는 것은 결코 바람직하지 않다고 판단했으며, 반복적인 작업 루틴을 줄임으로써 더 중요한 가치를 창출하는 데 시간을 쓰고 싶었습니다.</p>

<hr />

<h1 id="3-목표">3. 목표</h1>

<p>dbt Docs 기능을 통해 사내 구성원 분들이 dbt 프로젝트 버전 업데이트 즉시 최신 명세를 확인할 수 있는 Docs 사이트를 호스팅하는 것이 이번 작업의 목표였습니다.</p>

<hr />

<h1 id="4-진행-과정">4. 진행 과정</h1>

<h3 id="41-dbt-프로젝트-관리-현황">4.1. dbt 프로젝트 관리 현황</h3>

<p>BigQuery 프로젝트 내에서 소스 테이블들을 Core Layer, Mart Layer로 변환하는 작업을 실행하고 있습니다.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/6.webp" alt="" /></p>

<p>모든 Transformation 과정은 dbt 프로젝트를 통해 Google Cloud의 VM Instance 내에서 주기적으로 실행되고 있습니다.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/7.webp" alt="" /></p>

<h3 id="42-로컬-호스팅의-문제점">4.2. 로컬 호스팅의 문제점</h3>

<p>여타 프레임워크와 마찬가지로, dbt Docs를 호스팅할 경우 기본적으로 해당 Host Machine에서만 접속이 가능합니다. 즉, dbt 프로젝트가 있는 VM Instance에서 접속하거나, 혹은 SSH Key를 사용해 Remote 연결된 Local Machine에서만 접속할 수 있는 것입니다.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/8.webp" alt="" /></p>

<p>하지만 사내 구성원들도 접속할 수 있는 환경을 마련해야 했습니다. 즉, SSH Key가 없지만 동일한 IP 주소 범위 내에서 접속하는 각 Machine에서 dbt Docs 사이트에 접속할 수 있도록 지원해야 했던 것이죠.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/9.webp" alt="" /></p>

<h3 id="43-dbt-docs-호스팅-시작하기">4.3. dbt Docs 호스팅 시작하기</h3>

<p>다음은 사내 구성원들의 접속 환경을 마련하기 위해 설정한 단계들입니다.</p>

<p>(1) <code class="language-plaintext highlighter-rouge">tmux</code> 세션 생성</p>

<p><code class="language-plaintext highlighter-rouge">tmux</code>를 통해 VM Instance에서 dbt Docs 호스팅을 유지하는 독립 세션을 만들었습니다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   tmux new <span class="nt">-s</span> dbt_docs <span class="c"># dbt_docs 이름의 세션을 생성합니다.</span>
   tmux attach <span class="nt">-t</span> dbt_docs <span class="c"># dbt_docs 세션에 Attach합니다.</span>
</code></pre></div></div>

<p>(2) 사이트 빌드</p>

<p>dbt 프로젝트의 파일들을 컴파일하여 Docs 사이트를 빌드했습니다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="nb">source </span>dbt-venv/bin/activate <span class="c"># Python Virtual Environment 활성화</span>
   <span class="nb">export </span><span class="nv">DBT_PROFILES_DIR</span><span class="o">=</span><span class="s2">"path/to/profiles.yml"</span> <span class="c"># DBT_PROFILES_DIR 환경변수 정의</span>
   dbt docs generate <span class="nt">--target</span> prod <span class="c"># prod 스키마 기준으로 dbt Docs 빌드하기</span>
</code></pre></div></div>

<p>(3) 사이트 호스팅 시작</p>

<p>Docs 사이트 호스팅을 시작한 후, 해당 세션으로부터 Detach하여 빠져나왔습니다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   dbt docs serve <span class="nt">--host</span> 0.0.0.0 <span class="nt">--port</span> 8080 <span class="c"># host 도메인과 port를 파라미터로 명시하기</span>
</code></pre></div></div>

<p>(4) VM Instance 설정</p>

<p>VM Instance의 External IP를 확인하고, 수정 페이지에서 Network Tag를 추가했습니다.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/10.webp" alt="" />
<img src="/assets/2024-09-21-dbt-docs-site-hosting/11.webp" alt="" /></p>

<p>(5) VPC 방화벽 규칙 추가</p>

<p>Firewall policies 콘솔에 들어가서 VPC fire rules를 다음과 같이 추가했습니다.</p>

<ul>
  <li><strong>방향</strong>: 인그레스 (Ingress)</li>
  <li><strong>소스 IPv4 범위</strong>: 사내 IPv4 범위 (CIDR 형식)</li>
  <li><strong>타겟 Tags</strong>: 방금 전 VM Instance에 추가한 Network Tag (dbt-docs-serve)</li>
  <li><strong>프로토콜 및 포트</strong>: 방금 전 호스팅한 dbt Docs의 Port (8080)</li>
</ul>

<p>(6) 접속 주소</p>

<p>이제 사내 IPv4 범위 내에서 다음 주소로 접속하면 됩니다.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">http://{VM Instance의 External IP}:8080</code></li>
</ul>

<p>(7) 구성된 환경을 요약하면 다음과 같습니다.</p>

<blockquote>
  <p>“사내 IPv4 범위 내에서 VM 인스턴스의 External IP 주소에 Port 8080으로 접속하면, 호스팅 중인 dbt Docs 사이트가 로드됩니다!”</p>
</blockquote>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/12.webp" alt="" /></p>

<hr />

<h1 id="5-결론">5. 결론</h1>

<p>dbt Docs 사이트 링크를 슬랙 채널에 고정(Pin)하여 구성원 분들이 추후 편리하게 접속하실 수 있도록 설정했습니다. 앞으로 기업과 프로덕트가 성장함에 따라 데이터 활용의 수요는 지속적으로 커질 것입니다. dbt의 “자동 문서화” 기능을 통해 문서화 리소스를 절감하고, 데이터 본연의 업무 효율성을 높일 수 있을 것입니다.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (Korean)" /><category term="Article (Issue Resolution)" /><category term="Level (1. Beginner)" /><category term="Field (Analytics Engineering)" /><category term="Skills (Linux)" /><summary type="html"><![CDATA[“사내에서 dbt Docs를 활용하여 데이터 웨어하우스 문서화를 자동화하고 이를 통해 사내 데이터 접근성과 효율성을 높이기 위한 작업을 수행했습니다. 특히, dbt의 자동 문서화 기능을 활용해 테이블 간 의존성 및 명세서를 최신화함으로써 데이터 활용의 정확성과 속도를 개선했습니다. 이를 위해 VM 인스턴스에서 dbt Docs를 호스팅하고 사내 IP 범위 내 구성원들이 접근할 수 있도록 방화벽 설정을 추가하는 등의 기술적 문제를 해결하며 성공적으로 시스템을 구축했습니다.”]]></summary></entry><entry><title type="html">How to Share dbt Docs Internally (Site Hosting Review)</title><link href="http://localhost:4000/dbt-docs-site-hosting-en/" rel="alternate" type="text/html" title="How to Share dbt Docs Internally (Site Hosting Review)" /><published>2024-09-21T00:00:00+09:00</published><updated>2024-09-21T00:00:00+09:00</updated><id>http://localhost:4000/dbt-docs-site-hosting-en</id><content type="html" xml:base="http://localhost:4000/dbt-docs-site-hosting-en/"><![CDATA[<blockquote>
  <p>“I worked on automating data warehouse documentation using dbt Docs within the company, aiming to improve internal data accessibility and efficiency. Specifically, I utilized dbt’s automated documentation feature to keep dependencies between tables and specifications up to date, thereby improving the accuracy and speed of data usage. I successfully built the system by resolving technical issues, such as hosting dbt Docs on a VM instance and adding firewall settings to allow internal team members to access it within the company’s IP range.”</p>
</blockquote>

<hr />

<h1 id="table-of-contents">Table of Contents</h1>
<ol>
  <li>What is dbt Docs?</li>
  <li>Background</li>
  <li>Objective</li>
  <li>Process</li>
  <li>Conclusion</li>
</ol>

<hr />

<h1 id="1-what-is-dbt-docs">1. What is dbt Docs?</h1>

<p><a href="https://www.getdbt.com/">dbt</a> is an automation framework specialized in the transformation phase of the ELT pipeline, widely used by data analysts and analytics engineers.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/1.webp" alt="" />
<img src="/assets/2024-09-21-dbt-docs-site-hosting/2.webp" alt="" /></p>

<p>dbt analyzes data lineage based on table dependencies and compiles it into a DAG (Directed Acyclic Graph) to automatically execute the entire transformation process. This enables more efficient orchestration management of data warehouses. One of dbt’s key strengths is its “automated documentation” feature.</p>

<p>(1) <strong>Lineage Graph</strong>: Visually displays table dependencies, allowing you to easily identify the tables affected during maintenance tasks.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/3.webp" alt="" /></p>

<p>(2) <strong>View Specifications</strong>: Easily check detailed specifications, such as descriptions of each table and column.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/4.gif" alt="" />
<img src="/assets/2024-09-21-dbt-docs-site-hosting/5.gif" alt="" /></p>

<p>dbt Docs is highly effective in addressing major pain points for data teams. While many companies adopt data warehouses to enhance data utilization, they often face the ironic situation where the complexity of numerous data marts and table structures reduces internal accessibility. As the organization’s dependence on data increases with the rapid growth of its products, maintaining quality, accuracy, accessibility, and documentation can become increasingly difficult.</p>

<p>dbt solves this problem by automatically documenting the entire data warehouse, playing a key role in improving data quality and usability.</p>

<hr />

<h1 id="2-background">2. Background</h1>

<p>I wanted to provide an environment where internal members with query-writing skills could view table and lineage documentation and directly create Redash dashboards. In other words, data warehouse documentation was necessary. Although I considered using Google Sheets or Notion pages, I was concerned that separating analytics engineering and documentation tasks could lead to the following issues:</p>

<ul>
  <li>Communication could slow down due to latency between data mart creation and documentation.</li>
  <li>Human error during individual documentation could result in inaccurate query outcomes.</li>
</ul>

<p>Thus, I concluded that it was not ideal for the documentation environment to be separated from the core analytics engineering work. I wanted to reduce repetitive tasks and spend more time creating value in more critical areas.</p>

<hr />

<h1 id="3-objective">3. Objective</h1>

<p>The goal of this project was to host a dbt Docs site where internal members could check the latest specifications as soon as the dbt project version was updated.</p>

<hr />

<h1 id="4-process">4. Process</h1>

<h3 id="41-current-dbt-project-management">4.1. Current dbt Project Management</h3>

<p>I’ve been working on converting source tables into Core Layer and Mart Layer within the BigQuery project.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/6.webp" alt="" /></p>

<p>All transformation processes are periodically executed via a dbt project on a Google Cloud VM instance.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/7.webp" alt="" /></p>

<h3 id="42-issues-with-local-hosting">4.2. Issues with Local Hosting</h3>

<p>As with other frameworks, hosting dbt Docs is, by default, only accessible from the host machine. In other words, you can only access it from the VM instance where the dbt project is located or from a locally connected machine via SSH.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/8.webp" alt="" /></p>

<p>However, I needed to create an environment where internal members could also access it. In short, I had to allow machines within the same IP range, but without SSH keys, to access the dbt Docs site.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/9.webp" alt="" /></p>

<h3 id="43-starting-dbt-docs-hosting">4.3. Starting dbt Docs Hosting</h3>

<p>Here are the steps I followed to set up the internal access environment:</p>

<p>(1) Create a <code class="language-plaintext highlighter-rouge">tmux</code> session</p>

<p>I used <code class="language-plaintext highlighter-rouge">tmux</code> to create an independent session on the VM instance to maintain the dbt Docs hosting.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   tmux new <span class="nt">-s</span> dbt_docs <span class="c"># Create a session named dbt_docs</span>
   tmux attach <span class="nt">-t</span> dbt_docs <span class="c"># Attach to the dbt_docs session</span>
</code></pre></div></div>

<p>(2) Build the site</p>

<p>I compiled the dbt project files to build the Docs site.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="nb">source </span>dbt-venv/bin/activate <span class="c"># Activate Python Virtual Environment</span>
   <span class="nb">export </span><span class="nv">DBT_PROFILES_DIR</span><span class="o">=</span><span class="s2">"path/to/profiles.yml"</span> <span class="c"># Define the DBT_PROFILES_DIR environment variable</span>
   dbt docs generate <span class="nt">--target</span> prod <span class="c"># Build dbt Docs based on the prod schema</span>
</code></pre></div></div>

<p>(3) Start hosting the site</p>

<p>I started hosting the Docs site and detached from the session.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   dbt docs serve <span class="nt">--host</span> 0.0.0.0 <span class="nt">--port</span> 8080 <span class="c"># Specify the host domain and port as parameters</span>
</code></pre></div></div>

<p>(4) Set up the VM Instance</p>

<p>I checked the VM instance’s external IP and added a network tag on the modification page.</p>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/10.webp" alt="" />
<img src="/assets/2024-09-21-dbt-docs-site-hosting/11.webp" alt="" /></p>

<p>(5) Add VPC firewall rules</p>

<p>I went to the firewall policies console and added VPC firewall rules as follows:</p>

<ul>
  <li><strong>Direction</strong>: Ingress</li>
  <li><strong>Source IPv4 Range</strong>: Internal IPv4 range (CIDR format)</li>
  <li><strong>Target Tags</strong>: The network tag added to the VM instance earlier (dbt-docs-serve)</li>
  <li><strong>Protocol and Port</strong>: Port for the dbt Docs hosting (8080)</li>
</ul>

<p>(6) Access address</p>

<p>Now, from within the internal IPv4 range, you can access the site via the following address:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">http://{VM Instance의 External IP}:8080</code></li>
</ul>

<p>(7) In summary, the configured environment is as follows:</p>

<blockquote>
  <p>“Within the internal IPv4 range, you can access the hosted dbt Docs site by connecting to the VM instance’s external IP address on port 8080!”</p>
</blockquote>

<p><img src="/assets/2024-09-21-dbt-docs-site-hosting/12.webp" alt="" /></p>

<hr />

<h1 id="5-conclusion">5. Conclusion</h1>

<p>I pinned the dbt Docs site link in the Slack channel to allow team members to easily access it later. As the company and product continue to grow, the demand for data utilization will increase. By leveraging dbt’s “automated documentation” feature, we can save documentation resources and enhance the efficiency of data-related tasks.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (English)" /><category term="Article (Issue Resolution)" /><category term="Level (1. Beginner)" /><category term="Field (Analytics Engineering)" /><category term="Skills (Linux)" /><summary type="html"><![CDATA[“I worked on automating data warehouse documentation using dbt Docs within the company, aiming to improve internal data accessibility and efficiency. Specifically, I utilized dbt’s automated documentation feature to keep dependencies between tables and specifications up to date, thereby improving the accuracy and speed of data usage. I successfully built the system by resolving technical issues, such as hosting dbt Docs on a VM instance and adding firewall settings to allow internal team members to access it within the company’s IP range.”]]></summary></entry><entry><title type="html">Dramatic Increase in E-commerce Conversion Rates</title><link href="http://localhost:4000/how-we-dramatically-improved-conversion-rates-en/" rel="alternate" type="text/html" title="Dramatic Increase in E-commerce Conversion Rates" /><published>2024-08-29T00:00:00+09:00</published><updated>2024-08-29T00:00:00+09:00</updated><id>http://localhost:4000/how-we-dramatically-improved-conversion-rates-en</id><content type="html" xml:base="http://localhost:4000/how-we-dramatically-improved-conversion-rates-en/"><![CDATA[<blockquote>
  <p>“By analyzing the data of new visitors that increased due to external factors, I achieved a significant rise in purchase conversion rates. The data revealed a substantial increase in the number of new visitors and their purchasing intent, but also identified a high dropout rate at the payment stage. Based on the hypothesis that the inconvenience in the payment process was the main cause, I introduced PayPal Express Checkout to enhance user experience. As a result, the payment conversion rate increased by 32%p, reaching a much higher level than before, and this improvement has been sustained. This demonstrates effective problem-solving and performance enhancement based on data analysis.”</p>
</blockquote>

<hr />

<table>
  <thead>
    <tr>
      <th><strong>Performance Summary</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>- Conversion Rate (<code class="language-plaintext highlighter-rouge">add_payment_info</code> → <code class="language-plaintext highlighter-rouge">purchase</code>): 32%p ↑</td>
    </tr>
  </tbody>
</table>

<hr />

<h1 id="table-of-contents">Table of Contents</h1>
<ol>
  <li>STAR Summary</li>
  <li>Situation</li>
  <li>Tasks</li>
  <li>Actions</li>
  <li>Results</li>
</ol>

<hr />

<h1 id="1-star-summary">1. STAR Summary</h1>

<h3 id="situation">Situation</h3>
<ul>
  <li>In 2023, our company experienced <strong>an unexpected increase in sales</strong> due to a major competitor, who holds the largest market share globally, becoming embroiled in business controversy.</li>
  <li>As a result, there was a surge in new visitors to our online store, which was identified as a phenomenon driven by changes in the external market, rather than the outcome of our internal marketing efforts.</li>
  <li>As a data analyst, I proactively monitored the data to deeply analyze these unusual market movements, focusing particularly on <strong>the acquisition channels and purchasing behavior patterns of new visitors.</strong></li>
</ul>

<h3 id="tasks">Tasks</h3>
<ul>
  <li>In the context of a surge in new visitors, I discovered <strong>a high dropout rate in the payment process.</strong></li>
  <li>A detailed analysis of the dropout points at each stage of the purchase funnel revealed that many customers were <strong>abandoning their processes after entering their payment information.</strong></li>
  <li>Recognizing that <strong>UX in the payment process</strong> significantly affects purchase conversion, I identified a need to improve the user experience by clearly defining the problem.</li>
  <li>Additionally, I concluded that the decline in conversion rates might be related to the natural increase in organic user acquisition due to external factors and changes in user segments.</li>
</ul>

<h3 id="actions">Actions</h3>
<ul>
  <li>Based on the identified problem, I shared it with internal stakeholders and discussed several action plans to improve the payment process.</li>
  <li>As a result of the discussions, we decided to <strong>first introduce the easy payment service, PayPal Express Checkout</strong>, to reduce the dropout rate in the payment process.</li>
  <li>This was deemed the most realistic and effective solution to streamline the payment steps and provide a convenient payment experience to users, thereby increasing conversion rates.</li>
  <li>After implementing this feature, I focused on minimizing user discomfort during the payment process and enhancing security trustworthiness, thereby improving UX.</li>
</ul>

<h3 id="results">Results</h3>
<ul>
  <li>After introducing the PayPal Express Checkout feature, the dropout issue during the payment process significantly improved, and <strong>the conversion rate from <code class="language-plaintext highlighter-rouge">add_payment_info</code> to <code class="language-plaintext highlighter-rouge">purchase</code> increased by 32 percentage points compared to before.</strong></li>
  <li>This action not only restored the conversion rate to its original level by simplifying the payment process and improving the user experience but <strong>also maintained a high level to this day</strong>.</li>
  <li>This result demonstrates that diversifying payment options and introducing easy payment methods are effective strategies, showing that problem-solving based on data analysis has had a positive impact on sales performance.</li>
</ul>

<hr />

<h1 id="2-situation">2. Situation</h1>
<blockquote>
  <ul>
    <li>In 2023, our company experienced <strong>an unexpected increase in sales</strong> due to a major competitor, who holds the largest market share globally, becoming embroiled in business controversy.</li>
    <li>As a result, there was a surge in new visitors to our online store, which was identified as a phenomenon driven by changes in the external market, rather than the outcome of our internal marketing efforts.</li>
    <li>As a data analyst, I proactively monitored the data to deeply analyze these unusual market movements, focusing particularly on <strong>the acquisition channels and purchasing behavior patterns of new visitors.</strong></li>
  </ul>
</blockquote>

<h3 id="detailed-situation">Detailed Situation</h3>
<ul>
  <li>In 2023, a competitor with the top market share globally became heavily embroiled in business controversy, resulting in a windfall for our company, with a significant increase in sales on our own website. This was due to external market influences rather than the results of our internal marketing efforts.</li>
  <li>As a data analyst, I also wanted to deeply monitor and follow up on this “<strong>abnormal phenomenon caused by unusual market flows.</strong>”</li>
</ul>

<h3 id="data-follow-up">Data Follow-up</h3>

<ol>
  <li>The number of new visitors surged.
    <details>
<summary>View Query</summary>
<div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">WITH</span>
   <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">user_pseudo_id</span><span class="p">,</span>
         <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span>
      <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
      <span class="k">WHERE</span>
         <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
   <span class="p">),</span>

   <span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">user_pseudo_id</span><span class="p">,</span>
         <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>
      <span class="k">FROM</span>
         <span class="n">CTE_raw</span>
      <span class="k">GROUP</span> <span class="k">BY</span>
         <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
   <span class="p">)</span>

   <span class="k">SELECT</span>
      <span class="n">event_date</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
   <span class="k">FROM</span>
      <span class="n">CTE_users_min_gsn</span>
   <span class="k">WHERE</span>
      <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
</details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/1.png" alt="" /></p>
  </li>
  <li>These visitors primarily entered through organic traffic and from the United States.
    <ul>
      <li>Number of New Users (by Country)
        <details>
 <summary>View Query</summary>
 <div>
            <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">WITH</span>
 <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="n">user_pseudo_id</span><span class="p">,</span>
       <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>
       <span class="n">geo</span><span class="p">.</span><span class="n">country</span>
    <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
    <span class="k">WHERE</span>
       <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
 <span class="p">),</span>

 <span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="n">user_pseudo_id</span><span class="p">,</span>
       <span class="n">country</span><span class="p">,</span>
       <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>
    <span class="k">FROM</span>
       <span class="n">CTE_raw</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span>
 <span class="p">),</span>

 <span class="n">CTE_top20_countries</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">country</span><span class="p">,</span>
       <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
       <span class="n">CTE_users_min_gsn</span>
    <span class="k">WHERE</span>
       <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
       <span class="mi">2</span> <span class="k">DESC</span>
    <span class="k">LIMIT</span>
       <span class="mi">20</span>
 <span class="p">),</span>

 <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="k">CASE</span>
             <span class="k">WHEN</span> <span class="n">country</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">country</span> <span class="k">FROM</span> <span class="n">CTE_top20_countries</span><span class="p">)</span> <span class="k">THEN</span> <span class="n">country</span>
             <span class="k">ELSE</span> <span class="s1">'(Others)'</span>
       <span class="k">END</span> <span class="k">AS</span> <span class="n">country</span><span class="p">,</span>
       <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
       <span class="n">CTE_users_min_gsn</span>
    <span class="k">WHERE</span>
       <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
 <span class="p">)</span>

 <span class="k">SELECT</span>
    <span class="o">*</span>
 <span class="k">FROM</span>
    <span class="n">CTE_result</span>
 <span class="k">ORDER</span> <span class="k">BY</span>
    <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span> <span class="k">DESC</span>
</code></pre></div>            </div>
          </div>
 </details>
        <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/3.png" alt="" /></p>
      </li>
      <li>Number of New Users (by First UTM Parameters)
        <details>
 <summary>View Query</summary>
 <div>
            <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">WITH</span>
 <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="n">user_pseudo_id</span><span class="p">,</span>
       <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>
       <span class="n">traffic_source</span><span class="p">.</span><span class="n">name</span> <span class="k">AS</span> <span class="n">first_campaign</span><span class="p">,</span>
       <span class="n">traffic_source</span><span class="p">.</span><span class="n">medium</span> <span class="k">AS</span> <span class="n">first_medium</span><span class="p">,</span>
       <span class="n">traffic_source</span><span class="p">.</span><span class="k">source</span> <span class="k">AS</span> <span class="n">first_source</span>
    <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
    <span class="k">WHERE</span>
       <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
 <span class="p">),</span>

 <span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="n">user_pseudo_id</span><span class="p">,</span>
       <span class="n">first_campaign</span><span class="p">,</span>
       <span class="n">first_medium</span><span class="p">,</span>
       <span class="n">first_source</span><span class="p">,</span>
       <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>
    <span class="k">FROM</span>
       <span class="n">CTE_raw</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span>
 <span class="p">),</span>

 <span class="n">CTE_top20_utms</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_campaign</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_medium</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_source</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm</span><span class="p">,</span>
       <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
       <span class="n">CTE_users_min_gsn</span>
    <span class="k">WHERE</span>
       <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
       <span class="mi">2</span> <span class="k">DESC</span>
    <span class="k">LIMIT</span>
       <span class="mi">20</span>
 <span class="p">),</span>

 <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="k">CASE</span>
             <span class="k">WHEN</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_campaign</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_medium</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_source</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">utm</span> <span class="k">FROM</span> <span class="n">CTE_top20_utms</span><span class="p">)</span> <span class="k">THEN</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_campaign</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_medium</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_source</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span>
             <span class="k">ELSE</span> <span class="s1">'(Others)'</span>
       <span class="k">END</span> <span class="k">AS</span> <span class="n">utm</span><span class="p">,</span>
       <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
       <span class="n">CTE_users_min_gsn</span>
    <span class="k">WHERE</span>
       <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
 <span class="p">)</span>

 <span class="k">SELECT</span>
    <span class="o">*</span>
 <span class="k">FROM</span>
    <span class="n">CTE_result</span>
 <span class="k">ORDER</span> <span class="k">BY</span>
    <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span> <span class="k">DESC</span>
</code></pre></div>            </div>
          </div>
 </details>
        <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/4.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li>The purchasing intent of new visitors was significantly higher than in the past.
    <details>
<summary>View Query</summary>
<div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">WITH</span>
   <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">user_pseudo_id</span><span class="p">,</span>
         <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>
         <span class="n">event_name</span>
      <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
      <span class="k">WHERE</span>
         <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
   <span class="p">),</span>

<span class="n">CTE_users</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">event_date</span><span class="p">,</span>
      <span class="n">user_pseudo_id</span><span class="p">,</span>
      <span class="n">event_name</span><span class="p">,</span>
      <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>
   <span class="k">FROM</span>
      <span class="n">CTE_raw</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span>
<span class="p">),</span>

<span class="n">CTE_new_users</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">event_date</span><span class="p">,</span>
      <span class="n">user_pseudo_id</span>
   <span class="k">FROM</span>
      <span class="n">CTE_users</span>
   <span class="k">WHERE</span>
      <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
<span class="p">)</span>

<span class="k">SELECT</span>
   <span class="n">U</span><span class="p">.</span><span class="n">event_date</span><span class="p">,</span>
   <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">NU</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">new_users_cnt</span><span class="p">,</span>
   <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">U</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'view_item'</span> <span class="k">THEN</span> <span class="n">NU</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">new_users_cnt_view_item</span><span class="p">,</span>
   <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">U</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'begin_checkout'</span> <span class="k">THEN</span> <span class="n">NU</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">new_users_cnt_begin_checkout</span>    
<span class="k">FROM</span>
   <span class="n">CTE_users</span> <span class="n">U</span>
<span class="k">LEFT</span> <span class="k">JOIN</span> 
   <span class="n">CTE_new_users</span> <span class="n">NU</span>
   <span class="k">ON</span> <span class="n">U</span><span class="p">.</span><span class="n">event_date</span> <span class="o">=</span> <span class="n">NU</span><span class="p">.</span><span class="n">event_date</span>
   <span class="k">AND</span> <span class="n">U</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">NU</span><span class="p">.</span><span class="n">user_pseudo_id</span>
<span class="k">GROUP</span> <span class="k">BY</span>
   <span class="mi">1</span>
<span class="k">ORDER</span> <span class="k">BY</span>
   <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
</details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/2.png" alt="" /></p>
  </li>
</ol>

<h3 id="problem-discovery">Problem Discovery</h3>

<ol>
  <li>However, there was a sharp increase in dropout rates in the payment process after completing the purchase-related information such as shipping address, email, and contact information.
    <details>
<summary>View Query</summary>
<div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">WITH</span>
   <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">user_pseudo_id</span><span class="p">,</span>
         <span class="n">event_name</span>
      <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
      <span class="k">WHERE</span>
         <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
   <span class="p">),</span>

   <span class="n">CTE_funnel</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cnt</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'view_item'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_users_cnt</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'begin_checkout'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'add_payment_info'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_users_cnt</span>
      <span class="k">FROM</span>
         <span class="n">CTE_raw</span>
      <span class="k">GROUP</span> <span class="k">BY</span>
         <span class="mi">1</span>
   <span class="p">),</span>

   <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">all_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cvr</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">view_item_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_cvr</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_cvr</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_cvr</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">purchase_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_cvr</span>
      <span class="k">FROM</span>
         <span class="n">CTE_funnel</span>
      <span class="k">ORDER</span> <span class="k">BY</span>
         <span class="mi">1</span>
   <span class="p">)</span>

   <span class="k">SELECT</span>
      <span class="o">*</span>
   <span class="k">FROM</span>
      <span class="n">CTE_result</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
</details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/5.png" alt="" /></p>

    <ul>
      <li>The major events in the purchase conversion stages were as follows:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">view_item</code>: Viewing the item page.</li>
          <li><code class="language-plaintext highlighter-rouge">begin_checkout</code>: Starting the purchase process.</li>
          <li><code class="language-plaintext highlighter-rouge">add_payment_info</code>: Completing the entry of purchase-related information such as shipping address, email, and contact information, the nproceeding to the payment process.</li>
          <li><code class="language-plaintext highlighter-rouge">purchase</code>: Completing the final payment and vewing the Thank you page.</li>
        </ul>
      </li>
      <li>Among these four stages, it was confirmed that there was a drop in conversion rates at the point of moving from <code class="language-plaintext highlighter-rouge">add_payment_info</code> to <code class="language-plaintext highlighter-rouge">purchase</code>.</li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="3-tasks">3. Tasks</h1>
<blockquote>
  <ul>
    <li>In the context of a surge in new visitors, I discovered <strong>a high dropout rate in the payment process.</strong></li>
    <li>A detailed analysis of the dropout points at each stage of the purchase funnel revealed that many customers were <strong>abandoning their processes after entering their payment information.</strong></li>
    <li>Recognizing that <strong>UX in the payment process</strong> significantly affects purchase conversion, I identified a need to improve the user experience by clearly defining the problem.</li>
    <li>Additionally, I concluded that the decline in conversion rates might be related to the natural increase in organic user acquisition due to external factors and changes in user segments.</li>
  </ul>
</blockquote>

<h3 id="clarifying-the-problem">Clarifying the Problem</h3>

<ol>
  <li>There was a need to improve the UX of the payment process.
    <ul>
      <li>An analysis of the points with high dropout rates in the purchase funnel revealed that many customers were abandoning their carts in the payment process, even after completing the entry of purchase-related information such as shipping address, email, and contact information.</li>
      <li><strong>Given that they had completed such a cumbersome process of entering purchase information, they must have been in a state of “high purchase intent,” yet a significant number still abandoned their carts.</strong></li>
      <li>This suggested a high possibility that <strong>the dissatisfaction with the payment process was strong enough to undermine the purchase intent itself.</strong></li>
    </ul>
  </li>
  <li>Specifically, the dropout rate was very high at the following stage:
    <ul>
      <li>The UI below appears right after the <code class="language-plaintext highlighter-rouge">add_payment_info</code> event occurs during the payment process by the payment gateway provider.</li>
      <li>Users were not completing the payment and abandoning their carts during this process.
<img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/6.png" alt="" /></li>
    </ul>
  </li>
  <li>The user segments of incoming visitors had changed.
    <ul>
      <li>
        <p>If the conversion rate suddenly diverges from the past without any changes to the website UI, it was determined that this was due to changes in user segments.</p>

        <ul>
          <li>
            <p>This was because it was primarily “<strong>natural inflow</strong>” caused by market influences, rather than the “<strong>artificial inflow</strong>” that previously visited in response to marketing activities.
 <img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/4.png" alt="" /></p>
          </li>
          <li>
            <p>It was due to the nature/behavior pattern with high purchase intent compared to the past (significantly increased <strong>item page view rate</strong> compared to before).
 <img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/2.png" alt="" /></p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="4-actions">4. Actions</h1>
<blockquote>
  <ul>
    <li>Based on the identified problem, I shared it with internal stakeholders and discussed several action plans to improve the payment process.</li>
    <li>As a result of the discussions, we decided to <strong>first introduce the easy payment service, PayPal Express Checkout</strong>, to reduce the dropout rate in the payment process.</li>
    <li>This was deemed the most realistic and effective solution to streamline the payment steps and provide a convenient payment experience to users, thereby increasing conversion rates.</li>
    <li>After implementing this feature, I focused on minimizing user discomfort during the payment process and enhancing security trustworthiness, thereby improving UX.</li>
  </ul>
</blockquote>

<h3 id="internal-sharing">Internal Sharing</h3>
<ul>
  <li>I clarified the problem and shared the details with internal stakeholders, and many expressed agreement with the issue.</li>
  <li>Eventually, I held a meeting with executives and marketing team members to <strong>discuss possible action plans</strong> to address the issue.
 <img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/7-eng.png" alt="" /></li>
</ul>

<h3 id="limitations-of-data-analysis">Limitations of Data Analysis</h3>
<ul>
  <li>Unfortunately, the user behavior that occurred between the <code class="language-plaintext highlighter-rouge">add_payment_info</code> event and the <code class="language-plaintext highlighter-rouge">purchase</code> event could not be confirmed through the data.
    <ul>
      <li>This was because, under the plan for the e-commerce platform we were using, only basic GA4 event collection was possible as we couldn’t insert GTM custom event triggers into the source code.</li>
    </ul>
  </li>
  <li>Therefore, it was not possible to explain the specific cause of this problem solely with data.</li>
  <li><strong>Therefore, moving forward, the intuitive judgment of internal stakeholders with insight into domestic and overseas markets became important.</strong></li>
</ul>

<h3 id="hypothesis-establishment">Hypothesis Establishment</h3>

<ol>
  <li>After deep discussions, the following opinions were shared:
    <ul>
      <li><strong>Hypothesis 1</strong>: “We need to diversify payment methods. Potential customers might have abandoned their carts because they couldn’t find their preferred payment method.”</li>
      <li><strong>Hypothesis 2</strong>: “How about adding an easy payment service? It could quickly complete the payment before the purchase intent declines.”</li>
      <li><strong>Hypothesis 3</strong>: “Consider supporting cryptocurrency payment methods. Given the characteristics of our customers, it could be highly preferred.”</li>
      <li><strong>Hypothesis 4</strong>: “Improving the UI of the payment gateway’s payment process might also be a good idea.”</li>
    </ul>
  </li>
  <li>Among these, we decided to first test “<strong>adding an easy payment service</strong>”.
    <ul>
      <li>This was considered the most feasible action in terms of implementation costs, market insights, etc.</li>
    </ul>
  </li>
  <li>Final Hypothesis Establishment
    <blockquote>
      <p>“<strong>Introducing the PayPal Express Checkout feature will increase the conversion rate in the payment process!</strong>”</p>
    </blockquote>
  </li>
</ol>

<h3 id="action-implementation">Action Implementation</h3>

<ol>
  <li>
    <p><strong>PayPal Express Checkout</strong> is a feature that allows customers to quickly complete a payment using information already stored through PayPal login, without needing to individually enter their shipping address, email, contact information, or even credit card details.</p>
  </li>
  <li>In fact, our company had already offered PayPal as a payment method through the linked payment gateway, but it was suspected that this caused the following inconveniences:
    <ul>
      <li>“It was only displayed as one of several options, so it might not have been easily noticeable.”</li>
      <li>“After entering shipping, email, and contact information, prompting for PayPal login again might have been perceived as an unnecessary waste of time.”
<img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/6.png" alt="" /></li>
    </ul>
  </li>
  <li>Therefore, the PayPal Express Checkout feature was considered a UX improvement method for the following reasons:
    <ul>
      <li><strong>It supports easy payments by shortening the customer’s purchase conversion steps.</strong></li>
      <li><strong>It enhances trust in security by eliminating the need to enter personal information individually.</strong>
<img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/8.png" alt="" /></li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="5-results">5. Results</h1>
<blockquote>
  <ul>
    <li>After introducing the PayPal Express Checkout feature, the dropout issue during the payment process significantly improved, and <strong>the conversion rate from <code class="language-plaintext highlighter-rouge">add_payment_info</code> to <code class="language-plaintext highlighter-rouge">purchase</code> increased by 32 percentage points compared to before.</strong></li>
    <li>This action not only restored the conversion rate to its original level by simplifying the payment process and improving the user experience but <strong>also maintained a high level to this day</strong>.</li>
    <li>This result demonstrates that diversifying payment options and introducing easy payment methods are effective strategies, showing that problem-solving based on data analysis has had a positive impact on sales performance.</li>
  </ul>
</blockquote>

<h3 id="results-1">Results</h3>

<ul>
  <li>After executing the action, <strong>the conversion rate at the point of moving from <code class="language-plaintext highlighter-rouge">add_payment_info</code> to <code class="language-plaintext highlighter-rouge">purchase</code> not only recovered to its original state but also reached a much higher level than before.</strong></li>
  <li>As of the end of August 2023, it continues to maintain a high conversion rate.
    <details>
 <summary>View Query</summary>
 <div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">WITH</span>
    <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">event_date</span><span class="p">,</span>
          <span class="n">user_pseudo_id</span><span class="p">,</span>
          <span class="n">event_name</span>
       <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
       <span class="k">WHERE</span>
          <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
    <span class="p">),</span>

    <span class="n">CTE_funnel</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">event_date</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'view_item'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'begin_checkout'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'add_payment_info'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_users_cnt</span>
       <span class="k">FROM</span>
          <span class="n">CTE_raw</span>
       <span class="k">GROUP</span> <span class="k">BY</span>
          <span class="mi">1</span>
    <span class="p">),</span>

    <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">event_date</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">all_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cvr</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">view_item_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_cvr</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_cvr</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_cvr</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">purchase_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_cvr</span>
       <span class="k">FROM</span>
          <span class="n">CTE_funnel</span>
       <span class="k">ORDER</span> <span class="k">BY</span>
          <span class="mi">1</span>
    <span class="p">)</span>

    <span class="k">SELECT</span>
       <span class="o">*</span>
    <span class="k">FROM</span>
       <span class="n">CTE_result</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
       <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
 </details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/9.png" alt="" /></p>
  </li>
</ul>

<h3 id="impact">Impact</h3>

<ul>
  <li>After implementing the action, <strong>the conversion rate at the point of moving from <code class="language-plaintext highlighter-rouge">add_payment_info</code> to <code class="language-plaintext highlighter-rouge">purchase</code> increased by 32 percentage points compared to before.</strong>
    <details>
 <summary>View Query</summary>
 <div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">WITH</span>
    <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">event_date</span><span class="p">,</span>
          <span class="n">user_pseudo_id</span><span class="p">,</span>
          <span class="n">event_name</span>
       <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
       <span class="k">WHERE</span>
          <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
    <span class="p">),</span>

    <span class="n">CTE_funnel</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="k">CASE</span>
                <span class="k">WHEN</span> <span class="n">event_date</span> <span class="o">&lt;=</span> <span class="s1">'YYYY-MM-DD'</span> <span class="k">THEN</span> <span class="s1">'AS-IS'</span>
                <span class="k">ELSE</span> <span class="s1">'TO-BE'</span>
          <span class="k">END</span> <span class="k">AS</span> <span class="n">period</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'view_item'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'begin_checkout'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'add_payment_info'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_users_cnt</span>
       <span class="k">FROM</span>
          <span class="n">CTE_raw</span>
       <span class="k">GROUP</span> <span class="k">BY</span>
          <span class="mi">1</span>
    <span class="p">),</span>

    <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">period</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">purchase_users_cnt</span><span class="p">,</span> <span class="n">add_payment_info_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_cvr</span>
       <span class="k">FROM</span>
          <span class="n">CTE_funnel</span>
    <span class="p">)</span>

    <span class="k">SELECT</span>
       <span class="o">*</span>
    <span class="k">FROM</span>
       <span class="n">CTE_result</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
       <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
 </details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/10.png" alt="" /></p>
  </li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (English)" /><category term="Article (Project)" /><category term="Level (1. Beginner)" /><category term="Field (Data Analysis)" /><category term="Skills (SQL)" /><summary type="html"><![CDATA[“By analyzing the data of new visitors that increased due to external factors, I achieved a significant rise in purchase conversion rates. The data revealed a substantial increase in the number of new visitors and their purchasing intent, but also identified a high dropout rate at the payment stage. Based on the hypothesis that the inconvenience in the payment process was the main cause, I introduced PayPal Express Checkout to enhance user experience. As a result, the payment conversion rate increased by 32%p, reaching a much higher level than before, and this improvement has been sustained. This demonstrates effective problem-solving and performance enhancement based on data analysis.”]]></summary></entry><entry><title type="html">구매 전환율 급상승 후기</title><link href="http://localhost:4000/how-we-dramatically-improved-conversion-rates-ko/" rel="alternate" type="text/html" title="구매 전환율 급상승 후기" /><published>2024-08-29T00:00:00+09:00</published><updated>2024-08-29T00:00:00+09:00</updated><id>http://localhost:4000/how-we-dramatically-improved-conversion-rates-ko</id><content type="html" xml:base="http://localhost:4000/how-we-dramatically-improved-conversion-rates-ko/"><![CDATA[<blockquote>
  <p>“외부 요인으로 인해 증가한 신규 방문자 데이터를 분석하여 구매 전환율의 급상승을 달성했습니다. 데이터를 통해 신규 방문자 수와 이들의 구매 의향이 크게 증가했음을 발견했지만, 결제 단계에서 이탈률이 높다는 문제를 파악했습니다. 이에 결제 과정의 불편함이 주요 원인임을 가설로 설정하고, PayPal Express Checkout을 도입하여 사용자 경험을 개선했습니다. 그 결과, 결제 전환율이 32%p 상승하여 이전보다 훨씬 높은 수준을 기록했으며, 이는 지속적으로 유지되고 있습니다. 이를 통해 분석 기반의 문제 해결과 성과 향상을 이뤄냈습니다.”</p>
</blockquote>

<hr />

<table>
  <thead>
    <tr>
      <th><strong>Performance Summary</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>- 전환율 (<code class="language-plaintext highlighter-rouge">add_payment_info</code> → <code class="language-plaintext highlighter-rouge">purchase</code>): 32%p ↑</td>
    </tr>
  </tbody>
</table>

<hr />

<h1 id="목차">목차</h1>
<ol>
  <li>STAR Summary</li>
  <li>Situation</li>
  <li>Tasks</li>
  <li>Actions</li>
  <li>Results</li>
</ol>

<hr />

<h1 id="1-star-summary">1. STAR Summary</h1>

<h3 id="situation">Situation</h3>
<ul>
  <li>2023년, 글로벌 시장 점유율 1위의 경쟁사가 사업적 논란에 휘말리면서 당사는 <strong>예상치 못한 매출 증가</strong>를 경험하게 되었습니다.</li>
  <li>이로 인해 자사몰의 신규 방문자가 급증했으며, 이는 당사 내부 마케팅 활동의 결과가 아닌 외부 시장 변화에 따른 현상으로 파악되었습니다.</li>
  <li>데이터 분석가로서 저는 이러한 비정상적인 시장 움직임을 깊이 있게 분석하기 위해 자발적으로 데이터 모니터링을 했고, 특히 <strong>신규 방문자들의 유입 경로와 구매 행동 패턴</strong>을 집중적으로 추적했습니다.</li>
</ul>

<h3 id="tasks">Tasks</h3>
<ul>
  <li>신규 방문자 수가 급증한 상황에서 <strong>결제 프로세스의 이탈률이 높다는 문제</strong>를 발견했습니다.</li>
  <li>구체적으로 구매 퍼널의 각 단계에서 이탈 지점을 분석한 결과, 많은 고객들이 <strong>구매 정보를 입력한 후 결제 단계에서 이탈</strong>하는 것으로 나타났습니다.</li>
  <li>특히, <strong>결제 과정에서의 UX</strong>가 구매 전환에 큰 영향을 미친다는 점을 인지하고, 문제를 명확히 하여 사용자 경험을 개선할 필요가 있었습니다.</li>
  <li>또한, 이번 전환율 저하는 외부 요인에 의한 자연적 유입 사용자 증가와 세그먼트 변화와 관련이 있을 것으로 판단했습니다.</li>
</ul>

<h3 id="actions">Actions</h3>
<ul>
  <li>발견된 문제를 바탕으로 결제 프로세스 개선을 위해 사내 구성원들과 문제를 공유하고, 여러 가지 액션 플랜을 논의했습니다.</li>
  <li>논의 결과, 결제 프로세스에서의 이탈률을 낮추기 위해 우선적으로 <strong>간편 결제 서비스인 PayPal Express Checkout 기능을 도입</strong>하기로 결정했습니다.</li>
  <li>이는 결제 단계를 단축하고 사용자에게 편리한 결제 경험을 제공하여 전환율을 높일 수 있는 가장 현실적이고 효율적인 방안으로 판단되었습니다.</li>
  <li>이후 해당 기능을 적용하여 사용자의 결제 과정에서 불편함을 최소화하고 보안 신뢰도를 높이는 등 UX 개선을 추진했습니다.</li>
</ul>

<h3 id="results">Results</h3>
<ul>
  <li>PayPal Express Checkout 기능 도입 후, 결제 과정에서 이탈하던 문제가 크게 개선되어 <strong><code class="language-plaintext highlighter-rouge">add_payment_info</code>에서 <code class="language-plaintext highlighter-rouge">purchase</code>로 넘어가는 전환율이 이전보다 32%p 상승</strong>했습니다.</li>
  <li>이 조치는 결제 프로세스를 간소화하고 사용자 경험을 향상시켜 전환율을 원상태로 회복시켰을 뿐만 아니라, <strong>현재까지도 높은 수준을 유지</strong>하고 있습니다.</li>
  <li>이 결과는 결제 옵션의 다양화와 간편 결제 도입이 효과적인 전략임을 입증하며, 분석을 바탕으로 한 문제 해결이 매출 성과에 긍정적인 영향을 미쳤습니다.</li>
</ul>

<hr />

<h1 id="2-situation">2. Situation</h1>
<blockquote>
  <ul>
    <li>2023년, 글로벌 시장 점유율 1위의 경쟁사가 사업적 논란에 휘말리면서 당사는 <strong>예상치 못한 매출 증가</strong>를 경험하게 되었습니다.</li>
    <li>이로 인해 자사몰의 신규 방문자가 급증했으며, 이는 당사 내부 마케팅 활동의 결과가 아닌 외부 시장 변화에 따른 현상으로 파악되었습니다.</li>
    <li>데이터 분석가로서 저는 이러한 비정상적인 시장 움직임을 깊이 있게 분석하기 위해 자발적으로 데이터 모니터링을 했고, 특히 <strong>신규 방문자들의 유입 경로와 구매 행동 패턴</strong>을 집중적으로 추적했습니다.</li>
  </ul>
</blockquote>

<h3 id="구체적인-상황">구체적인 상황</h3>
<ul>
  <li>2023년, 글로벌 시장 점유율 TOP1인 모 경쟁사가 사업적 논란에 크게 휩싸이면서 당사가 반사이익 수혜를 입어 자사몰 매출이 급증하고 있었습니다. 이는 내부적인 마케팅 활동의 결과가 아닌, 시장 자체의 외부 영향 덕분이었습니다.</li>
  <li>데이터 분석가였던 저 역시 “<strong>흔치 않은 시장의 흐름으로 인한 이상 현상</strong>“을 깊이 모니터링해보고 싶어 자발적으로 함께 데이터를 팔로업했습니다.</li>
</ul>

<h3 id="데이터-팔로업">데이터 팔로업</h3>

<ol>
  <li>신규 방문자 수가 급증했습니다.
    <details>
<summary>View Query</summary>
<div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">WITH</span>
   <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">user_pseudo_id</span><span class="p">,</span>
         <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span>
      <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
      <span class="k">WHERE</span>
         <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
   <span class="p">),</span>

   <span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">user_pseudo_id</span><span class="p">,</span>
         <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>
      <span class="k">FROM</span>
         <span class="n">CTE_raw</span>
      <span class="k">GROUP</span> <span class="k">BY</span>
         <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
   <span class="p">)</span>

   <span class="k">SELECT</span>
      <span class="n">event_date</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
   <span class="k">FROM</span>
      <span class="n">CTE_users_min_gsn</span>
   <span class="k">WHERE</span>
      <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
</details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/1.png" alt="" /></p>
  </li>
  <li>이들은 주로 미국과 Organic 트래픽을 통해 유입되었습니다.
    <ul>
      <li>신규 방문자 수 (국가별 분류)
        <details>
 <summary>View Query</summary>
 <div>
            <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">WITH</span>
 <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="n">user_pseudo_id</span><span class="p">,</span>
       <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>
       <span class="n">geo</span><span class="p">.</span><span class="n">country</span>
    <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
    <span class="k">WHERE</span>
       <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
 <span class="p">),</span>

 <span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="n">user_pseudo_id</span><span class="p">,</span>
       <span class="n">country</span><span class="p">,</span>
       <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>
    <span class="k">FROM</span>
       <span class="n">CTE_raw</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span>
 <span class="p">),</span>

 <span class="n">CTE_top20_countries</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">country</span><span class="p">,</span>
       <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
       <span class="n">CTE_users_min_gsn</span>
    <span class="k">WHERE</span>
       <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
       <span class="mi">2</span> <span class="k">DESC</span>
    <span class="k">LIMIT</span>
       <span class="mi">20</span>
 <span class="p">),</span>

 <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="k">CASE</span>
             <span class="k">WHEN</span> <span class="n">country</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">country</span> <span class="k">FROM</span> <span class="n">CTE_top20_countries</span><span class="p">)</span> <span class="k">THEN</span> <span class="n">country</span>
             <span class="k">ELSE</span> <span class="s1">'(Others)'</span>
       <span class="k">END</span> <span class="k">AS</span> <span class="n">country</span><span class="p">,</span>
       <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
       <span class="n">CTE_users_min_gsn</span>
    <span class="k">WHERE</span>
       <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
 <span class="p">)</span>

 <span class="k">SELECT</span>
    <span class="o">*</span>
 <span class="k">FROM</span>
    <span class="n">CTE_result</span>
 <span class="k">ORDER</span> <span class="k">BY</span>
    <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span> <span class="k">DESC</span>
</code></pre></div>            </div>
          </div>
 </details>
        <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/3.png" alt="" /></p>
      </li>
      <li>신규 방문자 수 (First UTM Parameters별 분류)
        <details>
 <summary>View Query</summary>
 <div>
            <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">WITH</span>
 <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="n">user_pseudo_id</span><span class="p">,</span>
       <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>
       <span class="n">traffic_source</span><span class="p">.</span><span class="n">name</span> <span class="k">AS</span> <span class="n">first_campaign</span><span class="p">,</span>
       <span class="n">traffic_source</span><span class="p">.</span><span class="n">medium</span> <span class="k">AS</span> <span class="n">first_medium</span><span class="p">,</span>
       <span class="n">traffic_source</span><span class="p">.</span><span class="k">source</span> <span class="k">AS</span> <span class="n">first_source</span>
    <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
    <span class="k">WHERE</span>
       <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
 <span class="p">),</span>

 <span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="n">user_pseudo_id</span><span class="p">,</span>
       <span class="n">first_campaign</span><span class="p">,</span>
       <span class="n">first_medium</span><span class="p">,</span>
       <span class="n">first_source</span><span class="p">,</span>
       <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>
    <span class="k">FROM</span>
       <span class="n">CTE_raw</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span>
 <span class="p">),</span>

 <span class="n">CTE_top20_utms</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_campaign</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_medium</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_source</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm</span><span class="p">,</span>
       <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
       <span class="n">CTE_users_min_gsn</span>
    <span class="k">WHERE</span>
       <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
       <span class="mi">2</span> <span class="k">DESC</span>
    <span class="k">LIMIT</span>
       <span class="mi">20</span>
 <span class="p">),</span>

 <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
       <span class="n">event_date</span><span class="p">,</span>
       <span class="k">CASE</span>
             <span class="k">WHEN</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_campaign</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_medium</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_source</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">utm</span> <span class="k">FROM</span> <span class="n">CTE_top20_utms</span><span class="p">)</span> <span class="k">THEN</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_campaign</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_medium</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span> <span class="o">||</span> <span class="s1">' &gt; '</span> <span class="o">||</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">first_source</span><span class="p">,</span> <span class="s1">'(Unknown)'</span><span class="p">)</span>
             <span class="k">ELSE</span> <span class="s1">'(Others)'</span>
       <span class="k">END</span> <span class="k">AS</span> <span class="n">utm</span><span class="p">,</span>
       <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
       <span class="n">CTE_users_min_gsn</span>
    <span class="k">WHERE</span>
       <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
       <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
 <span class="p">)</span>

 <span class="k">SELECT</span>
    <span class="o">*</span>
 <span class="k">FROM</span>
    <span class="n">CTE_result</span>
 <span class="k">ORDER</span> <span class="k">BY</span>
    <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span> <span class="k">DESC</span>
</code></pre></div>            </div>
          </div>
 </details>
        <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/4.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li>신규 방문자들의 구매 의향은 과거에 비해 매우 높은 편이었습니다.
    <details>
<summary>View Query</summary>
<div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">WITH</span>
   <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">user_pseudo_id</span><span class="p">,</span>
         <span class="p">(</span><span class="k">SELECT</span> <span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">FROM</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">WHERE</span> <span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span>
         <span class="n">event_name</span>
      <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
      <span class="k">WHERE</span>
         <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
   <span class="p">),</span>

<span class="n">CTE_users</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">event_date</span><span class="p">,</span>
      <span class="n">user_pseudo_id</span><span class="p">,</span>
      <span class="n">event_name</span><span class="p">,</span>
      <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>
   <span class="k">FROM</span>
      <span class="n">CTE_raw</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span>
<span class="p">),</span>

<span class="n">CTE_new_users</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">event_date</span><span class="p">,</span>
      <span class="n">user_pseudo_id</span>
   <span class="k">FROM</span>
      <span class="n">CTE_users</span>
   <span class="k">WHERE</span>
      <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span>
<span class="p">)</span>

<span class="k">SELECT</span>
   <span class="n">U</span><span class="p">.</span><span class="n">event_date</span><span class="p">,</span>
   <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">NU</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">new_users_cnt</span><span class="p">,</span>
   <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">U</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'view_item'</span> <span class="k">THEN</span> <span class="n">NU</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">new_users_cnt_view_item</span><span class="p">,</span>
   <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">U</span><span class="p">.</span><span class="n">event_name</span> <span class="o">=</span> <span class="s1">'begin_checkout'</span> <span class="k">THEN</span> <span class="n">NU</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">new_users_cnt_begin_checkout</span>    
<span class="k">FROM</span>
   <span class="n">CTE_users</span> <span class="n">U</span>
<span class="k">LEFT</span> <span class="k">JOIN</span> 
   <span class="n">CTE_new_users</span> <span class="n">NU</span>
   <span class="k">ON</span> <span class="n">U</span><span class="p">.</span><span class="n">event_date</span> <span class="o">=</span> <span class="n">NU</span><span class="p">.</span><span class="n">event_date</span>
   <span class="k">AND</span> <span class="n">U</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">NU</span><span class="p">.</span><span class="n">user_pseudo_id</span>
<span class="k">GROUP</span> <span class="k">BY</span>
   <span class="mi">1</span>
<span class="k">ORDER</span> <span class="k">BY</span>
   <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
</details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/2.png" alt="" /></p>
  </li>
</ol>

<h3 id="문제-발견">문제 발견</h3>

<ol>
  <li>그러나, 배송지+이메일+연락처 등 구매 관련 정보 입력을 완료한 후 결제 프로세스 상에서의 이탈률이 급격히 높아졌습니다.
    <details>
<summary>View Query</summary>
<div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">WITH</span>
   <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">user_pseudo_id</span><span class="p">,</span>
         <span class="n">event_name</span>
      <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
      <span class="k">WHERE</span>
         <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
   <span class="p">),</span>

   <span class="n">CTE_funnel</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cnt</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'view_item'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_users_cnt</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'begin_checkout'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'add_payment_info'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_users_cnt</span>
      <span class="k">FROM</span>
         <span class="n">CTE_raw</span>
      <span class="k">GROUP</span> <span class="k">BY</span>
         <span class="mi">1</span>
   <span class="p">),</span>

   <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">event_date</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">all_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cvr</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">view_item_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_cvr</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_cvr</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_cvr</span><span class="p">,</span>
         <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">purchase_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_cvr</span>
      <span class="k">FROM</span>
         <span class="n">CTE_funnel</span>
      <span class="k">ORDER</span> <span class="k">BY</span>
         <span class="mi">1</span>
   <span class="p">)</span>

   <span class="k">SELECT</span>
      <span class="o">*</span>
   <span class="k">FROM</span>
      <span class="n">CTE_result</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
</details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/5.png" alt="" /></p>

    <ul>
      <li>구매 전환 단계의 주요 이벤트는 다음과 같았습니다.
        <ul>
          <li><code class="language-plaintext highlighter-rouge">view_item</code>: 아이템 페이지를 조회한다.</li>
          <li><code class="language-plaintext highlighter-rouge">begin_checkout</code>: 구매를 시작한다.</li>
          <li><code class="language-plaintext highlighter-rouge">add_payment_info</code>: 배송지, 이메일, 연락처 등 구매 관련 정보 입력을 완료한 후 결제 프로세스로 넘어간다.</li>
          <li><code class="language-plaintext highlighter-rouge">purchase</code>: 최종 결제를 완료한 후 Thank You 페이지를 조회한다.</li>
        </ul>
      </li>
      <li>위 네 단계 중, <code class="language-plaintext highlighter-rouge">add_payment_info</code>로부터 <code class="language-plaintext highlighter-rouge">purchase</code>로 넘어가는 지점에서 전환율이 오히려 감소하고 있음을 확인하게 된 것입니다.</li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="3-tasks">3. Tasks</h1>
<blockquote>
  <ul>
    <li>신규 방문자 수가 급증한 상황에서 <strong>결제 프로세스의 이탈률이 높다는 문제</strong>를 발견했습니다.</li>
    <li>구체적으로 구매 퍼널의 각 단계에서 이탈 지점을 분석한 결과, 많은 고객들이 <strong>구매 정보를 입력한 후 결제 단계에서 이탈</strong>하는 것으로 나타났습니다.</li>
    <li>특히, <strong>결제 과정에서의 UX</strong>가 구매 전환에 큰 영향을 미친다는 점을 인지하고, 문제를 명확히 하여 사용자 경험을 개선할 필요가 있었습니다.</li>
    <li>또한, 이번 전환율 저하는 외부 요인에 의한 자연적 유입 사용자 증가와 세그먼트 변화와 관련이 있을 것으로 판단했습니다.</li>
  </ul>
</blockquote>

<h3 id="문제-구체화">문제 구체화</h3>

<ol>
  <li>결제 프로세스의 UX 개선이 필요했습니다.
    <ul>
      <li>구매 퍼널에서 이탈률이 높은 지점을 분석한 결과, 많은 고객들이 배송지, 이메일, 연락처 등 구매 정보를 입력했음에도 불구하고 결제 프로세스 상에서 크게 이탈하는 것으로 나타났습니다.</li>
      <li><strong>상당히 성가신 구매 정보 입력 과정까지 완료했다면, “구매 의향”이 매우 높은 심리 상태였을 텐데, 상당수가 이탈하고 만 것입니다.</strong></li>
      <li>이는 <strong>구매 의향 자체를 흔들어 놓을 만한 결제 프로세스 불만족</strong>을 느꼈을 가능성이 컸을 것입니다.</li>
    </ul>
  </li>
  <li>구체적으로는 다음 과정에서 이탈률이 매우 높았습니다.
    <ul>
      <li>아래 UI는 <code class="language-plaintext highlighter-rouge">add_payment_info</code> 이벤트 발생 직후 나타나는 PG사의 결제 프로세스입니다.</li>
      <li>이 프로세스 과정에서 결제를 완료하지 못하고 이탈하고 있었던 것입니다.
<img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/6.png" alt="" /></li>
    </ul>
  </li>
  <li>유입 사용자 세그먼트가 변했습니다.
    <ul>
      <li>
        <p>웹사이트 UI에는 변동이 전혀 없었는데도 불구하고 전환율이 갑자기 이전과 괴리된다면 세그먼트의 변동 때문인 것으로 판단했습니다.</p>

        <ul>
          <li>
            <p>그동안 마케팅 유입 활동에 반응하여 방문한 “<strong>인위적 유입</strong>“이 아니라, 이벤에는 시장의 영향으로 인해 Organic하게 방문한 “<strong>자연적 유입</strong>“이 주를 이루었기 때문입니다.
 <img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/4.png" alt="" /></p>
          </li>
          <li>
            <p>구매 의향 자체가 과거에 비해 높은 속성/행동 패턴을 지녔기 때문입니다. (이전보다 확연히 높아진 <strong>아이템 페이지 조회율</strong>)
 <img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/2.png" alt="" /></p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="4-actions">4. Actions</h1>
<blockquote>
  <ul>
    <li>발견된 문제를 바탕으로 결제 프로세스 개선을 위해 사내 구성원들과 문제를 공유하고, 여러 가지 액션 플랜을 논의했습니다.</li>
    <li>논의 결과, 결제 프로세스에서의 이탈률을 낮추기 위해 우선적으로 <strong>간편 결제 서비스인 PayPal Express Checkout 기능을 도입</strong>하기로 결정했습니다.</li>
    <li>이는 결제 단계를 단축하고 사용자에게 편리한 결제 경험을 제공하여 전환율을 높일 수 있는 가장 현실적이고 효율적인 방안으로 판단되었습니다.</li>
    <li>이후 해당 기능을 적용하여 사용자의 결제 과정에서 불편함을 최소화하고 보안 신뢰도를 높이는 등 UX 개선을 추진했습니다.</li>
  </ul>
</blockquote>

<h3 id="사내-공유">사내 공유</h3>
<ul>
  <li>문제를 구체화하여 우선 사내 구성원 분들께 해당 내용을 공유 드렸고, 많은 분들께서 이 문제에 대해 공감을 표현해주셨습니다.</li>
  <li>결국, 임원 분들 및 마케팅 팀원 분들과 함께 미팅을 하여 문제를 개선할 만한 <strong>액션 플랜을 논의</strong>하기 시작했습니다.
 <img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/7.png" alt="" /></li>
</ul>

<h3 id="데이터-분석의-한계">데이터 분석의 한계</h3>
<ul>
  <li>안타깝게도, <code class="language-plaintext highlighter-rouge">add_payment_info</code> 이벤트와 <code class="language-plaintext highlighter-rouge">purchase</code> 이벤트 사이에 발생한 사용자 행동까지는 데이터로 확인할 수 없었습니다.
    <ul>
      <li>당사가 사용 중인 이커머스 플랫폼의 Plan 하에서는 소스코드에 GTM 커스텀 이벤트 트리거를 삽입할 수 없었기 때문에 기본적인 GA4 이벤트 수집만 가능했기 때문입니다.</li>
    </ul>
  </li>
  <li>따라서 단순히 데이터만으로는 이 문제의 구체적인 원인을 해명할 수 없었습니다.</li>
  <li><strong>그래서 지금부터는 국내/해외 시장에 대한 안목이 높은 사내 구성원 분들의 직관적 판단이 중요해지기 시작했습니다.</strong></li>
</ul>

<h3 id="가설-설정">가설 설정</h3>

<ol>
  <li>깊은 논의 끝에, 다음과 같은 의견들이 공유되었습니다.
    <ul>
      <li><strong>가설 1</strong>: “결제 수단을 다양화해야 돼요. 잠재 구매 고객이 자신이 원하는 결제 수단을 찾지 못해 이탈했을 가능성이 클 거예요.”</li>
      <li><strong>가설 2</strong>: “간편 결제 서비스를 추가하는 건 어때요? 구매 의향이 줄어들기 전에 빠르게 결제가 마무리될 수 있을 거예요.”</li>
      <li><strong>가설 3</strong>: “가상자산 결제 방식을 지원하는 것도 고려해봐요. 우리 고객들의 특성상 선호도가 높을 것 같거든요.”</li>
      <li><strong>가설 4</strong>: “PG사의 결제 프로세스 UI를 개선해보는 것도 좋을 것 같아요.”</li>
    </ul>
  </li>
  <li>이 중, “<strong>간편 결제 서비스 추가하기</strong>“를 우선적으로 테스트하기로 결정했습니다.
    <ul>
      <li>실행 비용, 시장에 대한 안목 등 측면에서 현실적으로 가장 바람직한 액션이라고 느꼈기 때문입니다.</li>
    </ul>
  </li>
  <li>최종 가설 수립
    <blockquote>
      <p>“<strong>PayPal Express Checkout 기능을 도입하면 결제 프로세스 상에서의 전환율이 높아질 것이다!</strong>”</p>
    </blockquote>
  </li>
</ol>

<h3 id="액션-실행">액션 실행</h3>

<ol>
  <li>
    <p><strong>PayPal Express Checkout</strong>은 고객이 배송지, 이메일, 연락처는 물론, 신용카드 정보 조차도 일일이 입력하지 않은 상태에서, PayPal 로그인을 통해 기존에 저장된 정보를 토대로 빠르게 결제할 수 있는 기능입니다.</p>
  </li>
  <li>사실 당사는 연동된 PG사를 통해 이미 PayPal을 결제 수단을 제공하고 있었지만, 다음과 같은 불편함을 초래하고 있었던 것으로 추측했습니다.
    <ul>
      <li>“여러 가지 옵션 중 하나로만 표시되어 있으므로 눈에 잘 띄지 않았을 것이다.”</li>
      <li>“이미 배송지, 이메일, 연락처 정보를 입력했는데 다시 한 번 PayPal 로그인을 유도하는 것이 불필요한 시간 낭비로 느껴졌을 것이다.”
<img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/6.png" alt="" /></li>
    </ul>
  </li>
  <li>따라서 PayPal Express Checkout 기능을 다음의 측면에서 UX 향상 방법이라고 생각하게 되었습니다.
    <ul>
      <li><strong>고객의 구매 전환 단계를 단축하여 간편한 결제를 지원한다.</strong></li>
      <li><strong>개인정보를 일일이 입력하지 않아도 되므로, 보안에 대한 신뢰도를 높인다.</strong>
<img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/8.png" alt="" /></li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="5-results">5. Results</h1>
<blockquote>
  <ul>
    <li>PayPal Express Checkout 기능 도입 후, 결제 과정에서 이탈하던 문제가 크게 개선되어 <strong><code class="language-plaintext highlighter-rouge">add_payment_info</code>에서 <code class="language-plaintext highlighter-rouge">purchase</code>로 넘어가는 전환율이 이전보다 32%p 상승</strong>했습니다.</li>
    <li>이 조치는 결제 프로세스를 간소화하고 사용자 경험을 향상시켜 전환율을 원상태로 회복시켰을 뿐만 아니라, <strong>현재까지도 높은 수준을 유지</strong>하고 있습니다.</li>
    <li>이 결과는 결제 옵션의 다양화와 간편 결제 도입이 효과적인 전략임을 입증하며, 분석을 바탕으로 한 문제 해결이 매출 성과에 긍정적인 영향을 미쳤습니다.</li>
  </ul>
</blockquote>

<h3 id="결과">결과</h3>

<ul>
  <li>해당 액션을 실행한 후, <strong><code class="language-plaintext highlighter-rouge">add_payment_info</code>로부터 <code class="language-plaintext highlighter-rouge">purchase</code>로 넘어가는 지점의 전환율은 원상태로 회복되었을 뿐만 아니라 이전보다 훨씬 높은 수준을 기록했습니다.</strong></li>
  <li>2023년 8월말 현재까지도 여전히 높은 전환율 수준을 유지하고 있습니다.
    <details>
 <summary>View Query</summary>
 <div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">WITH</span>
    <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">event_date</span><span class="p">,</span>
          <span class="n">user_pseudo_id</span><span class="p">,</span>
          <span class="n">event_name</span>
       <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
       <span class="k">WHERE</span>
          <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
    <span class="p">),</span>

    <span class="n">CTE_funnel</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">event_date</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'view_item'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'begin_checkout'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'add_payment_info'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_users_cnt</span>
       <span class="k">FROM</span>
          <span class="n">CTE_raw</span>
       <span class="k">GROUP</span> <span class="k">BY</span>
          <span class="mi">1</span>
    <span class="p">),</span>

    <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">event_date</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">all_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cvr</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">view_item_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_cvr</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_cvr</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_cvr</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">purchase_users_cnt</span><span class="p">,</span> <span class="n">all_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_cvr</span>
       <span class="k">FROM</span>
          <span class="n">CTE_funnel</span>
       <span class="k">ORDER</span> <span class="k">BY</span>
          <span class="mi">1</span>
    <span class="p">)</span>

    <span class="k">SELECT</span>
       <span class="o">*</span>
    <span class="k">FROM</span>
       <span class="n">CTE_result</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
       <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
 </details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/9.png" alt="" /></p>
  </li>
</ul>

<h3 id="효과">효과</h3>

<ul>
  <li>해당 액션을 실행한 후, <strong><code class="language-plaintext highlighter-rouge">add_payment_info</code>로부터 <code class="language-plaintext highlighter-rouge">purchase</code>로 넘어가는 지점의 전환율은 기존에 비해 32%p 상승했습니다.</strong>
    <details>
 <summary>View Query</summary>
 <div>
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">WITH</span>
    <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">event_date</span><span class="p">,</span>
          <span class="n">user_pseudo_id</span><span class="p">,</span>
          <span class="n">event_name</span>
       <span class="k">FROM</span> <span class="nv">`project_id.dataset_id.events_*`</span>
       <span class="k">WHERE</span>
          <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'START DATE'</span><span class="p">)</span> <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'END DATE'</span><span class="p">)</span>
    <span class="p">),</span>

    <span class="n">CTE_funnel</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="k">CASE</span>
                <span class="k">WHEN</span> <span class="n">event_date</span> <span class="o">&lt;=</span> <span class="s1">'YYYY-MM-DD'</span> <span class="k">THEN</span> <span class="s1">'AS-IS'</span>
                <span class="k">ELSE</span> <span class="s1">'TO-BE'</span>
          <span class="k">END</span> <span class="k">AS</span> <span class="n">period</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">all_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'view_item'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">view_item_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'begin_checkout'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">begin_checkout_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'add_payment_info'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">add_payment_info_users_cnt</span><span class="p">,</span>
          <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_users_cnt</span>
       <span class="k">FROM</span>
          <span class="n">CTE_raw</span>
       <span class="k">GROUP</span> <span class="k">BY</span>
          <span class="mi">1</span>
    <span class="p">),</span>

    <span class="n">CTE_result</span> <span class="k">AS</span> <span class="p">(</span>
       <span class="k">SELECT</span>
          <span class="n">period</span><span class="p">,</span>
          <span class="n">SAFE_DIVIDE</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">purchase_users_cnt</span><span class="p">,</span> <span class="n">add_payment_info_users_cnt</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_cvr</span>
       <span class="k">FROM</span>
          <span class="n">CTE_funnel</span>
    <span class="p">)</span>

    <span class="k">SELECT</span>
       <span class="o">*</span>
    <span class="k">FROM</span>
       <span class="n">CTE_result</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
       <span class="mi">1</span>
</code></pre></div>        </div>
      </div>
 </details>
    <p><img src="/assets/2024-08-29-how-we-dramatically-improved-conversion-rates/10.png" alt="" /></p>
  </li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>

<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Language (Korean)" /><category term="Article (Project)" /><category term="Level (1. Beginner)" /><category term="Field (Data Analysis)" /><category term="Skills (SQL)" /><summary type="html"><![CDATA[“외부 요인으로 인해 증가한 신규 방문자 데이터를 분석하여 구매 전환율의 급상승을 달성했습니다. 데이터를 통해 신규 방문자 수와 이들의 구매 의향이 크게 증가했음을 발견했지만, 결제 단계에서 이탈률이 높다는 문제를 파악했습니다. 이에 결제 과정의 불편함이 주요 원인임을 가설로 설정하고, PayPal Express Checkout을 도입하여 사용자 경험을 개선했습니다. 그 결과, 결제 전환율이 32%p 상승하여 이전보다 훨씬 높은 수준을 기록했으며, 이는 지속적으로 유지되고 있습니다. 이를 통해 분석 기반의 문제 해결과 성과 향상을 이뤄냈습니다.”]]></summary></entry></feed>